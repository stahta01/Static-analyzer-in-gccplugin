In file included from ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:10:
./benchmarks/openssh-portable/leak_8/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_8/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_8/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_8/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_8/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c: In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: implicit declaration of function ‘key_parse_private_rsa1’; did you mean ‘key_parse_private_type’? [-Wimplicit-function-declaration]
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^~~~~~~~~~~~~~~~~~~~~~
      |                        key_parse_private_type
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: returning ‘int’ from a function with return type ‘Key *’ makes pointer from integer without a cast [-Wint-conversion]
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c: In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:157:29: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  157 |                         if (strcmp(passphrase, "") != 0) {
      |                             ^~~~~~
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   10 | #include "../openssh.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:33: warning: implicit declaration of function ‘debug2’ [-Wimplicit-function-declaration]
  162 |                                 debug2("no passphrase given, try next key");
      |                                 ^~~~~~
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c: In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:176:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  176 |         srand(time(NULL));
      |               ^~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.1%|          |
nothrow                          |      |      |      |      |     -1.1%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:load_identity_file=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 4
succs:= 8
succs:= 10
=======node_fun:key_load_private_type=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:key_parse_private_type=========

--------GIMPLE_SWITCH -------
succs:= 10
=======node_fun:key_parse_private_pem=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
succs:= 8
succs:= 9
succs:= 6
=======node_fun:key_free=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 8
succs:= 8
=======node_fun:key_new=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
# .MEM_21 = VDEF <.MEM_20>
_1 = time (0B);
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
# .MEM_32 = VDEF <.MEM_31>
private_19 = key_load_private_type (11, filename_17(D), "", 0B, &perm_ok);
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
# .MEM_35 = VDEF <.MEM_28>
private_25 = key_load_private_type (11, filename_17(D), passphrase_21(D), 0B, 0B);
# .MEM_34 = VDEF <.MEM_28>
debug2 ("no passphrase given, try next key");
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
# .MEM_17 = VDEF <.MEM_13>
ret_12 = key_parse_private_type (0B, type_8(D), passphrase_9(D), commentp_10(D));
# .MEM_17 = VDEF <.MEM_15(D)>
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
# .MEM_16 = VDEF <.MEM_15(D)>
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
# .MEM_18 = VDEF <.MEM_15(D)>
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
# .MEM_36 = VDEF <.MEM_35(D)>
_1 = rand ();
# .MEM_51 = VDEF <.MEM_36>
printf ("%s: PEM_read_PrivateKey failed\n", &__func__);
# .MEM_37 = VDEF <.MEM_36>
_3 = rand ();
# .MEM_38 = VDEF <.MEM_37>
prv_24 = key_new (11);
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
# .MEM_43 = VDEF <.MEM_42>
printf ("%s: RSA_blinding_on failed\n", &__func__);
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
# .MEM_45 = VDEF <.MEM_37>
_11 = rand ();
# .MEM_46 = VDEF <.MEM_45>
prv_33 = key_new (11);
# .MEM_47 = VDEF <.MEM_46>
_16 = malloc (24);
# .MEM_50 = VDEF <.MEM_45>
printf ("%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\n");
# .MEM_22 = VDEF <.MEM_14(D)>
printf ("key_free: key is NULL%s", "");
# .MEM_20 = VDEF <.MEM_14(D)>
printf ("key_free: bad key type %d", _6);
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:load_identity_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path load_identity_file  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:debug2========= [0m
[40;33m =======POP node_fun stack:debug2========= [0m
[40;42m =======pre add _ fucntion:key_load_private_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_private_type  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_parse_private_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_type  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_pem========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_pem  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_new  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:key_new========= [0m
[40;42m =======start_check_funciton:key_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
return k_5;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = k_5->type;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
printf ("key_new: bad key type %d", _2);
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->type = type_6(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:33:17: warning: use location
   33 |         k->type = type;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = k_5->type;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:18: warning: use location
   39 |         switch (k->type) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 11)
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
   39 |         switch (k->type) {
      |         ^
if (_1 == 11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
Cond in fucntion key_new basic block 2
 ================== possible direct basic block ================= 
from key_new basic block 3
 ================== possible direct basic block ================= 
from key_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->cert = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:38:17: warning: use location
   38 |         k->cert = NULL;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->rsa = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:37:16: warning: use location
   37 |         k->rsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->dsa = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:36:16: warning: use location
   36 |         k->dsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa_nid = -1;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:35:22: warning: use location
   35 |         k->ecdsa_nid = -1;
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:34:18: warning: use location
   34 |         k->ecdsa = NULL;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5 = calloc (1, 64);
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:32:13: warning: use location
   32 |         k = xcalloc(1, sizeof(*k));                             /* allocation site */
      |             ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1477f8 type <integer_type 0x7fd7cc1363f0 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159340
    type <pointer_type 0x7fd7cc138e70
        type <array_type 0x7fd7cc138dc8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126990 constant 200>
            unit-size <integer_cst 0x7fd7cc126978 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc138d20>
            pointer_to_this <pointer_type 0x7fd7cc138e70>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ea0 type <array_type 0x7fd7cc138dc8>
        readonly constant static "key_new: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_new========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;42m =======pre_check_funciton:key_parse_private_pem========= [0m
[40;42m =======start_check_funciton:key_parse_private_pem========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
key_free (prv_24);
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_8 = malloc (168);
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:28: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>
# .MEM_47 = VDEF <.MEM_46>
_16 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                          ^
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------
prv_33->type = 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:101:27: warning: use location
  101 |                 prv->type = KEY_DSA;
      |                           ^
_16 = malloc (24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:28: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_36 = VDEF <.MEM_35(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
if (_2 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
   87 |         if (__RANDBOOL) {
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
Cond in fucntion key_parse_private_pem basic block 2
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 3
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802f40
    type <pointer_type 0x7fd7cc13cbd0
        type <array_type 0x7fd7cc13cb28 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc606f18 constant 256>
            unit-size <integer_cst 0x7fd7cc624018 constant 32>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ca80>
            pointer_to_this <pointer_type 0x7fd7cc13cbd0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102d8 type <array_type 0x7fd7cc13cb28>
        readonly constant static "%s: PEM_read_PrivateKey failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_37 = VDEF <.MEM_36>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
if (_4 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 4
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 5
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147738 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 168>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_10 = _9 % 5;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:28: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
if (_10 == 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
Cond in fucntion key_parse_private_pem basic block 6
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 7
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_9 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:21: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159020
    type <pointer_type 0x7fd7cc13d000
        type <array_type 0x7fd7cc13cf18 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a50 constant 224>
            unit-size <integer_cst 0x7fd7cc126a38 constant 28>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ce70>
            pointer_to_this <pointer_type 0x7fd7cc13d000>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc610310 type <array_type 0x7fd7cc13cf18>
        readonly constant static "%s: RSA_blinding_on failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>
# .MEM_38 = VDEF <.MEM_37>
prv_24 = key_new (11);

 ================== trace ptable================== 
trace fucntion name:key_new 
[40;44m =======trace_function_path key_new  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---key_new-----
this other function ------key_new-----
 
 Start check Pointer Collect  

======================================================================
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
key_free (prv_24);
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>
# .MEM_45 = VDEF <.MEM_37>
_11 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_12 = _11 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
if (_12 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                   ^
if (_12 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 8
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 9
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_11 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147750 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159120
    type <pointer_type 0x7fd7cc13d2a0
        type <array_type 0x7fd7cc13d1f8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126960 constant 520>
            unit-size <integer_cst 0x7fd7cc126a68 constant 65>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d150>
            pointer_to_this <pointer_type 0x7fd7cc13d2a0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc14a790 type <array_type 0x7fd7cc13d1f8>
        readonly constant static "%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_pem========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_rsa1========= [0m
[40;33m =======POP node_fun stack:key_parse_private_rsa1========= [0m
[40;42m =======pre_check_funciton:key_parse_private_type========= [0m
[40;42m =======start_check_funciton:key_parse_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802e60
    type <pointer_type 0x7fd7cc13d5e8
        type <array_type 0x7fd7cc13d540 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126ac8 constant 240>
            unit-size <integer_cst 0x7fd7cc126ab0 constant 30>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d498>
            pointer_to_this <pointer_type 0x7fd7cc13d5e8>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102a0 type <array_type 0x7fd7cc13d540>
        readonly constant static "%s: cannot parse key type %d\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_type========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:key_load_private_type========= [0m
[40;42m =======start_check_funciton:key_load_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151480
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_load_private_type’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = _1 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:13: warning: use location
  134 |         if (__RANDBOOL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_load_private_type’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_2 == 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:12: warning: use location
  134 |         if (__RANDBOOL)
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:12: warning: use location
Cond in fucntion key_load_private_type basic block 2
 ================== possible direct basic block ================= 
from key_load_private_type basic block 3
 ================== possible direct basic block ================= 
from key_load_private_type basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_load_private_type’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:13: warning: use location
  134 |         if (__RANDBOOL)
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151480
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1476a8 type <pointer_type 0x7fd7cc13c888> constant 0>
[40;33m =======POP node_fun stack:key_load_private_type========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:load_identity_file========= [0m
[40;42m =======start_check_funciton:load_identity_file========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1475e8 type <integer_type 0x7fd7cc61b5e8 int> constant 11>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc60ecf0
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_28>
return 0;
In function ‘load_identity_file’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_3 = _2 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:21: warning: use location
  154 |                 if (__RANDBOOL)
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_28>
return 0;
In function ‘load_identity_file’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_3 == 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
Cond in fucntion load_identity_file basic block 4
 ================== possible direct basic block ================= 
from load_identity_file basic block 11
 ================== possible direct basic block ================= 
from load_identity_file basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_28>
return 0;
In function ‘load_identity_file’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_2 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:21: warning: use location
  154 |                 if (__RANDBOOL)
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc60ecf0
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802d20
    type <pointer_type 0x7fd7cc13da80
        type <array_type 0x7fd7cc13d9d8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a80 constant 272>
            unit-size <integer_cst 0x7fd7cc126af8 constant 34>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d930>
            pointer_to_this <pointer_type 0x7fd7cc13da80>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6100e0 type <array_type 0x7fd7cc13d9d8>
        readonly constant static "no passphrase given, try next key\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:12 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:12 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:load_identity_file========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc60e8b8
    type <pointer_type 0x7fd7cc13e0a8
        type <record_type 0x7fd7cc13e000 Identity BLK
            size <integer_cst 0x7fd7cc6db0a8 constant 448>
            unit-size <integer_cst 0x7fd7cc126840 constant 56>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc13df18 fields <field_decl 0x7fd7cc13b7b8 next> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13e0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cceaec60 id>
    def_stmt id_14 = malloc (56);
    version:14
    ptr-info 0x7fd7cc147990>
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_10 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with id ========= [0m
[40;36m ======= relate stmt argument:id ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
id_14->key = _6;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:17: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_7 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_8 = _7->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
printf ("%d\n", _8);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:4 
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^
if (_2 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location

 ================== find cond branch ================= 
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_9 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:14: warning: use location
  180 |         if(id->key != NULL)
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
if (_9 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_5 = id_14->filename;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
id_14->filename = _3;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:177:22: warning: use location
  177 |         id->filename = argv[0];
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = id_14->userprovided;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
id_14 = malloc (56);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
id_14 = malloc (56);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:175:24: warning: use location
  175 |         Identity *id = malloc(sizeof(Identity));
      |                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc60e8b8
    type <pointer_type 0x7fd7cc13e0a8
        type <record_type 0x7fd7cc13e000 Identity BLK
            size <integer_cst 0x7fd7cc6db0a8 constant 448>
            unit-size <integer_cst 0x7fd7cc126840 constant 56>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc13df18 fields <field_decl 0x7fd7cc13b7b8 next> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13e0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cceaec60 id>
    def_stmt id_14 = malloc (56);
    version:14
    ptr-info 0x7fd7cc147990>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147570 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 56>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc606fc0 type <pointer_type 0x7fd7cc622000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc60e630
    type <integer_type 0x7fd7cc61b690 unsigned int public unsigned SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b690 precision:32 min <integer_cst 0x7fd7cc606e28 0> max <integer_cst 0x7fd7cc606de0 4294967295>
        pointer_to_this <pointer_type 0x7fd7cc627690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:176:9: warning: use location
  176 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
# .MEM_22 = VDEF <.MEM_21>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:176:9: warning: use location
  176 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc60e630
    type <integer_type 0x7fd7cc61b690 unsigned int public unsigned SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b690 precision:32 min <integer_cst 0x7fd7cc606e28 0> max <integer_cst 0x7fd7cc606de0 4294967295>
        pointer_to_this <pointer_type 0x7fd7cc627690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc60e708
    type <pointer_type 0x7fd7cc12fd20
        type <integer_type 0x7fd7cc12fc78 char public QI
            size <integer_cst 0x7fd7cc606ca8 constant 8>
            unit-size <integer_cst 0x7fd7cc606cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b3f0 precision:8 min <integer_cst 0x7fd7cc126738 -128> max <integer_cst 0x7fd7cc126720 127>
            pointer_to_this <pointer_type 0x7fd7cc12fd20>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
        pointer_to_this <pointer_type 0x7fd7cc12fdc8>>
   
    def_stmt _5 = id_14->filename;
    version:5
    ptr-info 0x7fd7cc147900>
# VUSE <.MEM_23>
_5 = id_14->filename;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
this stmt is child function---load_identity_file-----

 ================== trace ================== 
trace fucntion name:load_identity_file 
[40;44m =======trace_function_path load_identity_file  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:load_identity_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:debug2========= [0m
[40;46m =======add node_fun stack:debug2========= [0m
[40;42m =======pre add _ fucntion:key_load_private_type========= [0m
[40;46m =======add node_fun stack:key_load_private_type========= [0m
[40;44m =======trace_function_path key_load_private_type  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:key_load_private_type========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_parse_private_type========= [0m
[40;46m =======add node_fun stack:key_parse_private_type========= [0m
[40;44m =======trace_function_path key_parse_private_type  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:key_parse_private_type========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_pem========= [0m
[40;46m =======add node_fun stack:key_parse_private_pem========= [0m
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :4========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_private_rsa1========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
id_14->key = _6;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:17: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                 ^
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_10 = id_14->key;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_10 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:7 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_7 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_7 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_8 = _7->rsa;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_8 = _7->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
printf ("%d\n", _8);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:7 
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^
if (_2 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location

 ================== find cond branch ================= 
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
[40;32m    HAS FREE STMT count:8 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_9 = id_14->key;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_9 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:14: warning: use location
  180 |         if(id->key != NULL)
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != 0B)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
if (_9 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_5 = id_14->filename;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_5 = id_14->filename;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
id_14->filename = _3;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
id_14->filename = _3;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:177:22: warning: use location
  177 |         id->filename = argv[0];
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23>
_4 = id_14->userprovided;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = id_14->userprovided;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc60e708
    type <pointer_type 0x7fd7cc12fd20
        type <integer_type 0x7fd7cc12fc78 char public QI
            size <integer_cst 0x7fd7cc606ca8 constant 8>
            unit-size <integer_cst 0x7fd7cc606cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b3f0 precision:8 min <integer_cst 0x7fd7cc126738 -128> max <integer_cst 0x7fd7cc126720 127>
            pointer_to_this <pointer_type 0x7fd7cc12fd20>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
        pointer_to_this <pointer_type 0x7fd7cc12fdc8>>
   
    def_stmt _5 = id_14->filename;
    version:5
    ptr-info 0x7fd7cc147900>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# .MEM_25 = VDEF <.MEM_24>
id_14->key = _6;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:17: warning: use location
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# VUSE <.MEM_26>
_10 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# VUSE <.MEM_25>
_7 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# VUSE <.MEM_25>
_8 = _7->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# .MEM_26 = VDEF <.MEM_25>
printf ("%d\n", _8);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:9: warning: use location
  179 |         __USE(id->key->rsa);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_2 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:22: warning: use location
   61 |                 if (k->rsa != NULL)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
if (_2 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:61:20: warning: use location
   61 |                 if (k->rsa != NULL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: Use after free error!: free location 
  182 |         free(id);
      |         ^
# VUSE <.MEM_14(D)>
_3 = k_10(D)->rsa;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:31: warning: use location
   62 |                         free(k->rsa);
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: Use after free error!: free location 
  181 |                 key_free(id->key);
      |                 ^
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
# VUSE <.MEM_26>
_9 = id_14->key;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:14: warning: use location
  180 |         if(id->key != NULL)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_24 = VDEF <.MEM_23>
_6 = load_identity_file (_5, _4);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:178:19: warning: Use after free error!: free location 
  178 |         id->key = load_identity_file(id->filename, id->userprovided);
      |                   ^
if (_9 != 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:180:11: warning: use location
  180 |         if(id->key != NULL)
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802ba0
    type <pointer_type 0x7fd7cc13e3f0
        type <array_type 0x7fd7cc13e348 type <integer_type 0x7fd7cc12fc78 char>
            SI
            size <integer_cst 0x7fd7cc606df8 constant 32>
            unit-size <integer_cst 0x7fd7cc606e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13e2a0>
            pointer_to_this <pointer_type 0x7fd7cc13e3f0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc802b80 type <array_type 0x7fd7cc13e348>
        readonly constant static "%d\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:2 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:2 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:179:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc60e870
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = id_14->key;
    version:10
    ptr-info 0x7fd7cc147978>
# VUSE <.MEM_26>
_10 = id_14->key;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
# .MEM_27 = VDEF <.MEM_26>
key_free (_10);
key_free (_10);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:181:17: warning: use location
  181 |                 key_free(id->key);
      |                 ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc60e870
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = id_14->key;
    version:10
    ptr-info 0x7fd7cc147978>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_18>
free (id_14);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:182:9: warning: use location
  182 |         free(id);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:load_identity_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path load_identity_file  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:debug2========= [0m
[40;33m =======POP node_fun stack:debug2========= [0m
[40;42m =======pre add _ fucntion:key_load_private_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_private_type  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_parse_private_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_type  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_pem========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_pem  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_new  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:key_new========= [0m
[40;42m =======start_check_funciton:key_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
return k_5;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = k_5->type;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
printf ("key_new: bad key type %d", _2);
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->type = type_6(D);
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:33:17: warning: use location
   33 |         k->type = type;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = k_5->type;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:18: warning: use location
   39 |         switch (k->type) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 11)
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
   39 |         switch (k->type) {
      |         ^
if (_1 == 11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
Cond in fucntion key_new basic block 2
 ================== possible direct basic block ================= 
from key_new basic block 3
 ================== possible direct basic block ================= 
from key_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->cert = 0B;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:38:17: warning: use location
   38 |         k->cert = NULL;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->rsa = 0B;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:37:16: warning: use location
   37 |         k->rsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->dsa = 0B;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:36:16: warning: use location
   36 |         k->dsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa_nid = -1;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:35:22: warning: use location
   35 |         k->ecdsa_nid = -1;
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa = 0B;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:34:18: warning: use location
   34 |         k->ecdsa = NULL;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5 = calloc (1, 64);
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:32:13: warning: use location
   32 |         k = xcalloc(1, sizeof(*k));                             /* allocation site */
      |             ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1477f8 type <integer_type 0x7fd7cc1363f0 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159340
    type <pointer_type 0x7fd7cc138e70
        type <array_type 0x7fd7cc138dc8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126990 constant 200>
            unit-size <integer_cst 0x7fd7cc126978 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc138d20>
            pointer_to_this <pointer_type 0x7fd7cc138e70>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ea0 type <array_type 0x7fd7cc138dc8>
        readonly constant static "key_new: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_new========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;42m =======pre_check_funciton:key_parse_private_pem========= [0m
[40;42m =======start_check_funciton:key_parse_private_pem========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
key_free (prv_24);
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_8 = malloc (168);
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:28: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>
# .MEM_47 = VDEF <.MEM_46>
_16 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                          ^
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------
prv_33->type = 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:101:27: warning: use location
  101 |                 prv->type = KEY_DSA;
      |                           ^
_16 = malloc (24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:28: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_36 = VDEF <.MEM_35(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
if (_2 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
   87 |         if (__RANDBOOL) {
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
Cond in fucntion key_parse_private_pem basic block 2
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 3
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802f40
    type <pointer_type 0x7fd7cc13cbd0
        type <array_type 0x7fd7cc13cb28 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc606f18 constant 256>
            unit-size <integer_cst 0x7fd7cc624018 constant 32>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ca80>
            pointer_to_this <pointer_type 0x7fd7cc13cbd0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102d8 type <array_type 0x7fd7cc13cb28>
        readonly constant static "%s: PEM_read_PrivateKey failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_37 = VDEF <.MEM_36>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
if (_4 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 4
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 5
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147738 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 168>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_10 = _9 % 5;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:28: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
if (_10 == 0)
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
Cond in fucntion key_parse_private_pem basic block 6
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 7
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_9 = rand ();
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:21: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159020
    type <pointer_type 0x7fd7cc13d000
        type <array_type 0x7fd7cc13cf18 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a50 constant 224>
            unit-size <integer_cst 0x7fd7cc126a38 constant 28>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ce70>
            pointer_to_this <pointer_type 0x7fd7cc13d000>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc610310 type <array_type 0x7fd7cc13cf18>
        readonly constant static "%s: RSA_blinding_on failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>
# .MEM_38 = VDEF <.MEM_37>
prv_24 = key_new (11);

 ================== trace ptable================== 
trace fucntion name:key_new 
[40;44m =======trace_function_path key_new  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---key_new-----
this other function ------key_new-----
 
 Start check Pointer Collect  

======================================================================
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
key_free (prv_24);
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>
# .MEM_45 = VDEF <.MEM_37>
_11 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_12 = _11 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
if (_12 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                   ^
if (_12 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 8
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 9
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_11 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147750 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159120
    type <pointer_type 0x7fd7cc13d2a0
        type <array_type 0x7fd7cc13d1f8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126960 constant 520>
            unit-size <integer_cst 0x7fd7cc126a68 constant 65>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d150>
            pointer_to_this <pointer_type 0x7fd7cc13d2a0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc14a790 type <array_type 0x7fd7cc13d1f8>
        readonly constant static "%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_pem========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_rsa1========= [0m
[40;33m =======POP node_fun stack:key_parse_private_rsa1========= [0m
[40;42m =======pre_check_funciton:key_parse_private_type========= [0m
[40;42m =======start_check_funciton:key_parse_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802e60
    type <pointer_type 0x7fd7cc13d5e8
        type <array_type 0x7fd7cc13d540 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126ac8 constant 240>
            unit-size <integer_cst 0x7fd7cc126ab0 constant 30>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d498>
            pointer_to_this <pointer_type 0x7fd7cc13d5e8>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102a0 type <array_type 0x7fd7cc13d540>
        readonly constant static "%s: cannot parse key type %d\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_type========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:key_load_private_type========= [0m
[40;42m =======start_check_funciton:key_load_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151480
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_load_private_type’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = _1 % 2;
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:13: warning: use location
  134 |         if (__RANDBOOL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_load_private_type’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_2 == 1)
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:12: warning: use location
  134 |         if (__RANDBOOL)
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:12: warning: use location
Cond in fucntion key_load_private_type basic block 2
 ================== possible direct basic block ================= 
from key_load_private_type basic block 3
 ================== possible direct basic block ================= 
from key_load_private_type basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_load_private_type’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = rand ();
In function ‘load_identity_file’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:13: warning: use location
  134 |         if (__RANDBOOL)
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151480
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1476a8 type <pointer_type 0x7fd7cc13c888> constant 0>
[40;33m =======POP node_fun stack:key_load_private_type========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:load_identity_file========= [0m
[40;42m =======start_check_funciton:load_identity_file========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1475e8 type <integer_type 0x7fd7cc61b5e8 int> constant 11>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc60ecf0
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_3 = _2 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:21: warning: use location
  154 |                 if (__RANDBOOL)
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
Cond in fucntion load_identity_file basic block 4
 ================== possible direct basic block ================= 
from load_identity_file basic block 11
 ================== possible direct basic block ================= 
from load_identity_file basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
_2 = rand ();
bb index := 4
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================
_2 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:21: warning: use location
  154 |                 if (__RANDBOOL)
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc60ecf0
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802d20
    type <pointer_type 0x7fd7cc13da80
        type <array_type 0x7fd7cc13d9d8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a80 constant 272>
            unit-size <integer_cst 0x7fd7cc126af8 constant 34>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d930>
            pointer_to_this <pointer_type 0x7fd7cc13da80>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6100e0 type <array_type 0x7fd7cc13d9d8>
        readonly constant static "no passphrase given, try next key\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:12 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:12 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:162:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:load_identity_file========= [0m
[40;44m =======node_fun:key_load_private_type========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_load_private_type  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_parse_private_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_type  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_pem========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_pem  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_new  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:key_new========= [0m
[40;42m =======start_check_funciton:key_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
return k_5;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = k_5->type;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
printf ("key_new: bad key type %d", _2);
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->type = type_6(D);
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:33:17: warning: use location
   33 |         k->type = type;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = k_5->type;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:18: warning: use location
   39 |         switch (k->type) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 11)
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
   39 |         switch (k->type) {
      |         ^
if (_1 == 11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
Cond in fucntion key_new basic block 2
 ================== possible direct basic block ================= 
from key_new basic block 3
 ================== possible direct basic block ================= 
from key_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->cert = 0B;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:38:17: warning: use location
   38 |         k->cert = NULL;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->rsa = 0B;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:37:16: warning: use location
   37 |         k->rsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->dsa = 0B;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:36:16: warning: use location
   36 |         k->dsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa_nid = -1;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:35:22: warning: use location
   35 |         k->ecdsa_nid = -1;
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa = 0B;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:34:18: warning: use location
   34 |         k->ecdsa = NULL;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5 = calloc (1, 64);
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:32:13: warning: use location
   32 |         k = xcalloc(1, sizeof(*k));                             /* allocation site */
      |             ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1477f8 type <integer_type 0x7fd7cc1363f0 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159340
    type <pointer_type 0x7fd7cc138e70
        type <array_type 0x7fd7cc138dc8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126990 constant 200>
            unit-size <integer_cst 0x7fd7cc126978 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc138d20>
            pointer_to_this <pointer_type 0x7fd7cc138e70>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ea0 type <array_type 0x7fd7cc138dc8>
        readonly constant static "key_new: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_new========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;42m =======pre_check_funciton:key_parse_private_pem========= [0m
[40;42m =======start_check_funciton:key_parse_private_pem========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
key_free (prv_24);
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_8 = malloc (168);
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:28: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>
# .MEM_47 = VDEF <.MEM_46>
_16 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                          ^
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------
prv_33->type = 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:101:27: warning: use location
  101 |                 prv->type = KEY_DSA;
      |                           ^
_16 = malloc (24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:28: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_36 = VDEF <.MEM_35(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
if (_2 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
   87 |         if (__RANDBOOL) {
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
Cond in fucntion key_parse_private_pem basic block 2
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 3
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802f40
    type <pointer_type 0x7fd7cc13cbd0
        type <array_type 0x7fd7cc13cb28 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc606f18 constant 256>
            unit-size <integer_cst 0x7fd7cc624018 constant 32>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ca80>
            pointer_to_this <pointer_type 0x7fd7cc13cbd0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102d8 type <array_type 0x7fd7cc13cb28>
        readonly constant static "%s: PEM_read_PrivateKey failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_37 = VDEF <.MEM_36>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
if (_4 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 4
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 5
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147738 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 168>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_10 = _9 % 5;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:28: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
if (_10 == 0)
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
Cond in fucntion key_parse_private_pem basic block 6
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 7
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_9 = rand ();
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:21: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159020
    type <pointer_type 0x7fd7cc13d000
        type <array_type 0x7fd7cc13cf18 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a50 constant 224>
            unit-size <integer_cst 0x7fd7cc126a38 constant 28>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ce70>
            pointer_to_this <pointer_type 0x7fd7cc13d000>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc610310 type <array_type 0x7fd7cc13cf18>
        readonly constant static "%s: RSA_blinding_on failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>
# .MEM_38 = VDEF <.MEM_37>
prv_24 = key_new (11);

 ================== trace ptable================== 
trace fucntion name:key_new 
[40;44m =======trace_function_path key_new  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---key_new-----
this other function ------key_new-----
 
 Start check Pointer Collect  

======================================================================
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
key_free (prv_24);
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_load_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>
# .MEM_45 = VDEF <.MEM_37>
_11 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_12 = _11 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
if (_12 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                   ^
if (_12 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 8
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 9
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_11 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147750 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159120
    type <pointer_type 0x7fd7cc13d2a0
        type <array_type 0x7fd7cc13d1f8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126960 constant 520>
            unit-size <integer_cst 0x7fd7cc126a68 constant 65>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d150>
            pointer_to_this <pointer_type 0x7fd7cc13d2a0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc14a790 type <array_type 0x7fd7cc13d1f8>
        readonly constant static "%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_pem========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_rsa1========= [0m
[40;33m =======POP node_fun stack:key_parse_private_rsa1========= [0m
[40;42m =======pre_check_funciton:key_parse_private_type========= [0m
[40;42m =======start_check_funciton:key_parse_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802e60
    type <pointer_type 0x7fd7cc13d5e8
        type <array_type 0x7fd7cc13d540 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126ac8 constant 240>
            unit-size <integer_cst 0x7fd7cc126ab0 constant 30>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d498>
            pointer_to_this <pointer_type 0x7fd7cc13d5e8>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102a0 type <array_type 0x7fd7cc13d540>
        readonly constant static "%s: cannot parse key type %d\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_type========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:key_load_private_type========= [0m
[40;42m =======start_check_funciton:key_load_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151480
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 % 2;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = _1 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:13: warning: use location
  134 |         if (__RANDBOOL)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 1)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_2 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:12: warning: use location
  134 |         if (__RANDBOOL)
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:12: warning: use location
Cond in fucntion key_load_private_type basic block 2
 ================== possible direct basic block ================= 
from key_load_private_type basic block 3
 ================== possible direct basic block ================= 
from key_load_private_type basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = rand ();
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:134:13: warning: use location
  134 |         if (__RANDBOOL)
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151480
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1476a8 type <pointer_type 0x7fd7cc13c888> constant 0>
[40;33m =======POP node_fun stack:key_load_private_type========= [0m
[40;44m =======node_fun:key_parse_private_type========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_parse_private_type  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_pem========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_private_pem  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_new  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:key_new========= [0m
[40;42m =======start_check_funciton:key_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
return k_5;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = k_5->type;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
printf ("key_new: bad key type %d", _2);
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->type = type_6(D);
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:33:17: warning: use location
   33 |         k->type = type;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = k_5->type;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:18: warning: use location
   39 |         switch (k->type) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 11)
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
   39 |         switch (k->type) {
      |         ^
if (_1 == 11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
Cond in fucntion key_new basic block 2
 ================== possible direct basic block ================= 
from key_new basic block 3
 ================== possible direct basic block ================= 
from key_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->cert = 0B;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:38:17: warning: use location
   38 |         k->cert = NULL;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->rsa = 0B;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:37:16: warning: use location
   37 |         k->rsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->dsa = 0B;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:36:16: warning: use location
   36 |         k->dsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa_nid = -1;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:35:22: warning: use location
   35 |         k->ecdsa_nid = -1;
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa = 0B;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:34:18: warning: use location
   34 |         k->ecdsa = NULL;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5 = calloc (1, 64);
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:32:13: warning: use location
   32 |         k = xcalloc(1, sizeof(*k));                             /* allocation site */
      |             ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1477f8 type <integer_type 0x7fd7cc1363f0 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159340
    type <pointer_type 0x7fd7cc138e70
        type <array_type 0x7fd7cc138dc8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126990 constant 200>
            unit-size <integer_cst 0x7fd7cc126978 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc138d20>
            pointer_to_this <pointer_type 0x7fd7cc138e70>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ea0 type <array_type 0x7fd7cc138dc8>
        readonly constant static "key_new: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_new========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;42m =======pre_check_funciton:key_parse_private_pem========= [0m
[40;42m =======start_check_funciton:key_parse_private_pem========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
key_free (prv_24);
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_8 = malloc (168);
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:28: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>
# .MEM_47 = VDEF <.MEM_46>
_16 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                          ^
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------
prv_33->type = 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:101:27: warning: use location
  101 |                 prv->type = KEY_DSA;
      |                           ^
_16 = malloc (24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:28: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_36 = VDEF <.MEM_35(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
if (_2 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
   87 |         if (__RANDBOOL) {
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
Cond in fucntion key_parse_private_pem basic block 2
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 3
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802f40
    type <pointer_type 0x7fd7cc13cbd0
        type <array_type 0x7fd7cc13cb28 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc606f18 constant 256>
            unit-size <integer_cst 0x7fd7cc624018 constant 32>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ca80>
            pointer_to_this <pointer_type 0x7fd7cc13cbd0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102d8 type <array_type 0x7fd7cc13cb28>
        readonly constant static "%s: PEM_read_PrivateKey failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_37 = VDEF <.MEM_36>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
if (_4 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 4
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 5
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147738 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 168>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_10 = _9 % 5;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:28: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
if (_10 == 0)
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
Cond in fucntion key_parse_private_pem basic block 6
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 7
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_9 = rand ();
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:21: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159020
    type <pointer_type 0x7fd7cc13d000
        type <array_type 0x7fd7cc13cf18 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a50 constant 224>
            unit-size <integer_cst 0x7fd7cc126a38 constant 28>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ce70>
            pointer_to_this <pointer_type 0x7fd7cc13d000>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc610310 type <array_type 0x7fd7cc13cf18>
        readonly constant static "%s: RSA_blinding_on failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>
# .MEM_38 = VDEF <.MEM_37>
prv_24 = key_new (11);

 ================== trace ptable================== 
trace fucntion name:key_new 
[40;44m =======trace_function_path key_new  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---key_new-----
this other function ------key_new-----
 
 Start check Pointer Collect  

======================================================================
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
key_free (prv_24);
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
In function ‘key_parse_private_pem’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
In function ‘key_parse_private_type’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>
# .MEM_45 = VDEF <.MEM_37>
_11 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_12 = _11 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
if (_12 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                   ^
if (_12 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 8
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 9
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_11 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147750 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159120
    type <pointer_type 0x7fd7cc13d2a0
        type <array_type 0x7fd7cc13d1f8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126960 constant 520>
            unit-size <integer_cst 0x7fd7cc126a68 constant 65>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d150>
            pointer_to_this <pointer_type 0x7fd7cc13d2a0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc14a790 type <array_type 0x7fd7cc13d1f8>
        readonly constant static "%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_pem========= [0m
[40;42m =======pre add _ fucntion:key_parse_private_rsa1========= [0m
[40;33m =======POP node_fun stack:key_parse_private_rsa1========= [0m
[40;42m =======pre_check_funciton:key_parse_private_type========= [0m
[40;42m =======start_check_funciton:key_parse_private_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:120:24: warning: use location
  120 |                 return key_parse_private_pem(blob, type, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_pem-----

 ================== trace ================== 
trace fucntion name:key_parse_private_pem 
[40;44m =======trace_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:key_parse_private_pem========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;46m =======add node_fun stack:key_new========= [0m
[40;44m =======trace_function_path key_new  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;46m =======add node_fun stack:key_free========= [0m
[40;44m =======trace_function_path key_free  function_call count: 3 level :1========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with blob ========= [0m
[40;36m ======= relate stmt argument:blob ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <_13(3), _11(4), 0B(5)>
lto1: warning: use location
this stmt have mutiple branch --------
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:17: warning: use location
  122 |                 printf("%s: cannot parse key type %d\n", __func__, type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
  115 |                 return key_parse_private_rsa1(blob, passphrase, commentp);
      |                        ^
this stmt is child function---key_parse_private_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_private_rsa1 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long int) _1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location
_13 = (struct Key *) _2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:115:24: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151900
    type <pointer_type 0x7fd7cc13c888
        type <record_type 0x7fd7cc1389d8 Buffer BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc138930 fields <field_decl 0x7fd7cc13ab48 buf> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc13c888>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd7cc140680 blob>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fd7cc147ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802e60
    type <pointer_type 0x7fd7cc13d5e8
        type <array_type 0x7fd7cc13d540 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126ac8 constant 240>
            unit-size <integer_cst 0x7fd7cc126ab0 constant 30>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d498>
            pointer_to_this <pointer_type 0x7fd7cc13d5e8>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102a0 type <array_type 0x7fd7cc13d540>
        readonly constant static "%s: cannot parse key type %d\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:122:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_type========= [0m
[40;44m =======node_fun:key_parse_private_pem========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_parse_private_pem  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:key_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_new  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:key_new========= [0m
[40;42m =======start_check_funciton:key_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
return k_5;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = k_5->type;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
printf ("key_new: bad key type %d", _2);
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->type = type_6(D);
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:33:17: warning: use location
   33 |         k->type = type;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = k_5->type;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:18: warning: use location
   39 |         switch (k->type) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 11)
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
   39 |         switch (k->type) {
      |         ^
if (_1 == 11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
Cond in fucntion key_new basic block 2
 ================== possible direct basic block ================= 
from key_new basic block 3
 ================== possible direct basic block ================= 
from key_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->cert = 0B;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:38:17: warning: use location
   38 |         k->cert = NULL;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->rsa = 0B;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:37:16: warning: use location
   37 |         k->rsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->dsa = 0B;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:36:16: warning: use location
   36 |         k->dsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa_nid = -1;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:35:22: warning: use location
   35 |         k->ecdsa_nid = -1;
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa = 0B;
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:34:18: warning: use location
   34 |         k->ecdsa = NULL;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_28>
return 0;
In function ‘key_new’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5 = calloc (1, 64);
In function ‘key_parse_private_pem’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:32:13: warning: use location
   32 |         k = xcalloc(1, sizeof(*k));                             /* allocation site */
      |             ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1477f8 type <integer_type 0x7fd7cc1363f0 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159340
    type <pointer_type 0x7fd7cc138e70
        type <array_type 0x7fd7cc138dc8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126990 constant 200>
            unit-size <integer_cst 0x7fd7cc126978 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc138d20>
            pointer_to_this <pointer_type 0x7fd7cc138e70>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ea0 type <array_type 0x7fd7cc138dc8>
        readonly constant static "key_new: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_new========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;42m =======pre_check_funciton:key_parse_private_pem========= [0m
[40;42m =======start_check_funciton:key_parse_private_pem========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
_8 = malloc (168);
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_8 = malloc (168);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:28: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e10
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _8 = malloc (168);
    version:8
    ptr-info 0x7fd7cc147b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>
# .MEM_47 = VDEF <.MEM_46>
_16 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                          ^
prv_33->dsa = _16;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:26: warning: use location
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------
prv_33->type = 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:101:27: warning: use location
  101 |                 prv->type = KEY_DSA;
      |                           ^
_16 = malloc (24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:100:28: warning: use location
  100 |                 prv->dsa = DSA_new();   /* allocation site */
      |                            ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157090
    type <pointer_type 0x7fd7cc622000
        type <void_type 0x7fd7cc61bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd7cc622000>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd7cc6279d8>>
   
    def_stmt _16 = malloc (24);
    version:16
    ptr-info 0x7fd7cc147b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_36 = VDEF <.MEM_35(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
if (_2 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
   87 |         if (__RANDBOOL) {
      |            ^
if (_2 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:12: warning: use location
Cond in fucntion key_parse_private_pem basic block 2
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 3
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:87:13: warning: use location
   87 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151c18
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _1 = rand ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc802f40
    type <pointer_type 0x7fd7cc13cbd0
        type <array_type 0x7fd7cc13cb28 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc606f18 constant 256>
            unit-size <integer_cst 0x7fd7cc624018 constant 32>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ca80>
            pointer_to_this <pointer_type 0x7fd7cc13cbd0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc6102d8 type <array_type 0x7fd7cc13cb28>
        readonly constant static "%s: PEM_read_PrivateKey failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:88:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_37 = VDEF <.MEM_36>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
if (_4 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 4
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 5
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:20: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ca8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147738 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 168>

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 % 5;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_10 = _9 % 5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:28: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
Cond in fucntion key_parse_private_pem basic block 6
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 7
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_9 = rand ();
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
_9 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:21: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151e58
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _9 = rand ();
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159020
    type <pointer_type 0x7fd7cc13d000
        type <array_type 0x7fd7cc13cf18 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126a50 constant 224>
            unit-size <integer_cst 0x7fd7cc126a38 constant 28>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13ce70>
            pointer_to_this <pointer_type 0x7fd7cc13d000>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc610310 type <array_type 0x7fd7cc13cf18>
        readonly constant static "%s: RSA_blinding_on failed\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:94:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>
# .MEM_38 = VDEF <.MEM_37>
prv_24 = key_new (11);

 ================== trace ptable================== 
trace fucntion name:key_new 
[40;44m =======trace_function_path key_new  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:key_new========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---key_new-----
this other function ------key_new-----
 
 Start check Pointer Collect  

======================================================================
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
bb index := 7
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: use location
   95 |                         key_free(prv);
      |                         ^
this stmt is child function---key_free-----

 ================== trace ================== 
trace fucntion name:key_free 
[40;44m =======trace_function_path key_free  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_14(D)>
free (_3);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:62:25: warning: use location
   62 |                         free(k->rsa);
      |                         ^
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
free (_5);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:69:25: warning: use location
   69 |                         free(k->dsa);
      |                         ^
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_13>
free (k_10(D));
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:78:9: warning: use location
   78 |         free(k);
      |         ^
[40;36m ======= node_fun:key_free========= [0m
[40;36m ======= find relate stmt with prv ========= [0m
[40;36m ======= relate stmt argument:prv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
prv_24->type = 1;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->type = 1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:92:27: warning: use location
   92 |                 prv->type = KEY_RSA;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
prv_24->rsa = _8;
bb index := 6
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================
prv_24->rsa = _8;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:91:26: warning: use location
   91 |                 prv->rsa = RSA_new();   /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157168
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc14e7e0 prv>
    def_stmt prv_24 = key_new (11);
    version:24
    ptr-info 0x7fd7cc147b88>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
key_free (prv_24);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:95:25: warning: Use after free error!: free location 
   95 |                         key_free(prv);
      |                         ^
prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 6
if (_10 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:93:20: warning: use location
   93 |                 if (rand() % 5 == 0) {
      |                    ^
	relate logic:= 1
succs:= 5
if (_7 != 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:89:31: warning: use location
   89 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_RSA)) {
      |                               ^
	relate logic:= 0
succs:= 4
if (_3 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:154:20: warning: use location
  154 |                 if (__RANDBOOL)
      |                    ^
	relate logic:= 1
succs:= 3
if (private_19 == 0B)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:153:12: warning: use location
  153 |         if (private == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:150:12: warning: use location
  150 |         if (!perm_ok) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>
# .MEM_45 = VDEF <.MEM_37>
_11 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_12 = _11 % 2;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
if (_12 == 1)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                   ^
if (_12 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:19: warning: use location
Cond in fucntion key_parse_private_pem basic block 8
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 9
 ================== possible direct basic block ================= 
from key_parse_private_pem basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_11 = rand ();
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:98:20: warning: use location
   98 |         } else if (__RANDBOOL && (type == KEY_UNSPEC || type==KEY_DSA)) {
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc151ee8
    type <integer_type 0x7fd7cc61b5e8 int public SI
        size <integer_cst 0x7fd7cc606df8 constant 32>
        unit-size <integer_cst 0x7fd7cc606e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc61b5e8 precision:32 min <integer_cst 0x7fd7cc606db0 -2147483648> max <integer_cst 0x7fd7cc606dc8 2147483647>
        pointer_to_this <pointer_type 0x7fd7cc6229d8>>
   
    def_stmt _11 = rand ();
    version:11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc147750 type <integer_type 0x7fd7cc61b7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159120
    type <pointer_type 0x7fd7cc13d2a0
        type <array_type 0x7fd7cc13d1f8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126960 constant 520>
            unit-size <integer_cst 0x7fd7cc126a68 constant 65>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13d150>
            pointer_to_this <pointer_type 0x7fd7cc13d2a0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc14a790 type <array_type 0x7fd7cc13d1f8>
        readonly constant static "%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\012\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_parse_private_pem========= [0m
[40;44m =======node_fun:key_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_free  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:key_free========= [0m
[40;42m =======start_check_funciton:key_free========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fd7cc1591a0
    type <pointer_type 0x7fd7cc13c348
        type <array_type 0x7fd7cc13c2a0 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc624078 constant 192>
            unit-size <integer_cst 0x7fd7cc624048 constant 24>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c1f8>
            pointer_to_this <pointer_type 0x7fd7cc13c348>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155990 type <array_type 0x7fd7cc13c2a0>
        readonly constant static "key_free: key is NULL%s\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:55:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159260
    type <pointer_type 0x7fd7cc13c7e0
        type <array_type 0x7fd7cc13c738 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc1269c0 constant 208>
            unit-size <integer_cst 0x7fd7cc1269a8 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc13c690>
            pointer_to_this <pointer_type 0x7fd7cc13c7e0>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ba0 type <array_type 0x7fd7cc13c738>
        readonly constant static "key_free: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:75:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_free========= [0m
[40;44m =======node_fun:key_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_new  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:key_new========= [0m
[40;42m =======start_check_funciton:key_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
return k_5;
In function ‘key_new’:
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = k_5->type;
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = k_5->type;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
printf ("key_new: bad key type %d", _2);
bb index := 3
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
printf ("key_new: bad key type %d", _2);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:17: warning: use location
   43 |                 fatal("key_new: bad key type %d", k->type);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8>
k_5->type = type_6(D);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->type = type_6(D);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:33:17: warning: use location
   33 |         k->type = type;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_1 = k_5->type;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = k_5->type;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:18: warning: use location
   39 |         switch (k->type) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 11)
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (_1 == 11)
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
   39 |         switch (k->type) {
      |         ^
if (_1 == 11)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:39:9: warning: use location
Cond in fucntion key_new basic block 2
 ================== possible direct basic block ================= 
from key_new basic block 3
 ================== possible direct basic block ================= 
from key_new basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
k_5->cert = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->cert = 0B;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:38:17: warning: use location
   38 |         k->cert = NULL;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
k_5->rsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->rsa = 0B;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:37:16: warning: use location
   37 |         k->rsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
k_5->dsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->dsa = 0B;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:36:16: warning: use location
   36 |         k->dsa = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10>
k_5->ecdsa_nid = -1;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa_nid = -1;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:35:22: warning: use location
   35 |         k->ecdsa_nid = -1;
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_10 = VDEF <.MEM_9>
k_5->ecdsa = 0B;
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5->ecdsa = 0B;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:34:18: warning: use location
   34 |         k->ecdsa = NULL;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_28>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_36>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
  138 |         return ret;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_17>
return ret_12;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:138:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_14>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
  106 |         return prv;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_34>
return prv_17;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:106:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
k_5 = calloc (1, 64);
bb index := 2
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
   47 |         return k;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return k_5;
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:47:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
k_5 = calloc (1, 64);
./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:32:13: warning: use location
   32 |         k = xcalloc(1, sizeof(*k));                             /* allocation site */
      |             ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7cc157d38
    type <pointer_type 0x7fd7cc1380a8
        type <record_type 0x7fd7cc138000 Key BLK
            size <integer_cst 0x7fd7cc624000 constant 512>
            unit-size <integer_cst 0x7fd7cc6db090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd7cc136f18 fields <field_decl 0x7fd7cc1325f0 type> context <translation_unit_decl 0x7fd7cc611168 ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c>
            pointer_to_this <pointer_type 0x7fd7cc1380a8>>
        public unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd7cc15d240 k>
    def_stmt k_5 = calloc (1, 64);
    version:5
    ptr-info 0x7fd7cc147c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7cc1477f8 type <integer_type 0x7fd7cc1363f0 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7cc159340
    type <pointer_type 0x7fd7cc138e70
        type <array_type 0x7fd7cc138dc8 type <integer_type 0x7fd7cc12fc78 char>
            BLK
            size <integer_cst 0x7fd7cc126990 constant 200>
            unit-size <integer_cst 0x7fd7cc126978 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fd7cc138d20>
            pointer_to_this <pointer_type 0x7fd7cc138e70>>
        unsigned DI
        size <integer_cst 0x7fd7cc606bb8 constant 64>
        unit-size <integer_cst 0x7fd7cc606bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fd7cc155ea0 type <array_type 0x7fd7cc138dc8>
        readonly constant static "key_new: bad key type %d\000">
    ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 start: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3 finish: ./benchmarks/openssh-portable/leak_8/openssh_leak_8.c:43:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_new========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
id_14 = malloc (56);
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
_3 = *argv_17(D);
id_14->filename = _3;
_4 = id_14->userprovided;
_5 = id_14->filename;
_6 = load_identity_file (_5, _4);
id_14->key = _6;
_7 = id_14->key;
_8 = _7->rsa;
printf ("%d\n", _8);
_9 = id_14->key;
if (_9 != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_10 = id_14->key;
key_free (_10);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
free (id_14);
return 0;

=======Mapping node_fun:load_identity_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 532644412]:
perm_ok = 0;
private_19 = key_load_private_type (11, filename_17(D), "", 0B, &perm_ok);
_1 = perm_ok;
if (_1 == 0)
  goto <bb 11>; [17.38%]
else
  goto <bb 3>; [82.62%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 440070814]:
if (private_19 == 0B)
  goto <bb 4>; [17.43%]
else
  goto <bb 11>; [82.57%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 76704343]:
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 11>; [9.78%]
else
  goto <bb 12>; [90.22%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 69202658]:
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1063004409]:
_22 = MEM[(const unsigned char * {ref-all})passphrase_21(D)];
if (_22 != 0)
  goto <bb 6>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 531502204]:
private_25 = key_load_private_type (11, filename_17(D), passphrase_21(D), 0B, 0B);
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 531502204]:
debug2 ("no passphrase given, try next key");

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1063004409]:
# private_7 = PHI <private_25(6), private_8(7)>
# quit_10 = PHI <0(6), 1(7)>
_4 = private_7 != 0B;
_5 = quit_10 != 0;
_6 = _4 | _5;
if (_6 != 0)
  goto <bb 11>; [5.50%]
else
  goto <bb 9>; [94.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1004539167]:
i_26 = i_9 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# private_8 = PHI <private_19(12), private_7(9)>
# i_9 = PHI <0(12), i_26(9)>
if (i_9 <= 99)
  goto <bb 5>; [99.00%]
else
  goto <bb 11>; [1.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 532644412]:
# _11 = PHI <0B(2), private_19(3), 0B(4), private_7(8), private_8(10)>
perm_ok ={v} {CLOBBER};
return _11;

=======Mapping node_fun:key_load_private_type=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = rand ();
_2 = _1 % 2;
if (_2 == 1)
  goto <bb 3>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:
*perm_ok_6(D) = 1;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
ret_12 = key_parse_private_type (0B, type_8(D), passphrase_9(D), commentp_10(D));
return ret_12;

=======Mapping node_fun:key_parse_private_type=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741817]:
switch (type_5(D)) <default: <L2> [33.33%], case 0: <L0> [33.33%], case 1 ... 3: <L1> [33.33%], case 11: <L1> [33.33%]>

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 357913942]:
<L0>:
_1 = key_parse_private_rsa1 (blob_7(D), passphrase_8(D), commentp_9(D));
_2 = (long int) _1;
_13 = (struct Key *) _2;
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 357913942]:
<L1>:
_11 = key_parse_private_pem (blob_7(D), type_5(D), passphrase_8(D), commentp_9(D));
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 357913942]:
<L2>:
printf ("%s: cannot parse key type %d\n", &__func__, type_5(D));

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _3 = PHI <_13(3), _11(4), 0B(5)>
return _3;

=======Mapping node_fun:key_parse_private_pem=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = rand ();
_2 = _1 % 2;
if (_2 == 1)
  goto <bb 3>; [17.38%]
else
  goto <bb 4>; [82.62%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 186616328]:
printf ("%s: PEM_read_PrivateKey failed\n", &__func__);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 887125497]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 5>; [51.12%]
else
  goto <bb 8>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 453498557]:
_5 = type_22(D) == 11;
_6 = type_22(D) == 1;
_7 = _5 | _6;
if (_7 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 149654523]:
prv_24 = key_new (11);
_8 = malloc (168);
prv_24->rsa = _8;
prv_24->type = 1;
_9 = rand ();
_10 = _9 % 5;
if (_10 == 0)
  goto <bb 7>; [16.75%]
else
  goto <bb 12>; [83.25%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 25067132]:
printf ("%s: RSA_blinding_on failed\n", &__func__);
key_free (prv_24);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 737470974]:
_11 = rand ();
_12 = _11 % 2;
if (_12 == 1)
  goto <bb 9>; [71.91%]
else
  goto <bb 11>; [28.09%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 530315376]:
_13 = type_22(D) == 11;
_14 = type_22(D) == 2;
_15 = _13 | _14;
if (_15 != 0)
  goto <bb 10>; [54.67%]
else
  goto <bb 11>; [45.33%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 289923416]:
prv_33 = key_new (11);
_16 = malloc (24);
prv_33->dsa = _16;
prv_33->type = 2;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 447547557]:
printf ("%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type\n");

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# prv_17 = PHI <0B(3), prv_24(6), 0B(7), prv_33(10), 0B(11)>
return prv_17;

=======Mapping node_fun:key_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (k_10(D) == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("key_free: key is NULL%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_1 = k_10(D)->type;
switch (_1) <default: <L2> [0.05%], case 0 ... 1: <L0> [33.32%], case 2: <L1> [33.32%], case 5: <L0> [33.32%], case 6: <L1> [33.32%], case 9: <L0> [33.32%], case 10: <L1> [33.32%], case 11: <L3> [33.32%]>

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 357591890]:
<L0>:
_2 = k_10(D)->rsa;
if (_2 != 0B)
  goto <bb 6>; [53.47%]
else
  goto <bb 7>; [46.53%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 191204383]:
_3 = k_10(D)->rsa;
free (_3);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 357591890]:
k_10(D)->rsa = 0B;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 357591890]:
<L1>:
_4 = k_10(D)->dsa;
if (_4 != 0B)
  goto <bb 9>; [53.47%]
else
  goto <bb 10>; [46.53%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 191204383]:
_5 = k_10(D)->dsa;
free (_5);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 357591890]:
k_10(D)->dsa = 0B;
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 536649]:
<L2>:
_6 = k_10(D)->type;
printf ("key_free: bad key type %d", _6);
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1072775671]:
<L3>:
free (k_10(D));
return;

=======Mapping node_fun:key_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
k_5 = calloc (1, 64);
k_5->type = type_6(D);
k_5->ecdsa = 0B;
k_5->ecdsa_nid = -1;
k_5->dsa = 0B;
k_5->rsa = 0B;
k_5->cert = 0B;
_1 = k_5->type;
if (_1 == 11)
  goto <bb 4>; [99.96%]
else
  goto <bb 3>; [0.04%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
<L0>:
_2 = k_5->type;
printf ("key_new: bad key type %d", _2);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return k_5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    find Entry point : 15 [0m
[40;34m    used_stmt array stack totalsize of : 0.002144 mb[0m
[40;34m    collect time: : 0.000495 s [0m
[40;34m    algorithm time: 0.297507 s [0m
[40;34m    gimple stmt count : : 126 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |          |     -0.0%|
cplxlower                        |      |      |      |      |          |     -0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -1.5%|     +0.5%|
copyprop                         |      |    +2|      |      |     -2.2%|     +0.2%|
reassoc                          |      |      |      |      |     -0.7%|     -0.3%|
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                             |      |      |      |      |     -0.2%|     -0.2%|
dce                              |      |      |      |      |     -0.2%|     -0.2%|
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -83.6%|    -86.0%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon                          |      |      |      |      |     +1.4%|     +1.1%|
copyprop                         |      |      |      |      |     +1.4%|     +1.1%|
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -1.4%|     -1.1%|
lim                              |      |      |      |      |     -1.4%|     -1.1%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |   +511.1%|   +616.2%|
veclower2            ------------|      |      |      |      |          |          |
switchlower                      |      |      |      |      |          |     +1.4%|
reassoc                          |      |   +10|      |      |          |     +1.4%|
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.9%|     -0.4%|
phiopt                           |      |      |      |      |     -0.9%|     -0.4%|
fab                  ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -0.2%|     -0.1%|
crited                           |      |      |      |      |     -0.2%|     -0.1%|
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +76.0%|    +51.5%|
into_cfglayout                   |      |      |      |      |     -1.8%|     -1.0%|
jump                             |      |      |      |      |     -2.6%|     -2.2%|
subreg1                          |      |      |      |      |     -0.8%|     -1.2%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -0.9%|     -1.0%|
ce1                              |      |      |      |      |     -0.9%|     -1.0%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs                        |      |      |      |      |     +0.3%|     +0.4%|
combine                          |      |      |      |      |     +1.1%|     +3.3%|
ce2                              |      |      |      |      |     +0.8%|     +2.7%|
outof_cfglayout                  |      |      |      |      |     +1.9%|     +0.7%|
split1                           |      |      |      |      |     +1.8%|     +0.7%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.1%|     -0.2%|
reload                           |      |      |      |      |     -7.1%|     -8.8%|
postreload                       |      |      |      |      |     -7.5%|     -9.5%|
split2                           |      |      |      |      |     +0.2%|     +0.0%|
cmpelim                          |      |      |      |      |     +0.1%|     -0.2%|
pro_and_epilogue                 |      |      |      |      |     +6.4%|     +9.6%|
dse2                             |      |      |      |      |     +6.2%|     +9.0%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     -0.4%|     -0.3%|
split4                           |      |      |      |      |     -0.4%|     -0.3%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccciwUqA.ltrans0.ltrans.o: in function `key_parse_private_type':
<artificial>:(.text+0x23a): undefined reference to `key_parse_private_rsa1'
/usr/bin/ld: /tmp/ccciwUqA.ltrans0.ltrans.o: in function `load_identity_file':
<artificial>:(.text+0x356): undefined reference to `debug2'
collect2: error: ld returned 1 exit status
