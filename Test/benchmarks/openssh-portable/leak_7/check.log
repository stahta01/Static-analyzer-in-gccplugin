In file included from ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:9:
./benchmarks/openssh-portable/leak_7/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:23:13: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   23 |     #field, (&(type##_it)) }
      |             ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:32:42: note: in expansion of macro ‘ASN1_EX_TYPE’
   32 | #define ASN1_SIMPLE(stname, field, type) ASN1_EX_TYPE(0,0, stname, field, type)
      |                                          ^~~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:75:9: note: in expansion of macro ‘ASN1_SIMPLE’
   75 |         ASN1_SIMPLE(ECDSA_SIG, r, BIGNUM),
      |         ^~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:23:13: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   23 |     #field, (&(type##_it)) }
      |             ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:32:42: note: in expansion of macro ‘ASN1_EX_TYPE’
   32 | #define ASN1_SIMPLE(stname, field, type) ASN1_EX_TYPE(0,0, stname, field, type)
      |                                          ^~~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:76:9: note: in expansion of macro ‘ASN1_SIMPLE’
   76 |         ASN1_SIMPLE(ECDSA_SIG, s, BIGNUM)
      |         ^~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c: In function ‘ASN1_item_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:83:29: warning: initialization discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   83 |         ASN1_TEMPLATE *tt = it->templates;
      |                             ^~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   90 |                 memset(*pval, 0, it->size);
      |                 ^~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:10:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
    9 | #include "../openssh.h"
  +++ |+#include <string.h>
   10 | 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   90 |                 memset(*pval, 0, it->size);
      |                 ^~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:97:24: warning: assignment discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   97 |         for (i = 0, tt = it->templates; i < it->tcount; tt++, i++)
      |                        ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c: In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:23: warning: passing argument 1 of ‘ASN1_item_new’ from incompatible pointer type [-Wincompatible-pointer-types]
  115 |         ASN1_item_new(&ret, &ECDSA_SIG_it);
      |                       ^~~~
      |                       |
      |                       ECDSA_SIG **
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:79:32: note: expected ‘ASN1_VALUE **’ {aka ‘void **’} but argument is of type ‘ECDSA_SIG **’
   79 | int ASN1_item_new(ASN1_VALUE **pval, ASN1_ITEM *it)
      |                   ~~~~~~~~~~~~~^~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:29: warning: passing argument 2 of ‘ASN1_item_new’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
  115 |         ASN1_item_new(&ret, &ECDSA_SIG_it);
      |                             ^~~~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:79:49: note: expected ‘ASN1_ITEM *’ {aka ‘struct ASN1_ITEM_st *’} but argument is of type ‘const ASN1_ITEM *’ {aka ‘const struct ASN1_ITEM_st *’}
   79 | int ASN1_item_new(ASN1_VALUE **pval, ASN1_ITEM *it)
      |                                      ~~~~~~~~~~~^~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                  ------------|      |      |      |      |          |          |
nothrow              ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.5%|          |
phiopt                           |      |      |      |      |     -0.5%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 5
=======node_fun:BN_new=========

=======node_fun:ECDSA_SIG_free=========

=======node_fun:ECDSA_SIG_new=========

=======node_fun:ASN1_item_new=========

--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 3
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 7
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 4
succs:= 7
succs:= 10
succs:= 12
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_11 = VDEF <.MEM_10(D)>
sig_8 = ECDSA_SIG_new ();
# .MEM_19 = VDEF <.MEM_11>
printf ("%s: ECDSA_SIG_new failed", &__func__);
# .MEM_12 = VDEF <.MEM_11>
_1 = BN_new ();
# .MEM_14 = VDEF <.MEM_13>
_3 = BN_new ();
# .MEM_17 = VDEF <.MEM_9>
printf ("%s: BN_new failed", &__func__);
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
# .MEM_5 = VDEF <.MEM_4(D)>
_3 = malloc (24);
# .MEM_5 = VDEF <.MEM_4(D)>
ASN1_item_new (&ret, &ECDSA_SIG_it);
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
# .MEM_46 = VDEF <.MEM_39>
_19 = ASN1_item_new (pseqval_35, _18);
# .MEM_50 = VDEF <.MEM_40>
__builtin_puts (&"ASN1_ITEM_new ERROR"[0]);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ECDSA_SIG_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ECDSA_SIG_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:ECDSA_SIG_free========= [0m
[40;42m =======start_check_funciton:ECDSA_SIG_free========= [0m
[40;33m =======POP node_fun stack:ECDSA_SIG_free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:BN_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path BN_new  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:BN_new========= [0m
[40;42m =======start_check_funciton:BN_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4b7880eab0
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = malloc (24);
    version:3
    ptr-info 0x7f4b78340600>
# .MEM_5 = VDEF <.MEM_4(D)>
_3 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return _3;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:128:16: warning: use location
  128 |         return malloc(sizeof(BIGNUM));
      |                ^
_3 = malloc (24);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:128:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880eab0
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = malloc (24);
    version:3
    ptr-info 0x7f4b78340600>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f4b78340420 type <integer_type 0x7f4b7881b7e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:BN_new========= [0m
[40;42m =======pre add _ fucntion:ECDSA_SIG_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ECDSA_SIG_new  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ASN1_item_new  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun:ASN1_item_new========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:ASN1_item_new========= [0m
[40;42m =======start_check_funciton:ASN1_item_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d000
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4b78340678>
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_4 = malloc (_3);
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:25: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d000
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4b78340678>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d1f8
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _11 = malloc (_10);
    version:11
    ptr-info 0x7f4b783406c0>
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
_11 = malloc (_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:25: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d1f8
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _11 = malloc (_10);
    version:11
    ptr-info 0x7f4b783406c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7880ebd0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
_3 = (long unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_4 = malloc (_3);
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:25: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880ebd0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d120
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _8 = *pval_31(D);
    version:8
    ptr-info 0x7f4b783406a8>
# VUSE <.MEM_48>
_8 = *pval_31(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
memset (_8, 0, _7);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: use location
   90 |                 memset(*pval, 0, it->size);
      |                 ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
memset (_8, 0, _7);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d120
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _8 = *pval_31(D);
    version:8
    ptr-info 0x7f4b783406a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d1b0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _10 = (long unsigned int) _9;
    version:10>
_10 = (long unsigned int) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
_11 = malloc (_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:25: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d1b0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _10 = (long unsigned int) _9;
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d318
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _15 = *pval_31(D);
    version:15
    ptr-info 0x7f4b783406f0>
# VUSE <.MEM_44>
_15 = *pval_31(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
memset (_15, 0, _14);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:17: warning: use location
   96 |                 memset(*pval, 0, it->size);
      |                 ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
memset (_15, 0, _14);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:17: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d318
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _15 = *pval_31(D);
    version:15
    ptr-info 0x7f4b783406f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d6c0
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
    var <var_decl 0x7f4b78347870 pseqval>
    def_stmt pseqval_35 = _16 + _17;
    version:35
    ptr-info 0x7f4b78340798>
pseqval_35 = _16 + _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_19 = ASN1_item_new (pseqval_35, _18);
bb index := 9
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ASN1_item_new (pseqval_35, _18);
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:18: warning: use location
  100 |             if (!ASN1_item_new(pseqval, tt->item))
      |                  ^
this stmt is child function---ASN1_item_new-----

 ================== trace ================== 
trace fucntion name:ASN1_item_new 
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with pseqval ========= [0m
[40;36m ======= relate stmt argument:pseqval ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with pseqval ========= [0m
[40;36m ======= relate stmt argument:pseqval ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 9
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 == 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
  100 |             if (!ASN1_item_new(pseqval, tt->item))
      |                ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
Cond in fucntion ASN1_item_new basic block 9
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 10
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d6c0
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
    var <var_decl 0x7f4b78347870 pseqval>
    def_stmt pseqval_35 = _16 + _17;
    version:35
    ptr-info 0x7f4b78340798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02f40
    type <pointer_type 0x7f4b7832f888
        type <integer_type 0x7f4b7832f7e0 char readonly QI
            size <integer_cst 0x7f4b78806ca8 constant 8>
            unit-size <integer_cst 0x7f4b78806cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b3f0 precision:8 min <integer_cst 0x7f4b78326780 -128> max <integer_cst 0x7f4b78326768 127>
            pointer_to_this <pointer_type 0x7f4b7832f888>>
        unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f4b78810230 type <integer_type 0x7f4b7832f7e0 char>
       
        arg:0 <string_cst 0x7f4b7834c2d0 type <array_type 0x7f4b78338c78>
            readonly constant static "ASN1_ITEM_new ERROR\000">
        arg:1 <integer_cst 0x7f4b78806f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_item_new========= [0m
[40;42m =======pre_check_funciton:ECDSA_SIG_new========= [0m
[40;42m =======start_check_funciton:ECDSA_SIG_new========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02da0
    type <pointer_type 0x7f4b78338f18
        type <pointer_type 0x7f4b78338e70 type <record_type 0x7f4b78338dc8 ECDSA_SIG>
            public unsigned DI
            size <integer_cst 0x7f4b78806bb8 constant 64>
            unit-size <integer_cst 0x7f4b78806bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78338f18>>
        unsigned DI size <integer_cst 0x7f4b78806bb8 64> unit-size <integer_cst 0x7f4b78806bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4b78347630 ret type <pointer_type 0x7f4b78338e70>
        addressable unsigned DI ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:114:13 size <integer_cst 0x7f4b78806bb8 64> unit-size <integer_cst 0x7f4b78806bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f4b78330b00 ECDSA_SIG_new>>
    ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16 start: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16 finish: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ECDSA_SIG_new========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4b7880e708
    type <pointer_type 0x7f4b78338e70
        type <record_type 0x7f4b78338dc8 ECDSA_SIG TI
            size <integer_cst 0x7f4b78806c00 constant 128>
            unit-size <integer_cst 0x7f4b78806c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78338d20 fields <field_decl 0x7f4b783328e8 r> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b78338e70>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b78338f18>>
    var <var_decl 0x7f4b790aed80 sig>
    def_stmt sig_8 = ECDSA_SIG_new ();
    version:8
    ptr-info 0x7f4b783405e8>
# .MEM_11 = VDEF <.MEM_10(D)>
sig_8 = ECDSA_SIG_new ();

 ================== trace ptable================== 
trace fucntion name:ECDSA_SIG_new 
[40;44m =======trace_function_path ECDSA_SIG_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:ECDSA_SIG_new========= [0m
[40;36m ======= find relate stmt with sig ========= [0m
[40;36m ======= relate stmt argument:sig ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ECDSA_SIG_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :889========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with sig ========= [0m
[40;36m ======= relate stmt argument:sig ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ECDSA_SIG_new-----
this other function ------ECDSA_SIG_new-----
 
 Start check Pointer Collect  

======================================================================
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: use location
  142 |         ECDSA_SIG_free(sig);
      |         ^
this stmt is child function---ECDSA_SIG_free-----

 ================== trace ================== 
trace fucntion name:ECDSA_SIG_free 
[40;44m =======trace_function_path ECDSA_SIG_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^
# .MEM_8 = VDEF <.MEM_7>
free (p_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (p_4(D));
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:123:9: warning: use location
  123 |         free(p);
      |         ^
[40;36m ======= node_fun:ECDSA_SIG_free========= [0m
[40;36m ======= find relate stmt with sig ========= [0m
[40;36m ======= relate stmt argument:sig ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_4 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:17: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
if (_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
sig_8->s = _3;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:21: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6>
_2 = p_4(D)->s;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6>
_2 = p_4(D)->s;
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_2 = p_4(D)->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:15: warning: use location
  122 |         free(p->s);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_2 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:13: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
sig_8->r = _1;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:17: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = p_4(D)->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:15: warning: use location
  121 |         free(p->r);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
if (sig_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
sig_8 = ECDSA_SIG_new ();
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
sig_8 = ECDSA_SIG_new ();
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
sig_8 = ECDSA_SIG_new ();
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:20: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |                    ^
this stmt is child function---ECDSA_SIG_new-----

 ================== trace ================== 
trace fucntion name:ECDSA_SIG_new 
[40;44m =======trace_function_path ECDSA_SIG_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:ECDSA_SIG_new========= [0m
[40;36m ======= find relate stmt with sig ========= [0m
[40;36m ======= relate stmt argument:sig ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ECDSA_SIG_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with sig ========= [0m
[40;36m ======= relate stmt argument:sig ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:5 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880e708
    type <pointer_type 0x7f4b78338e70
        type <record_type 0x7f4b78338dc8 ECDSA_SIG TI
            size <integer_cst 0x7f4b78806c00 constant 128>
            unit-size <integer_cst 0x7f4b78806c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78338d20 fields <field_decl 0x7f4b783328e8 r> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b78338e70>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b78338f18>>
    var <var_decl 0x7f4b790aed80 sig>
    def_stmt sig_8 = ECDSA_SIG_new ();
    version:8
    ptr-info 0x7f4b783405e8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# VUSE <.MEM_6>
_2 = p_4(D)->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:15: warning: use location
  122 |         free(p->s);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:15: warning: use location
  121 |         free(p->r);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02ac0
    type <pointer_type 0x7f4b78339690
        type <array_type 0x7f4b783395e8 type <integer_type 0x7f4b7832f738 char>
            BLK
            size <integer_cst 0x7f4b78326948 constant 200>
            unit-size <integer_cst 0x7f4b78326930 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4b78339540>
            pointer_to_this <pointer_type 0x7f4b78339690>>
        unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4b78804840 type <array_type 0x7f4b783395e8>
        readonly constant static "%s: ECDSA_SIG_new failed\000">
    ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:136:3 start: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:136:3 finish: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:136:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7880e5e8
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = BN_new ();
    version:1
    ptr-info 0x7f4b78340588>
# .MEM_12 = VDEF <.MEM_11>
_1 = BN_new ();

 ================== trace ptable================== 
trace fucntion name:BN_new 
[40;44m =======trace_function_path BN_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:BN_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---BN_new-----
this other function ------BN_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
sig_8->r = _1;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:17: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
sig_8->r = _1;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:17: warning: use location
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: use location
  142 |         ECDSA_SIG_free(sig);
      |         ^
this stmt is child function---ECDSA_SIG_free-----

 ================== trace ================== 
trace fucntion name:ECDSA_SIG_free 
[40;44m =======trace_function_path ECDSA_SIG_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^
# .MEM_8 = VDEF <.MEM_7>
free (p_4(D));
[40;36m ======= node_fun:ECDSA_SIG_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_4 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:17: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
if (_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
sig_8->s = _3;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:21: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6>
_2 = p_4(D)->s;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6>
_2 = p_4(D)->s;
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_2 = p_4(D)->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:15: warning: use location
  122 |         free(p->s);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_2 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:13: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = p_4(D)->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:15: warning: use location
  121 |         free(p->r);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
if (sig_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11>
_1 = BN_new ();
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_1 = BN_new ();
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:19: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                   ^
this stmt is child function---BN_new-----

 ================== trace ================== 
trace fucntion name:BN_new 
[40;44m =======trace_function_path BN_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880e5e8
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = BN_new ();
    version:1
    ptr-info 0x7f4b78340588>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# VUSE <.MEM_6>
_2 = p_4(D)->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:15: warning: use location
  122 |         free(p->s);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:15: warning: use location
  121 |         free(p->r);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7880e678
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = BN_new ();
    version:3
    ptr-info 0x7f4b783405b8>
# .MEM_14 = VDEF <.MEM_13>
_3 = BN_new ();

 ================== trace ptable================== 
trace fucntion name:BN_new 
[40;44m =======trace_function_path BN_new  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:BN_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---BN_new-----
this other function ------BN_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
sig_8->s = _3;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:21: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
sig_8->s = _3;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:21: warning: use location
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: use location
  142 |         ECDSA_SIG_free(sig);
      |         ^
this stmt is child function---ECDSA_SIG_free-----

 ================== trace ================== 
trace fucntion name:ECDSA_SIG_free 
[40;44m =======trace_function_path ECDSA_SIG_free  function_call count: 1 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^
# .MEM_8 = VDEF <.MEM_7>
free (p_4(D));
[40;36m ======= node_fun:ECDSA_SIG_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_4 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:17: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
if (_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6>
_2 = p_4(D)->s;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6>
_2 = p_4(D)->s;
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_2 = p_4(D)->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:15: warning: use location
  122 |         free(p->s);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_7 = VDEF <.MEM_6>
free (_2);
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_2 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:13: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
sig_8->r = _1;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:17: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = p_4(D)->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:15: warning: use location
  121 |         free(p->r);
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
if (sig_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
_3 = BN_new ();
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_3 = BN_new ();
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:23: warning: use location
  139 |             (sig->s = BN_new()) == NULL)        /* memory leak */
      |                       ^
this stmt is child function---BN_new-----

 ================== trace ================== 
trace fucntion name:BN_new 
[40;44m =======trace_function_path BN_new  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:BN_new========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880e678
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = BN_new ();
    version:3
    ptr-info 0x7f4b783405b8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# VUSE <.MEM_6>
_2 = p_4(D)->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:15: warning: use location
  122 |         free(p->s);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# .MEM_7 = VDEF <.MEM_6>
free (_2);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:9: warning: use location
  122 |         free(p->s);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# VUSE <.MEM_5(D)>
_1 = p_4(D)->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:15: warning: use location
  121 |         free(p->r);
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_15>
ECDSA_SIG_free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:142:9: warning: Use after free error!: free location 
  142 |         ECDSA_SIG_free(sig);
      |         ^
# .MEM_6 = VDEF <.MEM_5(D)>
free (_1);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:9: warning: use location
  121 |         free(p->r);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 5
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |                                     ^
	relate logic:= 0
=succs:= 4
if (_2 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:8: warning: use location
  138 |     if ((sig->r = BN_new()) == NULL ||  /* memory leak */
      |        ^
	relate logic:= 0
=succs:= 2
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:12: warning: use location
  135 |         if ((sig = ECDSA_SIG_new()) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02ba0
    type <pointer_type 0x7f4b78339c78
        type <array_type 0x7f4b78339bd0 type <integer_type 0x7f4b7832f738 char>
            BLK
            size <integer_cst 0x7f4b78326990 constant 144>
            unit-size <integer_cst 0x7f4b78326978 constant 18>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4b78339b28>
            pointer_to_this <pointer_type 0x7f4b78339c78>>
        unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4b78342348 type <array_type 0x7f4b78339bd0>
        readonly constant static "%s: BN_new failed\000">
    ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:140:3 start: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:140:3 finish: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:140:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:BN_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path BN_new  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:BN_new========= [0m
[40;42m =======start_check_funciton:BN_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4b7880eab0
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = malloc (24);
    version:3
    ptr-info 0x7f4b78340600>
# .MEM_5 = VDEF <.MEM_4(D)>
_3 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return _3;
In function ‘BN_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:128:16: warning: use location
  128 |         return malloc(sizeof(BIGNUM));
      |                ^
_3 = malloc (24);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:128:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880eab0
    type <pointer_type 0x7f4b783392a0
        type <record_type 0x7f4b783391f8 BIGNUM BLK
            size <integer_cst 0x7f4b78824078 constant 192>
            unit-size <integer_cst 0x7f4b78824048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b78339150 fields <field_decl 0x7f4b78332be0 d> context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b783392a0>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = malloc (24);
    version:3
    ptr-info 0x7f4b78340600>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f4b78340420 type <integer_type 0x7f4b7881b7e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:BN_new========= [0m
[40;44m =======node_fun:ECDSA_SIG_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ECDSA_SIG_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:ECDSA_SIG_free========= [0m
[40;42m =======start_check_funciton:ECDSA_SIG_free========= [0m
[40;33m =======POP node_fun stack:ECDSA_SIG_free========= [0m
[40;44m =======node_fun:ECDSA_SIG_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ECDSA_SIG_new  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun:ASN1_item_new========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:ASN1_item_new========= [0m
[40;42m =======start_check_funciton:ASN1_item_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d000
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4b78340678>
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_4 = malloc (_3);
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:25: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d000
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4b78340678>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d1f8
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _11 = malloc (_10);
    version:11
    ptr-info 0x7f4b783406c0>
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
_11 = malloc (_10);
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:25: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d1f8
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _11 = malloc (_10);
    version:11
    ptr-info 0x7f4b783406c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7880ebd0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
_3 = (long unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_4 = malloc (_3);
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:25: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880ebd0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d120
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _8 = *pval_31(D);
    version:8
    ptr-info 0x7f4b783406a8>
# VUSE <.MEM_48>
_8 = *pval_31(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
memset (_8, 0, _7);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: use location
   90 |                 memset(*pval, 0, it->size);
      |                 ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
memset (_8, 0, _7);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d120
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _8 = *pval_31(D);
    version:8
    ptr-info 0x7f4b783406a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d1b0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _10 = (long unsigned int) _9;
    version:10>
_10 = (long unsigned int) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
_11 = malloc (_10);
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:25: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d1b0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _10 = (long unsigned int) _9;
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d318
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _15 = *pval_31(D);
    version:15
    ptr-info 0x7f4b783406f0>
# VUSE <.MEM_44>
_15 = *pval_31(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
memset (_15, 0, _14);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:17: warning: use location
   96 |                 memset(*pval, 0, it->size);
      |                 ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
memset (_15, 0, _14);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:17: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d318
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _15 = *pval_31(D);
    version:15
    ptr-info 0x7f4b783406f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d6c0
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
    var <var_decl 0x7f4b78347870 pseqval>
    def_stmt pseqval_35 = _16 + _17;
    version:35
    ptr-info 0x7f4b78340798>
pseqval_35 = _16 + _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_19 = ASN1_item_new (pseqval_35, _18);
bb index := 9
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ASN1_item_new (pseqval_35, _18);
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:18: warning: use location
  100 |             if (!ASN1_item_new(pseqval, tt->item))
      |                  ^
this stmt is child function---ASN1_item_new-----

 ================== trace ================== 
trace fucntion name:ASN1_item_new 
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with pseqval ========= [0m
[40;36m ======= relate stmt argument:pseqval ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with pseqval ========= [0m
[40;36m ======= relate stmt argument:pseqval ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 9
# VUSE <.MEM_41>
return _24;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 == 0)
In function ‘ECDSA_SIG_new’:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
  100 |             if (!ASN1_item_new(pseqval, tt->item))
      |                ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
Cond in fucntion ASN1_item_new basic block 9
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 10
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d6c0
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
    var <var_decl 0x7f4b78347870 pseqval>
    def_stmt pseqval_35 = _16 + _17;
    version:35
    ptr-info 0x7f4b78340798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02f40
    type <pointer_type 0x7f4b7832f888
        type <integer_type 0x7f4b7832f7e0 char readonly QI
            size <integer_cst 0x7f4b78806ca8 constant 8>
            unit-size <integer_cst 0x7f4b78806cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b3f0 precision:8 min <integer_cst 0x7f4b78326780 -128> max <integer_cst 0x7f4b78326768 127>
            pointer_to_this <pointer_type 0x7f4b7832f888>>
        unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f4b78810230 type <integer_type 0x7f4b7832f7e0 char>
       
        arg:0 <string_cst 0x7f4b7834c2d0 type <array_type 0x7f4b78338c78>
            readonly constant static "ASN1_ITEM_new ERROR\000">
        arg:1 <integer_cst 0x7f4b78806f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_item_new========= [0m
[40;42m =======pre_check_funciton:ECDSA_SIG_new========= [0m
[40;42m =======start_check_funciton:ECDSA_SIG_new========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02da0
    type <pointer_type 0x7f4b78338f18
        type <pointer_type 0x7f4b78338e70 type <record_type 0x7f4b78338dc8 ECDSA_SIG>
            public unsigned DI
            size <integer_cst 0x7f4b78806bb8 constant 64>
            unit-size <integer_cst 0x7f4b78806bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78338f18>>
        unsigned DI size <integer_cst 0x7f4b78806bb8 64> unit-size <integer_cst 0x7f4b78806bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4b78347630 ret type <pointer_type 0x7f4b78338e70>
        addressable unsigned DI ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:114:13 size <integer_cst 0x7f4b78806bb8 64> unit-size <integer_cst 0x7f4b78806bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f4b78330b00 ECDSA_SIG_new>>
    ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16 start: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16 finish: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ECDSA_SIG_new========= [0m
[40;44m =======node_fun:ASN1_item_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun:ASN1_item_new========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:ASN1_item_new========= [0m
[40;42m =======start_check_funciton:ASN1_item_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d000
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4b78340678>
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
In function ‘ASN1_item_new’:
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_4 = malloc (_3);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:25: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d000
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4b78340678>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d1f8
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _11 = malloc (_10);
    version:11
    ptr-info 0x7f4b783406c0>
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
bb index := 6
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
_11 = malloc (_10);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:25: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d1f8
    type <pointer_type 0x7f4b78822000
        type <void_type 0x7f4b7881bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4b78822000>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b788279d8>>
   
    def_stmt _11 = malloc (_10);
    version:11
    ptr-info 0x7f4b783406c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7880ebd0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>
_3 = (long unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_42(D)>
_4 = malloc (_3);
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_4 = malloc (_3);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:25: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
*pval_31(D) = _4;
bb index := 3
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _4;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:23: warning: use location
   87 |                 *pval = OPENSSL_malloc(it->size);       /* allocation site */
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7880ebd0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _3 = (long unsigned int) _2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d120
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _8 = *pval_31(D);
    version:8
    ptr-info 0x7f4b783406a8>
# VUSE <.MEM_48>
_8 = *pval_31(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
memset (_8, 0, _7);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: use location
   90 |                 memset(*pval, 0, it->size);
      |                 ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_49 = VDEF <.MEM_48>
memset (_8, 0, _7);
memset (_8, 0, _7);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:17: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d120
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _8 = *pval_31(D);
    version:8
    ptr-info 0x7f4b783406a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d1b0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _10 = (long unsigned int) _9;
    version:10>
_10 = (long unsigned int) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42(D)>
_11 = malloc (_10);
bb index := 6
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
_11 = malloc (_10);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:25: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                         ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
*pval_31(D) = _11;
bb index := 6
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================
*pval_31(D) = _11;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:23: warning: use location
   93 |                 *pval = OPENSSL_malloc(it->size);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d1b0
    type <integer_type 0x7f4b7881b7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b738 precision:64 min <integer_cst 0x7f4b78806e88 0> max <integer_cst 0x7f4b78807500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4b788277e0>>
   
    def_stmt _10 = (long unsigned int) _9;
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d318
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _15 = *pval_31(D);
    version:15
    ptr-info 0x7f4b783406f0>
# VUSE <.MEM_44>
_15 = *pval_31(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
memset (_15, 0, _14);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:17: warning: use location
   96 |                 memset(*pval, 0, it->size);
      |                 ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_45 = VDEF <.MEM_44>
memset (_15, 0, _14);
memset (_15, 0, _14);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:17: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d318
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
   
    def_stmt _15 = *pval_31(D);
    version:15
    ptr-info 0x7f4b783406f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4b7834d6c0
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
    var <var_decl 0x7f4b78347870 pseqval>
    def_stmt pseqval_35 = _16 + _17;
    version:35
    ptr-info 0x7f4b78340798>
pseqval_35 = _16 + _17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_19 = ASN1_item_new (pseqval_35, _18);
bb index := 9
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = ASN1_item_new (pseqval_35, _18);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:18: warning: use location
  100 |             if (!ASN1_item_new(pseqval, tt->item))
      |                  ^
this stmt is child function---ASN1_item_new-----

 ================== trace ================== 
trace fucntion name:ASN1_item_new 
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with pseqval ========= [0m
[40;36m ======= relate stmt argument:pseqval ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:ASN1_item_new========= [0m
[40;36m ======= find relate stmt with pseqval ========= [0m
[40;36m ======= relate stmt argument:pseqval ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 == 0)
bb index := 9
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_41>
return _24;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 == 0)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
  100 |             if (!ASN1_item_new(pseqval, tt->item))
      |                ^
if (_19 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
Cond in fucntion ASN1_item_new basic block 9
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 10
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4b7834d6c0
    type <pointer_type 0x7f4b7832fc78
        type <void_type 0x7f4b7832fbd0 ASN1_VALUE VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4b78811168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7f4b7832fc78>>
        public unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4b7832fd20>>
    var <var_decl 0x7f4b78347870 pseqval>
    def_stmt pseqval_35 = _16 + _17;
    version:35
    ptr-info 0x7f4b78340798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4b78a02f40
    type <pointer_type 0x7f4b7832f888
        type <integer_type 0x7f4b7832f7e0 char readonly QI
            size <integer_cst 0x7f4b78806ca8 constant 8>
            unit-size <integer_cst 0x7f4b78806cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4b7881b3f0 precision:8 min <integer_cst 0x7f4b78326780 -128> max <integer_cst 0x7f4b78326768 127>
            pointer_to_this <pointer_type 0x7f4b7832f888>>
        unsigned DI
        size <integer_cst 0x7f4b78806bb8 constant 64>
        unit-size <integer_cst 0x7f4b78806bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f4b78810230 type <integer_type 0x7f4b7832f7e0 char>
       
        arg:0 <string_cst 0x7f4b7834c2d0 type <array_type 0x7f4b78338c78>
            readonly constant static "ASN1_ITEM_new ERROR\000">
        arg:1 <integer_cst 0x7f4b78806f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_item_new========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
sig_8 = ECDSA_SIG_new ();
if (sig_8 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("%s: ECDSA_SIG_new failed", &__func__);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_1 = BN_new ();
sig_8->r = _1;
_2 = sig_8->r;
if (_2 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1072883005]:
_3 = BN_new ();
sig_8->s = _3;
_4 = sig_8->s;
if (_4 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 858477]:
printf ("%s: BN_new failed", &__func__);
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1072453853]:
ECDSA_SIG_free (sig_8);
return 0;

=======Mapping node_fun:BN_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_3 = malloc (24);
return _3;

=======Mapping node_fun:ECDSA_SIG_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = p_4(D)->r;
free (_1);
_2 = p_4(D)->s;
free (_2);
free (p_4(D));
return;

=======Mapping node_fun:ECDSA_SIG_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ASN1_item_new (&ret, &ECDSA_SIG_it);
_3 = ret;
ret ={v} {CLOBBER};
return _3;

=======Mapping node_fun:ASN1_item_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 969866429]:
_1 = it_29(D)->itype;
switch (_1) <default: <L3> [33.33%], case 0: <L0> [33.33%], case 1: <L1> [33.33%]>

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 323288812]:
<L0>:
_2 = it_29(D)->size;
_3 = (long unsigned int) _2;
_4 = malloc (_3);
*pval_31(D) = _4;
_5 = *pval_31(D);
if (_5 == 0B)
  goto <bb 4>; [30.95%]
else
  goto <bb 5>; [69.05%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 100057888]:
// predicted unlikely by goto predictor.
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 223230924]:
_6 = it_29(D)->size;
_7 = (long unsigned int) _6;
_8 = *pval_31(D);
memset (_8, 0, _7);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 323288812]:
<L1>:
_9 = it_29(D)->size;
_10 = (long unsigned int) _9;
_11 = malloc (_10);
*pval_31(D) = _11;
_12 = *pval_31(D);
if (_12 == 0B)
  goto <bb 7>; [30.95%]
else
  goto <bb 8>; [69.05%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 100057888]:
// predicted unlikely by goto predictor.
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 223230924]:
_13 = it_29(D)->size;
_14 = (long unsigned int) _13;
_15 = *pval_31(D);
memset (_15, 0, _14);
tt_34 = it_29(D)->templates;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 955630225]:
_16 = *pval_31(D);
_17 = tt_23->offset;
pseqval_35 = _16 + _17;
_18 = tt_23->item;
_19 = ASN1_item_new (pseqval_35, _18);
if (_19 == 0)
  goto <bb 10>; [11.00%]
else
  goto <bb 11>; [89.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 105119324]:
// predicted unlikely by goto predictor.
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 850510901]:
tt_37 = tt_23 + 40;
i_38 = i_22 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# i_22 = PHI <0(8), i_38(11)>
# tt_23 = PHI <tt_34(8), tt_37(11)>
_20 = (long int) i_22;
_21 = it_29(D)->tcount;
if (_20 < _21)
  goto <bb 9>; [89.00%]
else
  goto <bb 14>; [11.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 305235100]:
memerr:
__builtin_puts (&"ASN1_ITEM_new ERROR"[0]);

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 969866436]:
# _24 = PHI <1(2), 1(5), 1(12), 0(13)>
<L3>:
return _24;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 11 [0m
[40;34m    used_stmt array stack totalsize of : 0.001000 mb[0m
[40;34m    collect time: : 0.000196 s [0m
[40;34m    algorithm time: 0.058123 s [0m
[40;34m    gimple stmt count : : 71 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +1.5%|     +0.0%|
cplxlower                        |      |      |      |      |     +1.5%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -2.9%|     -0.9%|
copyprop                         |      |      |      |      |     -3.0%|     -0.9%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -45.9%|    -72.8%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts               ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +84.9%|   +267.8%|
veclower2            ------------|      |      |      |      |          |          |
switchlower                      |      |      |      |      |     -1.0%|     +0.5%|
reassoc                          |      |    +3|      |      |     -1.0%|     +0.5%|
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +74.5%|    +39.3%|
into_cfglayout                   |      |      |      |      |     -1.2%|     -0.5%|
jump                             |      |      |      |      |     -3.7%|     -1.4%|
subreg1                          |      |      |      |      |     -2.6%|     -0.9%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -2.6%|     -2.7%|
ce1                              |      |      |      |      |     -2.7%|     -2.8%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.1%|     +4.2%|
ce2                              |      |      |      |      |     +3.0%|     +4.0%|
outof_cfglayout                  |      |      |      |      |     +1.3%|     +0.5%|
split1                           |      |      |      |      |     +1.3%|     +0.5%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.3%|     -0.5%|
reload                           |      |      |      |      |     -8.3%|    -10.1%|
postreload                       |      |      |      |      |     -8.7%|    -10.7%|
split2               ------------|      |      |      |      |          |          |
cmpelim              ------------|      |      |      |      |          |          |
pro_and_epilogue                 |      |      |      |      |     +9.2%|    +14.7%|
dse2                             |      |      |      |      |     +8.4%|    +12.8%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |          |     -0.2%|
split4                           |      |      |      |      |          |     -0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
