In file included from ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:9:0:
./benchmarks/openssh-portable/leak_7/../openssh.h:675:49: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:676:58: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:677:59: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:678:53: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/leak_7/../openssh.h:681:29: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:23:13: warning: initialization discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]
     #field, (&(type##_it)) }
             ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:32:42: note: in expansion of macro â€˜ASN1_EX_TYPEâ€™
 #define ASN1_SIMPLE(stname, field, type) ASN1_EX_TYPE(0,0, stname, field, type)
                                          ^~~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:75:2: note: in expansion of macro â€˜ASN1_SIMPLEâ€™
  ASN1_SIMPLE(ECDSA_SIG, r, BIGNUM),
  ^~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:23:13: warning: initialization discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]
     #field, (&(type##_it)) }
             ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:32:42: note: in expansion of macro â€˜ASN1_EX_TYPEâ€™
 #define ASN1_SIMPLE(stname, field, type) ASN1_EX_TYPE(0,0, stname, field, type)
                                          ^~~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:76:2: note: in expansion of macro â€˜ASN1_SIMPLEâ€™
  ASN1_SIMPLE(ECDSA_SIG, s, BIGNUM)
  ^~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c: In function â€˜ASN1_item_newâ€™:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:83:22: warning: initialization discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]
  ASN1_TEMPLATE *tt = it->templates;
                      ^~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: warning: implicit declaration of function â€˜memsetâ€™ [-Wimplicit-function-declaration]
   memset(*pval, 0, it->size);
   ^~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: warning: incompatible implicit declaration of built-in function â€˜memsetâ€™
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:97:24: warning: assignment discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]
         for (i = 0, tt = it->templates; i < it->tcount; tt++, i++)
                        ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c: In function â€˜ECDSA_SIG_newâ€™:
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16: warning: passing argument 1 of â€˜ASN1_item_newâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
  ASN1_item_new(&ret, &ECDSA_SIG_it);
                ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:79:5: note: expected â€˜ASN1_VALUE ** {aka void **}â€™ but argument is of type â€˜ECDSA_SIG ** {aka struct <anonymous> **}â€™
 int ASN1_item_new(ASN1_VALUE **pval, ASN1_ITEM *it)
     ^~~~~~~~~~~~~
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:22: warning: passing argument 2 of â€˜ASN1_item_newâ€™ discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]
  ASN1_item_new(&ret, &ECDSA_SIG_it);
                      ^
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:79:5: note: expected â€˜ASN1_ITEM * {aka struct ASN1_ITEM_st *}â€™ but argument is of type â€˜const ASN1_ITEM * {aka const struct ASN1_ITEM_st *}â€™
 int ASN1_item_new(ASN1_VALUE **pval, ASN1_ITEM *it)
     ^~~~~~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 3
succs:= 5
succs:= 7
succs:= 9
--------GIMPLE Cond -------
succs:= 9
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 5
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
# .MEM_51 = VDEF <.MEM_50>
memset (_16, 0, _15);
# .MEM_52 = VDEF <.MEM_45>
_20 = ASN1_item_new (pseqval_37, _19);
# .MEM_56 = VDEF <.MEM_46>
_44 = __printf_chk (1, "ASN1_ITEM_new ERROR\n");
# .MEM_35 = VDEF <.MEM_19(D)>
ASN1_item_new (&ret, &ECDSA_SIG_it);
# .MEM_28 = VDEF <.MEM_36>
_16 = __printf_chk (1, "%s: ECDSA_SIG_new failed", &__func__);
# .MEM_38 = VDEF <.MEM_36>
_31 = malloc (24);
# .MEM_40 = VDEF <.MEM_22>
_32 = malloc (24);
# .MEM_26 = VDEF <.MEM_18>
_17 = __printf_chk (1, "%s: BN_new failed", &__func__);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:ASN1_item_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun:ASN1_item_new========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:ASN1_item_new========= [0m
[40;42m =======start_check_funciton:ASN1_item_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2a68
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _5 = malloc (_4);
    version 5
    ptr-info 0x7fb31fb17f48>
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_47>
return _25;
In function â€˜ASN1_item_newâ€™:
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _5;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:9: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _5;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
_5 = malloc (_4);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:11: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2a68
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _5 = malloc (_4);
    version 5
    ptr-info 0x7fb31fb17f48>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2a68
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _5 = malloc (_4);
    version 5
    ptr-info 0x7fb31fb17f48>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2c60
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _12 = malloc (_11);
    version 12
    ptr-info 0x7fb31fb17f90>
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _12;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:9: warning: use location
   *pval = OPENSSL_malloc(it->size);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _12;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_12 = malloc (_11);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:11: warning: use location
   *pval = OPENSSL_malloc(it->size);
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2c60
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _12 = malloc (_11);
    version 12
    ptr-info 0x7fb31fb17f90>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2c60
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _12 = malloc (_11);
    version 12
    ptr-info 0x7fb31fb17f90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2a20
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _4 = (long unsigned int) _3;
    version 4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
_5 = malloc (_4);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:11: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2a20
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _4 = (long unsigned int) _3;
    version 4>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _5;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:9: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2a20
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _4 = (long unsigned int) _3;
    version 4>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>
# VUSE <.MEM_54>
_9 = *pval_33(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
memset (_9, 0, _8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: warning: use location
   memset(*pval, 0, it->size);
   ^
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
memset (_9, 0, _8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2c18
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _11 = (long unsigned int) _10;
    version 11>
_11 = (long unsigned int) _10;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_12 = malloc (_11);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:11: warning: use location
   *pval = OPENSSL_malloc(it->size);
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2c18
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _11 = (long unsigned int) _10;
    version 11>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _12;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:9: warning: use location
   *pval = OPENSSL_malloc(it->size);
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2c18
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _11 = (long unsigned int) _10;
    version 11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>
# VUSE <.MEM_50>
_16 = *pval_33(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_51 = VDEF <.MEM_50>
memset (_16, 0, _15);
memset (_16, 0, _15);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:3: warning: use location
   memset(*pval, 0, it->size);
   ^
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_51 = VDEF <.MEM_50>
memset (_16, 0, _15);
memset (_16, 0, _15);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:3: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fb2b168
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
    var <var_decl 0x7fb320d7fd80 pseqval>
    def_stmt pseqval_37 = _17 + _18;
    version 37
    ptr-info 0x7fb31fb39078>
pseqval_37 = _17 + _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_45>
_20 = ASN1_item_new (pseqval_37, _19);
bb index := 7
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = ASN1_item_new (pseqval_37, _19);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:18: warning: use location
             if (!ASN1_item_new(pseqval, tt->item))
                  ^
this stmt is child function---ASN1_item_new-----

 ================== trace ================== 
 <ssa_name 0x7fb31fb2b168
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
    var <var_decl 0x7fb320d7fd80 pseqval>
    def_stmt pseqval_37 = _17 + _18;
    version 37
    ptr-info 0x7fb31fb39078>
trace fucntion name:ASN1_item_new 
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 0)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
             if (!ASN1_item_new(pseqval, tt->item))
                ^
if (_20 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
Cond in fucntion ASN1_item_new basic block 7
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 11
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fb2b168
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
    var <var_decl 0x7fb320d7fd80 pseqval>
    def_stmt pseqval_37 = _17 + _18;
    version 37
    ptr-info 0x7fb31fb39078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb31ffeaf90 type <integer_type 0x7fb31fffe5e8 int> constant 1>
[40;33m =======POP node_fun stack:ASN1_item_new========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun:ASN1_item_new========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:ASN1_item_new========= [0m
[40;42m =======start_check_funciton:ASN1_item_new========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2a68
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _5 = malloc (_4);
    version 5
    ptr-info 0x7fb31fb17f48>
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_47>
return _25;
In function â€˜mainâ€™:
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _5;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:9: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _5;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
_5 = malloc (_4);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:11: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2a68
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _5 = malloc (_4);
    version 5
    ptr-info 0x7fb31fb17f48>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2a68
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _5 = malloc (_4);
    version 5
    ptr-info 0x7fb31fb17f48>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2c60
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _12 = malloc (_11);
    version 12
    ptr-info 0x7fb31fb17f90>
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _12;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:9: warning: use location
   *pval = OPENSSL_malloc(it->size);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _12;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_12 = malloc (_11);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:11: warning: use location
   *pval = OPENSSL_malloc(it->size);
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2c60
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _12 = malloc (_11);
    version 12
    ptr-info 0x7fb31fb17f90>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2c60
    type <pointer_type 0x7fb3200050a8
        type <void_type 0x7fb31fffef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb3200050a8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb32000abd0>>
   
    def_stmt _12 = malloc (_11);
    version 12
    ptr-info 0x7fb31fb17f90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2a20
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _4 = (long unsigned int) _3;
    version 4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_48(D)>
_5 = malloc (_4);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
_5 = malloc (_4);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:11: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2a20
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _4 = (long unsigned int) _3;
    version 4>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
*pval_33(D) = _5;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _5;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:87:9: warning: use location
   *pval = OPENSSL_malloc(it->size); /* allocation site */
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2a20
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _4 = (long unsigned int) _3;
    version 4>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>
# VUSE <.MEM_54>
_9 = *pval_33(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
memset (_9, 0, _8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: warning: use location
   memset(*pval, 0, it->size);
   ^
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================
# .MEM_55 = VDEF <.MEM_54>
memset (_9, 0, _8);
memset (_9, 0, _8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:90:3: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2b88
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _9 = *pval_33(D);
    version 9
    ptr-info 0x7fb31fb17f78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2c18
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _11 = (long unsigned int) _10;
    version 11>
_11 = (long unsigned int) _10;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48(D)>
_12 = malloc (_11);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_12 = malloc (_11);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:11: warning: use location
   *pval = OPENSSL_malloc(it->size);
           ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2c18
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _11 = (long unsigned int) _10;
    version 11>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_49>
*pval_33(D) = _12;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
*pval_33(D) = _12;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:93:9: warning: use location
   *pval = OPENSSL_malloc(it->size);
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2c18
    type <integer_type 0x7fb31fffe7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fb31fffe738 precision 64 min <integer_cst 0x7fb31ffeaeb8 0> max <integer_cst 0x7fb31ffec500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb32000a9d8>>
   
    def_stmt _11 = (long unsigned int) _10;
    version 11>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>
# VUSE <.MEM_50>
_16 = *pval_33(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_51 = VDEF <.MEM_50>
memset (_16, 0, _15);
memset (_16, 0, _15);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:3: warning: use location
   memset(*pval, 0, it->size);
   ^
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_51 = VDEF <.MEM_50>
memset (_16, 0, _15);
memset (_16, 0, _15);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:96:3: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fff2d80
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
   
    def_stmt _16 = *pval_33(D);
    version 16
    ptr-info 0x7fb31fb17fc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fb2b168
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
    var <var_decl 0x7fb320d7fd80 pseqval>
    def_stmt pseqval_37 = _17 + _18;
    version 37
    ptr-info 0x7fb31fb39078>
pseqval_37 = _17 + _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_45>
_20 = ASN1_item_new (pseqval_37, _19);
bb index := 7
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = ASN1_item_new (pseqval_37, _19);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:18: warning: use location
             if (!ASN1_item_new(pseqval, tt->item))
                  ^
this stmt is child function---ASN1_item_new-----

 ================== trace ================== 
 <ssa_name 0x7fb31fb2b168
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
    var <var_decl 0x7fb320d7fd80 pseqval>
    def_stmt pseqval_37 = _17 + _18;
    version 37
    ptr-info 0x7fb31fb39078>
trace fucntion name:ASN1_item_new 
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;46m =======add node_fun stack:ASN1_item_new========= [0m
[40;44m =======trace_function_path ASN1_item_new  function_call count: 4 level :1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:ASN1_item_new========= [0m
[40;41m =======recursive_fun2:ASN1_item_new========= [0m
ASN1_item_new this fucntion return value is heap-object 
ASN1_item_new this fucntion return value is heap-object ASN1_item_new
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 0)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
             if (!ASN1_item_new(pseqval, tt->item))
                ^
if (_20 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:100:16: warning: use location
Cond in fucntion ASN1_item_new basic block 7
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 11
 ================== possible direct basic block ================= 
from ASN1_item_new basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fb2b168
    type <pointer_type 0x7fb31fb1b1f8
        type <void_type 0x7fb31fb1b150 ASN1_VALUE VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb1b1f8>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb31fb1b2a0>>
    var <var_decl 0x7fb320d7fd80 pseqval>
    def_stmt pseqval_37 = _17 + _18;
    version 37
    ptr-info 0x7fb31fb39078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb31ffeaf90 type <integer_type 0x7fb31fffe5e8 int> constant 1>
[40;33m =======POP node_fun stack:ASN1_item_new========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb31fb2bea0
    type <pointer_type 0x7fb31fb14bd0
        type <record_type 0x7fb31fb14b28 BIGNUM BLK
            size <integer_cst 0x7fb3200060a8 constant 192>
            unit size <integer_cst 0x7fb320006078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fb31fb14a80 fields <field_decl 0x7fb31fb164c0 d> context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb14bd0> chain <type_decl 0x7fb31fb16558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _31 = malloc (24);
    version 31
    ptr-info 0x7fb31fb39138>
# .MEM_38 = VDEF <.MEM_36>
_31 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = _31;
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = _31;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = _31;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = _31;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_39 = _31;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _39;
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _39;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _39;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _39;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_1 = _39;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:19: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
sig_8->r = _1;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:17: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
free (sig_8);
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:123:2: warning: use location
  free(p);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:123:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_40>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_40>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_40>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
sig_8->s = _3;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:14: warning: use location
      (sig->s = BN_new()) == NULL) /* memory leak */
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_4 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:10: warning: use location
      (sig->s = BN_new()) == NULL) /* memory leak */
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
                                     ^
if (_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_34 = sig_8->s;
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_34 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:8: warning: use location
  free(p->s);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
free (_34);
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
free (_34);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:2: warning: use location
  free(p->s);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (_34);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_33 = sig_8->r;
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_33 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:8: warning: use location
  free(p->r);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_24>
free (_33);
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: use location
  free(p->r);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_2 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:13: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:5: warning: use location
  if ((sig = ECDSA_SIG_new()) == NULL)
     ^
if (sig_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_36>
_31 = malloc (24);
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_36>
_31 = malloc (24);
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_36>
_31 = malloc (24);
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_36>
_31 = malloc (24);
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_31 = malloc (24);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:128:9: warning: use location
  return malloc(sizeof(BIGNUM));
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fb2bea0
    type <pointer_type 0x7fb31fb14bd0
        type <record_type 0x7fb31fb14b28 BIGNUM BLK
            size <integer_cst 0x7fb3200060a8 constant 192>
            unit size <integer_cst 0x7fb320006078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fb31fb14a80 fields <field_decl 0x7fb31fb164c0 d> context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb14bd0> chain <type_decl 0x7fb31fb16558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _31 = malloc (24);
    version 31
    ptr-info 0x7fb31fb39138>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fb2bea0
    type <pointer_type 0x7fb31fb14bd0
        type <record_type 0x7fb31fb14b28 BIGNUM BLK
            size <integer_cst 0x7fb3200060a8 constant 192>
            unit size <integer_cst 0x7fb320006078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fb31fb14a80 fields <field_decl 0x7fb31fb164c0 d> context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb14bd0> chain <type_decl 0x7fb31fb16558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _31 = malloc (24);
    version 31
    ptr-info 0x7fb31fb39138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_24>
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: use location
  free(p->r);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (_34);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:2: warning: use location
  free(p->s);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_42 = VDEF <.MEM_24>
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: Use after free error!: free location 
  free(p->r);
  ^
# VUSE <.MEM_42>
_34 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:8: warning: use location
  free(p->s);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_24>
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: Use after free error!: free location 
  free(p->r);
  ^
# VUSE <.MEM_42>
_34 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:8: warning: use location
  free(p->s);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb31fb2bee8
    type <pointer_type 0x7fb31fb14bd0
        type <record_type 0x7fb31fb14b28 BIGNUM BLK
            size <integer_cst 0x7fb3200060a8 constant 192>
            unit size <integer_cst 0x7fb320006078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fb31fb14a80 fields <field_decl 0x7fb31fb164c0 d> context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb14bd0> chain <type_decl 0x7fb31fb16558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _32 = malloc (24);
    version 32
    ptr-info 0x7fb31fb39150>
# .MEM_40 = VDEF <.MEM_22>
_32 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _32;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _32;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _32;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_41 = _32;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _41;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _41;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _41;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_3 = _41;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:16: warning: use location
      (sig->s = BN_new()) == NULL) /* memory leak */
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_40>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_40>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_40>
sig_8->s = _3;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
sig_8->s = _3;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:14: warning: use location
      (sig->s = BN_new()) == NULL) /* memory leak */
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
free (sig_8);
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:123:2: warning: use location
  free(p);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (sig_8);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:123:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_4 = sig_8->s;
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_4 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:139:10: warning: use location
      (sig->s = BN_new()) == NULL) /* memory leak */
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
if (_4 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
                                     ^
if (_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:37: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_34 = sig_8->s;
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_34 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:8: warning: use location
  free(p->s);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
free (_34);
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
free (_34);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:2: warning: use location
  free(p->s);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (_34);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_33 = sig_8->r;
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_33 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:8: warning: use location
  free(p->r);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_24>
free (_33);
bb index := 7
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: use location
  free(p->r);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_38>
sig_8->r = _1;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
sig_8->r = _1;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:17: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_2 = sig_8->r;
bb index := 4
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================
_2 = sig_8->r;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:138:13: warning: use location
     if ((sig->r = BN_new()) == NULL || /* memory leak */
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _25;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sig_8 == 0B)
bb index := 2
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================
if (sig_8 == 0B)
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:5: warning: use location
  if ((sig = ECDSA_SIG_new()) == NULL)
     ^
if (sig_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:135:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_22>
_32 = malloc (24);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_22>
_32 = malloc (24);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_22>
_32 = malloc (24);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
_32 = malloc (24);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:128:9: warning: use location
  return malloc(sizeof(BIGNUM));
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb31fb2bee8
    type <pointer_type 0x7fb31fb14bd0
        type <record_type 0x7fb31fb14b28 BIGNUM BLK
            size <integer_cst 0x7fb3200060a8 constant 192>
            unit size <integer_cst 0x7fb320006078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fb31fb14a80 fields <field_decl 0x7fb31fb164c0 d> context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb14bd0> chain <type_decl 0x7fb31fb16558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _32 = malloc (24);
    version 32
    ptr-info 0x7fb31fb39150>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb31fb2bee8
    type <pointer_type 0x7fb31fb14bd0
        type <record_type 0x7fb31fb14b28 BIGNUM BLK
            size <integer_cst 0x7fb3200060a8 constant 192>
            unit size <integer_cst 0x7fb320006078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fb31fb14a80 fields <field_decl 0x7fb31fb164c0 d> context <translation_unit_decl 0x7fb31fff5168 ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c>
            pointer_to_this <pointer_type 0x7fb31fb14bd0> chain <type_decl 0x7fb31fb16558 D.3993>>
        public unsigned DI
        size <integer_cst 0x7fb31ffeabe8 constant 64>
        unit size <integer_cst 0x7fb31ffeac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _32 = malloc (24);
    version 32
    ptr-info 0x7fb31fb39150>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_24>
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: use location
  free(p->r);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (_34);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:2: warning: use location
  free(p->s);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_42 = VDEF <.MEM_24>
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: Use after free error!: free location 
  free(p->r);
  ^
# VUSE <.MEM_42>
_34 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:8: warning: use location
  free(p->s);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_24>
free (_33);
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:121:2: warning: Use after free error!: free location 
  free(p->r);
  ^
# VUSE <.MEM_42>
_34 = sig_8->s;
./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:122:8: warning: use location
  free(p->s);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb31fb08ec0
    type <pointer_type 0x7fb31fb1f7e0
        type <pointer_type 0x7fb31fb14dc8 type <record_type 0x7fb31fb14d20 ECDSA_SIG>
            public unsigned DI
            size <integer_cst 0x7fb31ffeabe8 constant 64>
            unit size <integer_cst 0x7fb31ffeac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb31fb1f7e0>>
        unsigned DI size <integer_cst 0x7fb31ffeabe8 64> unit size <integer_cst 0x7fb31ffeac00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fb31fb30630 ret type <pointer_type 0x7fb31fb14dc8>
        addressable used unsigned DI file ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c line 114 col 13 size <integer_cst 0x7fb31ffeabe8 64> unit size <integer_cst 0x7fb31ffeac00 8>
        align 64 context <function_decl 0x7fb31fb15b00 main> abstract_origin <var_decl 0x7fb31fb30480 ret>>
    ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16 start: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16 finish: ./benchmarks/openssh-portable/leak_7/openssh_leak_7.c:115:16>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb31fb17f18 type <integer_type 0x7fb31fffe7e0 long unsigned int> constant 24>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb31fb17f18 type <integer_type 0x7fb31fffe7e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:ASN1_item_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
tt_31 = it_30(D)->templates;
_1 = it_30(D)->itype;
_2 = (int) _1;
switch (_1) <default: <L3> [33.33%], case 0: <L0> [33.33%], case 1: <L1> [33.33%]>

=======is loop:0=========

 bb index 3 
<L0> [33.33%]:
_3 = it_30(D)->size;
_4 = (long unsigned int) _3;
_5 = malloc (_4);
*pval_33(D) = _5;
_6 = *pval_33(D);
if (_6 == 0B)
  goto <bb 11> (memerr); [50.53%]
else
  goto <bb 4>; [49.47%]

=======is loop:0=========

 bb index 4 
<bb 4> [16.49%]:
_7 = it_30(D)->size;
_8 = (long unsigned int) _7;
_9 = *pval_33(D);
memset (_9, 0, _8);
goto <bb 12> (<L3>); [100.00%]

=======is loop:0=========

 bb index 5 
<L1> [33.33%]:
_10 = it_30(D)->size;
_11 = (long unsigned int) _10;
_12 = malloc (_11);
*pval_33(D) = _12;
_13 = *pval_33(D);
if (_13 == 0B)
  goto <bb 11> (memerr); [46.53%]
else
  goto <bb 6>; [53.47%]

=======is loop:0=========

 bb index 6 
<bb 6> [17.82%]:
_14 = it_30(D)->size;
_15 = (long unsigned int) _14;
_16 = *pval_33(D);
memset (_16, 0, _15);
tt_36 = it_30(D)->templates;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [58.86%]:
_17 = *pval_33(D);
_18 = tt_24->offset;
pseqval_37 = _17 + _18;
_19 = tt_24->item;
_20 = ASN1_item_new (pseqval_37, _19);
if (_20 == 0)
  goto <bb 11> (memerr); [14.00%]
else
  goto <bb 8>; [86.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [50.62%]:
tt_39 = tt_24 + 40;
i_40 = i_23 + 1;

=======is loop:1=========

 bb index 9 
<bb 9> [68.44%]:
# i_23 = PHI <0(6), i_40(8)>
# tt_24 = PHI <tt_36(6), tt_39(8)>
_21 = (long int) i_23;
_22 = it_30(D)->tcount;
if (_21 < _22)
  goto <bb 7>; [86.00%]
else
  goto <bb 12> (<L3>); [14.00%]

=======is loop:0=========

 bb index 11 
memerr [40.59%]:
_44 = __printf_chk (1, "ASN1_ITEM_new ERROR\n");

=======is loop:0=========

 bb index 12 
# _25 = PHI <1(2), 1(4), 1(9), 0(11)>
<L3> [99.99%]:
return _25;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
ASN1_item_new (&ret, &ECDSA_SIG_it);
_30 = ret;
ret ={v} {CLOBBER};
_37 = _30;
sig_8 = _37;
if (sig_8 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
_16 = __printf_chk (1, "%s: ECDSA_SIG_new failed", &__func__);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
_31 = malloc (24);
_39 = _31;
_1 = _39;
sig_8->r = _1;
_2 = sig_8->r;
if (_2 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [99.92%]:
_32 = malloc (24);
_41 = _32;
_3 = _41;
sig_8->s = _3;
_4 = sig_8->s;
if (_4 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [0.08%]:
_17 = __printf_chk (1, "%s: BN_new failed", &__func__);
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [99.88%]:
_33 = sig_8->r;
free (_33);
_34 = sig_8->s;
free (_34);
free (sig_8);
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 9 [0m
[40;34m    used_stmt array stack totalsize of : 840 [0m
[40;34m    collect time: : 0.000088 s [0m
[40;34m    algorithm time: 0.015640 s [0m
[40;34m    gimple stmt count : : 70 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
