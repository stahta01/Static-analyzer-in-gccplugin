In file included from ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:10:
./benchmarks/openssh-portable/leak_1/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c: In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   57 |                 return(dlen + strlen(s));
      |                               ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../openssh.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
   57 |                 return(dlen + strlen(s));
      |                               ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c: In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: implicit declaration of function ‘isupper’ [-Wimplicit-function-declaration]
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^~~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:11:1: note: include ‘<ctype.h>’ or provide a declaration of ‘isupper’
   10 | #include "../openssh.h"
  +++ |+#include <ctype.h>
   11 | 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: implicit declaration of function ‘tolower’ [-Wimplicit-function-declaration]
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^~~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: note: include ‘<ctype.h>’ or provide a declaration of ‘tolower’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c: In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  188 |     char *orig_prop = strdup(proposal);
      |                       ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -3.4%|          |
nothrow                          |      |      |      |      |     -3.5%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.5%|          |
ethread                          |      |      |      |      |     -0.5%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:match_filter_list=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 10
=======node_fun:match_pattern_list=========

--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 11
succs:= 12
--------GIMPLE Cond -------
succs:= 13
succs:= 14
--------GIMPLE Cond -------
succs:= 15
succs:= 10
succs:= 14
succs:= 15
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 17
--------GIMPLE Cond -------
succs:= 13
succs:= 18
succs:= 20
=======node_fun:match_pattern=========

--------GIMPLE Cond -------
succs:= 12
succs:= 20
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 14
succs:= 15
succs:= 6
succs:= 8
succs:= 10
succs:= 11
succs:= 13
succs:= 15
=======node_fun:strlcat=========

--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 11
=======node_fun:strsep=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 4
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_7 = VDEF <.MEM_6(D)>
proposal_4 = match_filter_list ("proposal", "filter");
# .MEM_8 = VDEF <.MEM_7>
__builtin_puts (&"match_filter_list failed"[0]);
# .MEM_9 = VDEF <.MEM_5>
printf ("proposal : %s\n", proposal_4);
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
# VUSE <.MEM_57>
_10 = isupper (_9);
# VUSE <.MEM_57>
_16 = tolower (_15);
# .MEM_61 = VDEF <.MEM_57>
sub[subi_35] = _36;
# .MEM_62 = VDEF <.MEM_57>
sub[subi_35] = 0;
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:match_filter_list========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path match_filter_list  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strsep========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strsep  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strsep========= [0m
[40;42m =======start_check_funciton:strsep========= [0m
[40;33m =======POP node_fun stack:strsep========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0693ba6ca8
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f0693b927f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:match_pattern_list========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern_list  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;33m =======POP node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;33m =======POP node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_pattern_list========= [0m
[40;42m =======start_check_funciton:match_pattern_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0693ba1a20
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f0693b92690>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (pattern_42(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
Cond in fucntion match_pattern_list basic block 11
 ================== possible direct basic block ================= 
from match_pattern_list basic block 12
 ================== possible direct basic block ================= 
from match_pattern_list basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = pattern_42(D) + _25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = pattern_42(D) + _22;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:65: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt is child function---tolower-----

 ================== trace ================== 
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba1a20
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f0693b92690>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba11f8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
_9 = (int) _8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt is child function---isupper-----

 ================== trace ================== 
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^
if (_10 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
Cond in fucntion match_pattern_list basic block 7
 ================== possible direct basic block ================= 
from match_pattern_list basic block 8
 ================== possible direct basic block ================= 
from match_pattern_list basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba11f8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba13a8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
_15 = (int) _14;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt is child function---tolower-----

 ================== trace ================== 
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba13a8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba1d38
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f0693b926a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
Cond in fucntion match_pattern_list basic block 17
 ================== possible direct basic block ================= 
from match_pattern_list basic block 18
 ================== possible direct basic block ================= 
from match_pattern_list basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba1d38
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f0693b926a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:match_pattern_list========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_filter_list========= [0m
[40;42m =======start_check_funciton:match_filter_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0694062a20
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f0693b925a0>
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate stmt argument:fix_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate stmt argument:fix_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
Cond in fucntion match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 7
 ================== possible direct basic block ================= 
from match_filter_list basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = fix_prop_15 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_2 = fix_prop_15 == 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062a20
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f0693b925a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0694062a68
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f0693b925b8>
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = strlen (proposal_12(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_13 = _1 + 1;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
len_13 = _1 + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
orig_prop_17 = strdup (proposal_12(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt is child function---strdup-----

 ================== trace ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
bb index := 3
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
free (orig_prop_17);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = orig_prop_17 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_3 = orig_prop_17 == 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062a68
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f0693b925b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0694062990
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f0693b92588>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = strlen (proposal_12(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_13 = _1 + 1;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
len_13 = _1 + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
Cond in fucntion match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 7
 ================== possible direct basic block ================= 
from match_filter_list basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = fix_prop_15 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_2 = fix_prop_15 == 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
orig_prop_17 = strdup (proposal_12(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt is child function---strdup-----

 ================== trace ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
bb index := 3
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
free (orig_prop_17);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = orig_prop_17 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_3 = orig_prop_17 == 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062990
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f0693b92588>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: Use after free error!: free location 
  206 |     free(orig_prop);
      |     ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 10
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^
	relate logic:= 0
=succs:= 5
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^
	relate logic:= 0
=succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06940629d8
    type <integer_type 0x7f0693b83dc8 size_t public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f738 precision:64 min <integer_cst 0x7f069405ae88 0> max <integer_cst 0x7f069405b500 18446744073709551615> context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f0693b9a120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
len_13 = _1 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
Cond in fucntion match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 7
 ================== possible direct basic block ================= 
from match_filter_list basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = fix_prop_15 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_2 = fix_prop_15 == 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
In function ‘match_filter_list’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06940629d8
    type <integer_type 0x7f0693b83dc8 size_t public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f738 precision:64 min <integer_cst 0x7f069405ae88 0> max <integer_cst 0x7f069405b500 18446744073709551615> context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f0693b9a120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: Use after free error!: free location 
  206 |     free(orig_prop);
      |     ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 10
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^
	relate logic:= 0
=succs:= 5
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^
	relate logic:= 0
=succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0694062ab0
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0694902f30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f0693b925d0>
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");

 ================== trace ptable================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :888========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strsep-----
this other function ------strsep-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt is child function---match_pattern_list-----

 ================== trace ================== 
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^
if (_5 != 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
Cond in fucntion match_filter_list basic block 5
 ================== possible direct basic block ================= 
from match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^
if (cp_21 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
Cond in fucntion match_filter_list basic block 10
 ================== possible direct basic block ================= 
from match_filter_list basic block 5
 ================== possible direct basic block ================= 
from match_filter_list basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062ab0
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0694902f30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f0693b925d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0694256d40
    type <pointer_type 0x7f0693b83c78
        type <pointer_type 0x7f0693b83bd0 type <integer_type 0x7f0693b839d8 char>
            public unsigned DI
            size <integer_cst 0x7f069405abb8 constant 64>
            unit-size <integer_cst 0x7f069405abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
            pointer_to_this <pointer_type 0x7f0693b83c78>>
        public unsigned DI size <integer_cst 0x7f069405abb8 64> unit-size <integer_cst 0x7f069405abd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f0694902ea0 tmp type <pointer_type 0x7f0693b83bd0>
        addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f069405abb8 64> unit-size <integer_cst 0x7f069405abd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f0693b84e00 match_filter_list>>
    ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18 start: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18 finish: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:match_filter_list========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f0694256ac0
    type <pointer_type 0x7f0693b8bdc8
        type <array_type 0x7f0693b8bd20 type <integer_type 0x7f0693b839d8 char>
            BLK
            size <integer_cst 0x7f0693b7a7f8 constant 72>
            unit-size <integer_cst 0x7f0693b7a7e0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0693b8bc78>
            pointer_to_this <pointer_type 0x7f0693b8bdc8>>
        unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0694256aa0 type <array_type 0x7f0693b8bd20>
        readonly constant static "proposal\000">
    ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:212:37 start: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:212:37 finish: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:212:37>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0694256b40
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f0694064150 type <integer_type 0x7f0693b83a80 char>
       
        arg:0 <string_cst 0x7f0694058780 type <array_type 0x7f0693b8c1f8>
            readonly constant static "match_filter_list failed\000">
        arg:1 <integer_cst 0x7f069405af48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0694256b80
    type <pointer_type 0x7f0693b8c498
        type <array_type 0x7f0693b8c3f0 type <integer_type 0x7f0693b839d8 char>
            BLK
            size <integer_cst 0x7f0693b7a8b8 constant 120>
            unit-size <integer_cst 0x7f0693b7a8a0 constant 15>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0693b8c348>
            pointer_to_this <pointer_type 0x7f0693b8c498>>
        unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0693b93de8 type <array_type 0x7f0693b8c3f0>
        readonly constant static "proposal : %s\012\000">
    ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:215:9 start: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:215:9 finish: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:215:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:match_filter_list========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path match_filter_list  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strsep========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strsep  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strsep========= [0m
[40;42m =======start_check_funciton:strsep========= [0m
[40;33m =======POP node_fun stack:strsep========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0693ba6ca8
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f0693b927f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:match_pattern_list========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern_list  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;33m =======POP node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;33m =======POP node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_pattern_list========= [0m
[40;42m =======start_check_funciton:match_pattern_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0693ba1a20
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f0693b92690>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (pattern_42(D));
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
Cond in fucntion match_pattern_list basic block 11
 ================== possible direct basic block ================= 
from match_pattern_list basic block 12
 ================== possible direct basic block ================= 
from match_pattern_list basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = pattern_42(D) + _25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = pattern_42(D) + _22;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:65: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt is child function---tolower-----

 ================== trace ================== 
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba1a20
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f0693b92690>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba11f8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
_9 = (int) _8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt is child function---isupper-----

 ================== trace ================== 
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^
if (_10 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
Cond in fucntion match_pattern_list basic block 7
 ================== possible direct basic block ================= 
from match_pattern_list basic block 8
 ================== possible direct basic block ================= 
from match_pattern_list basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba11f8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba13a8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
_15 = (int) _14;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt is child function---tolower-----

 ================== trace ================== 
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba13a8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba1d38
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f0693b926a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
Cond in fucntion match_pattern_list basic block 17
 ================== possible direct basic block ================= 
from match_pattern_list basic block 18
 ================== possible direct basic block ================= 
from match_pattern_list basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba1d38
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f0693b926a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:match_pattern_list========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_filter_list========= [0m
[40;42m =======start_check_funciton:match_filter_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0694062a20
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f0693b925a0>
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate stmt argument:fix_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate stmt argument:fix_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
Cond in fucntion match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 7
 ================== possible direct basic block ================= 
from match_filter_list basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = fix_prop_15 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062a20
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f0693b925a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0694062a68
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f0693b925b8>
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_13 = _1 + 1;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
orig_prop_17 = strdup (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt is child function---strdup-----

 ================== trace ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate stmt argument:orig_prop ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
bb index := 3
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = orig_prop_17 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062a68
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0693b9a000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f0693b925b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0694062990
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f0693b92588>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_13 = _1 + 1;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
Cond in fucntion match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 7
 ================== possible direct basic block ================= 
from match_filter_list basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = fix_prop_15 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
orig_prop_17 = strdup (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt is child function---strdup-----

 ================== trace ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate stmt argument:proposal ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
bb index := 3
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = orig_prop_17 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062990
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f0693b92588>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: Use after free error!: free location 
  206 |     free(orig_prop);
      |     ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 10
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^
	relate logic:= 0
=succs:= 5
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^
	relate logic:= 0
=succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06940629d8
    type <integer_type 0x7f0693b83dc8 size_t public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f738 precision:64 min <integer_cst 0x7f069405ae88 0> max <integer_cst 0x7f069405b500 18446744073709551615> context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f0693b9a120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
len_13 = _1 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
fix_prop_15 = malloc (len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
Cond in fucntion match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 7
 ================== possible direct basic block ================= 
from match_filter_list basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = fix_prop_15 == 0B;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _2 | _3;
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 2
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return _15;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
Cond in fucntion match_filter_list basic block 2
 ================== possible direct basic block ================= 
from match_filter_list basic block 3
 ================== possible direct basic block ================= 
from match_filter_list basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06940629d8
    type <integer_type 0x7f0693b83dc8 size_t public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f738 precision:64 min <integer_cst 0x7f069405ae88 0> max <integer_cst 0x7f069405b500 18446744073709551615> context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f0693b9a120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: Use after free error!: free location 
  206 |     free(orig_prop);
      |     ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 10
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^
	relate logic:= 0
=succs:= 5
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^
	relate logic:= 0
=succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0694062ab0
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0694902f30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f0693b925d0>
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");

 ================== trace ptable================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :888========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strsep-----
this other function ------strsep-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt is child function---strsep-----

 ================== trace ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt is child function---match_pattern_list-----

 ================== trace ================== 
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^
if (_5 != 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
Cond in fucntion match_filter_list basic block 5
 ================== possible direct basic block ================= 
from match_filter_list basic block 6
 ================== possible direct basic block ================= 
from match_filter_list basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^
if (cp_21 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
Cond in fucntion match_filter_list basic block 10
 ================== possible direct basic block ================= 
from match_filter_list basic block 5
 ================== possible direct basic block ================= 
from match_filter_list basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate stmt argument:cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0694062ab0
    type <pointer_type 0x7f0693b83bd0
        type <integer_type 0x7f0693b839d8 char public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83bd0>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f0693b83c78>>
    var <var_decl 0x7f0694902f30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f0693b925d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: Use after free error!: free location 
  192 |         free(orig_prop);
      |         ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0694256d40
    type <pointer_type 0x7f0693b83c78
        type <pointer_type 0x7f0693b83bd0 type <integer_type 0x7f0693b839d8 char>
            public unsigned DI
            size <integer_cst 0x7f069405abb8 constant 64>
            unit-size <integer_cst 0x7f069405abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0694065168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
            pointer_to_this <pointer_type 0x7f0693b83c78>>
        public unsigned DI size <integer_cst 0x7f069405abb8 64> unit-size <integer_cst 0x7f069405abd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f0694902ea0 tmp type <pointer_type 0x7f0693b83bd0>
        addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f069405abb8 64> unit-size <integer_cst 0x7f069405abd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f0693b84e00 match_filter_list>>
    ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18 start: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18 finish: ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:match_filter_list========= [0m
[40;44m =======node_fun:match_pattern_list========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path match_pattern_list  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;33m =======POP node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;33m =======POP node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_pattern_list========= [0m
[40;42m =======start_check_funciton:match_pattern_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0693ba1a20
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f0693b92690>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (pattern_42(D));
In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
Cond in fucntion match_pattern_list basic block 11
 ================== possible direct basic block ================= 
from match_pattern_list basic block 12
 ================== possible direct basic block ================= 
from match_pattern_list basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = pattern_42(D) + _25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = pattern_42(D) + _22;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:65: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt is child function---tolower-----

 ================== trace ================== 
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba1a20
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f0693b92690>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba11f8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
_9 = (int) _8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt is child function---isupper-----

 ================== trace ================== 
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^
if (_10 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
Cond in fucntion match_pattern_list basic block 7
 ================== possible direct basic block ================= 
from match_pattern_list basic block 8
 ================== possible direct basic block ================= 
from match_pattern_list basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba11f8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba13a8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
_15 = (int) _14;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt is child function---tolower-----

 ================== trace ================== 
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba13a8
    type <integer_type 0x7f069406f5e8 int public SI
        size <integer_cst 0x7f069405adf8 constant 32>
        unit-size <integer_cst 0x7f069405ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f5e8 precision:32 min <integer_cst 0x7f069405adb0 -2147483648> max <integer_cst 0x7f069405adc8 2147483647>
        pointer_to_this <pointer_type 0x7f06940769d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0693ba1d38
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f0693b926a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt is child function---match_pattern-----

 ================== trace ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate stmt argument:string ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
Cond in fucntion match_pattern_list basic block 17
 ================== possible direct basic block ================= 
from match_pattern_list basic block 18
 ================== possible direct basic block ================= 
from match_pattern_list basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0693ba1d38
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f0693b926a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:match_pattern_list========= [0m
[40;44m =======node_fun:match_pattern========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;44m =======node_fun:strlcat========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strlcat  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0693ba6ca8
    type <pointer_type 0x7f0693b83b28
        type <integer_type 0x7f0693b83a80 char readonly public QI
            size <integer_cst 0x7f069405aca8 constant 8>
            unit-size <integer_cst 0x7f069405acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f069406f3f0 precision:8 min <integer_cst 0x7f0693b7a720 -128> max <integer_cst 0x7f0693b7a708 127>
            pointer_to_this <pointer_type 0x7f0693b83b28>>
        public unsigned DI
        size <integer_cst 0x7f069405abb8 constant 64>
        unit-size <integer_cst 0x7f069405abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0693b99400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f0693b927f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;44m =======node_fun:strsep========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strsep  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strsep========= [0m
[40;42m =======start_check_funciton:strsep========= [0m
[40;33m =======POP node_fun stack:strsep========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
proposal_4 = match_filter_list ("proposal", "filter");
if (proposal_4 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 4>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
__builtin_puts (&"match_filter_list failed"[0]);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
printf ("proposal : %s\n", proposal_4);
return 0;

=======Mapping node_fun:match_filter_list=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 59079431]:
_1 = strlen (proposal_12(D));
len_13 = _1 + 1;
fix_prop_15 = malloc (len_13);
orig_prop_17 = strdup (proposal_12(D));
_2 = fix_prop_15 == 0B;
_3 = orig_prop_17 == 0B;
_4 = _2 | _3;
if (_4 != 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 23632]:
free (orig_prop_17);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 59055799]:
tmp = orig_prop_17;
*fix_prop_15 = 0;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686025]:
_5 = match_pattern_list (cp_21, filter_24(D), 0);
if (_5 != 1)
  goto <bb 6>; [5.50%]
else
  goto <bb 10>; [94.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 55807731]:
_6 = *fix_prop_15;
if (_6 != 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 18416551]:
strlcat (fix_prop_15, ",", len_13);

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 55807731]:
strlcat (fix_prop_15, cp_21, len_13);

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 114863530]:

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
cp_21 = strsep (&tmp, ",");
if (cp_21 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 59055800]:
free (orig_prop_17);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 59079432]:
# _7 = PHI <0B(3), fix_prop_15(11)>
tmp ={v} {CLOBBER};
return _7;

=======Mapping node_fun:match_pattern_list=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 239436848]:
_1 = strlen (pattern_42(D));
len_43 = (unsigned int) _1;
goto <bb 20>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 114863530]:
_2 = (sizetype) i_34;
_3 = pattern_42(D) + _2;
_4 = *_3;
if (_4 == 33)
  goto <bb 4>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 39053601]:
i_47 = i_34 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 114863530]:
# negated_29 = PHI <0(3), 1(4)>
# i_31 = PHI <i_34(3), i_47(4)>
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 958878293]:
if (dolower_48(D) != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 479439146]:
_5 = (sizetype) i_32;
_6 = pattern_42(D) + _5;
_7 = *_6;
_8 = (unsigned char) _7;
_9 = (int) _8;
_10 = isupper (_9);
if (_10 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 239719573]:
_11 = (sizetype) i_32;
_12 = pattern_42(D) + _11;
_13 = *_12;
_14 = (unsigned char) _13;
_15 = (int) _14;
_16 = tolower (_15);
_49 = (char) _16;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 719158720]:
_17 = (sizetype) i_32;
_18 = pattern_42(D) + _17;
_50 = *_18;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 958878293]:
# _36 = PHI <_49(8), _50(9)>
sub[subi_35] = _36;
subi_52 = subi_35 + 1;
i_53 = i_32 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# i_32 = PHI <i_31(5), i_53(10)>
# subi_35 = PHI <0(5), subi_52(10)>
_19 = i_32 < len_43;
_20 = subi_35 <= 1022;
_21 = _19 & _20;
if (_21 != 0)
  goto <bb 12>; [94.50%]
else
  goto <bb 13>; [5.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1014686025]:
_22 = (sizetype) i_32;
_23 = pattern_42(D) + _22;
_24 = *_23;
if (_24 != 44)
  goto <bb 6>; [94.50%]
else
  goto <bb 13>; [5.50%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 114863531]:
if (subi_35 > 1022)
  goto <bb 21>; [3.66%]
else
  goto <bb 14>; [96.34%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 110659526]:
if (i_32 < len_43)
  goto <bb 15>; [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 55329763]:
_25 = (sizetype) i_32;
_26 = pattern_42(D) + _25;
_27 = *_26;
if (_27 == 44)
  goto <bb 16>; [34.00%]
else
  goto <bb 17>; [66.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 18812120]:
i_54 = i_32 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 110659526]:
# i_33 = PHI <i_32(14), i_32(15), i_54(16)>
sub[subi_35] = 0;
_28 = match_pattern (string_56(D), &sub);
if (_28 != 0)
  goto <bb 18>; [50.00%]
else
  goto <bb 19>; [50.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 55329763]:
if (negated_29 != 0)
  goto <bb 21>; [3.66%]
else
  goto <bb 19>; [96.34%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 108634456]:
# got_positive_46 = PHI <got_positive_30(17), 1(18)>
# i_44 = PHI <i_33(17), i_33(18)>

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 348071305]:
# got_positive_30 = PHI <0(2), got_positive_46(19)>
# i_34 = PHI <0(2), i_44(19)>
if (i_34 < len_43)
  goto <bb 3>; [33.00%]
else
  goto <bb 21>; [67.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 239436850]:
# _37 = PHI <0(13), -1(18), got_positive_30(20)>
sub ={v} {CLOBBER};
return _37;

=======Mapping node_fun:match_pattern=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 104094422]:

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1073741824]:
# s_19 = PHI <s_23(D)(2), s_26(16)>
# pattern_21 = PHI <pattern_24(D)(2), pattern_27(16)>
_1 = *pattern_21;
if (_1 == 0)
  goto <bb 4>; [2.75%]
else
  goto <bb 5>; [97.25%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 29527904]:
_2 = *s_19;
_3 = _2 == 0;
_29 = (int) _3;
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1044213921]:
_4 = *pattern_21;
if (_4 == 42)
  goto <bb 6>; [2.75%]
else
  goto <bb 13>; [97.25%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 28715887]:
_5 = MEM[(const char *)pattern_21 + 1B];
if (_5 == 0)
  goto <bb 17>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 18952485]:
_6 = MEM[(const char *)pattern_21 + 1B];
_7 = _6 != 63;
_8 = MEM[(const char *)pattern_21 + 1B];
_9 = _8 != 42;
_10 = _7 & _9;
if (_10 != 0)
  goto <bb 18>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 9476243]:
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 83711608]:
_11 = *s_20;
_12 = MEM[(const char *)pattern_21 + 1B];
if (_11 == _12)
  goto <bb 17>; [5.50%]
else
  goto <bb 9>; [94.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 79107470]:
s_28 = s_20 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 88583712]:
# s_20 = PHI <s_19(18), s_28(9)>
_13 = *s_20;
if (_13 != 0)
  goto <bb 8>; [94.50%]
else
  goto <bb 17>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 9476243]:
_14 = *s_19;
if (_14 != 0)
  goto <bb 17>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 4738121]:
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 1015498034]:
_15 = *s_19;
if (_15 == 0)
  goto <bb 17>; [2.75%]
else
  goto <bb 14>; [97.25%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 987571833]:
_16 = *pattern_21;
if (_16 != 63)
  goto <bb 15>; [66.00%]
else
  goto <bb 16>; [34.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 651797407]:
_17 = *pattern_21;
_18 = *s_19;
if (_17 != _18)
  goto <bb 17>; [2.75%]
else
  goto <bb 16>; [97.25%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 969647403]:
s_26 = s_19 + 1;
pattern_27 = pattern_21 + 1;
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 104094421]:
# _22 = PHI <_29(4), 1(6), 1(8), 0(10), 1(11), 0(12), 0(13), 0(15)>
return _22;

=======Mapping node_fun:strlcat=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 958878296]:
d_24 = d_8 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# d_8 = PHI <dst_19(D)(2), d_24(3)>
# n_12 = PHI <siz_21(D)(2), n_22(3)>
n_22 = n_12 + 18446744073709551615;
if (n_12 != 0)
  goto <bb 5>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686026]:
_1 = *d_8;
if (_1 != 0)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
_2 = d_8 - dst_19(D);
dlen_25 = (size_t) _2;
n_26 = siz_21(D) - dlen_25;
if (n_26 == 0)
  goto <bb 7>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 39053601]:
_3 = strlen (src_20(D));
_33 = _3 + dlen_25;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 613371258]:
if (n_14 != 1)
  goto <bb 9>; [66.00%]
else
  goto <bb 10>; [34.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 404825028]:
d_29 = d_10 + 1;
_4 = *s_11;
*d_10 = _4;
n_31 = n_14 + 18446744073709551615;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 613371258]:
# d_9 = PHI <d_10(8), d_29(9)>
# n_13 = PHI <n_14(8), n_31(9)>
s_32 = s_11 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 689181189]:
# d_10 = PHI <d_8(6), d_9(10)>
# s_11 = PHI <src_20(D)(6), s_32(10)>
# n_14 = PHI <n_26(6), n_13(10)>
_5 = *s_11;
if (_5 != 0)
  goto <bb 8>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 75809930]:
*d_10 = 0;
_6 = s_11 - src_20(D);
_7 = (long unsigned int) _6;
_28 = _7 + dlen_25;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 114863531]:
# _15 = PHI <_33(7), _28(12)>
return _15;

=======Mapping node_fun:strsep=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 69395768]:
s_11 = *stringp_10(D);
if (s_11 == 0B)
  goto <bb 9>; [14.90%]
else
  goto <bb 10>; [85.10%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 59055799]:

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 114863530]:
# s_3 = PHI <s_11(10), s_12(11)>
s_12 = s_3 + 1;
_1 = *s_3;
c_13 = (int) _1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# spanp_5 = PHI <delim_14(D)(3), spanp_15(12)>
spanp_15 = spanp_5 + 1;
_2 = *spanp_5;
sc_16 = (int) _2;
if (c_13 == sc_16)
  goto <bb 5>; [5.50%]
else
  goto <bb 8>; [94.50%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 59055800]:
if (c_13 == 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 29527900]:
MEM[(char *)s_12 + -1B] = 0;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 59055800]:
# s_4 = PHI <0B(5), s_12(6)>
*stringp_10(D) = s_4;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1014686025]:
if (sc_16 != 0)
  goto <bb 12>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 958878294]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 55807731]:
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 69395769]:
# _6 = PHI <0B(2), s_11(7)>
return _6;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    find Entry point : 9 [0m
[40;34m    used_stmt array stack totalsize of : 0.002088 mb[0m
[40;34m    collect time: : 0.000209 s [0m
[40;34m    algorithm time: 0.085321 s [0m
[40;34m    gimple stmt count : : 148 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt                           |      |      |      |      |     -0.2%|     -0.0%|
ch                               |      |      |      |      |     +4.0%|     -0.1%|
cplxlower                        |      |      |      |      |     +4.1%|     -0.1%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -2.3%|     -1.9%|
copyprop                         |      |      |      |      |     -2.6%|     -1.9%|
reassoc                          |      |      |      |      |     -0.2%|     -0.0%|
dce                              |      |      |      |      |     -0.2%|     -0.0%|
forwprop                         |      |      |      |      |     -0.5%|     -0.0%|
phiopt                           |      |      |      |      |     -0.2%|     -0.0%|
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |     -5.9%|    -24.1%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     +0.3%|     +0.1%|
lim                              |      |      |      |      |     +0.3%|     +0.1%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |     +6.2%|    +31.8%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +3.4%|     -0.0%|
strlen                           |      |      |      |      |     +3.3%|     -0.0%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.2%|     -0.0%|
forwprop                         |      |      |      |      |     -0.2%|     -0.0%|
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +77.6%|    +62.4%|
into_cfglayout                   |      |      |      |      |     -3.0%|     -0.9%|
jump                             |      |      |      |      |     -3.1%|     -0.9%|
subreg1              ------------|      |      |      |      |          |          |
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.5%|     -1.0%|
ce1                              |      |      |      |      |     -1.5%|     -0.9%|
reginfo                          |      |      |      |      |          |     +0.1%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |     +0.6%|     -0.2%|
loop2_done                       |      |      |      |      |     +0.6%|     -0.2%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2                          |      |      |      |      |     -0.4%|     -0.4%|
init-regs                        |      |      |      |      |     -0.4%|     -0.4%|
combine                          |      |      |      |      |     -0.1%|     -0.6%|
ce2                              |      |      |      |      |     -0.1%|     -0.6%|
outof_cfglayout                  |      |      |      |      |     +2.8%|     +0.2%|
split1                           |      |      |      |      |     +2.7%|     +0.2%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     +0.1%|     +0.0%|
reload                           |      |      |      |      |     -3.5%|     -1.5%|
postreload                       |      |      |      |      |     -4.0%|     -1.6%|
split2                           |      |      |      |      |     +0.1%|     -0.0%|
cmpelim                          |      |      |      |      |     +0.4%|     +0.0%|
pro_and_epilogue                 |      |      |      |      |     +4.7%|     +3.4%|
dse2                             |      |    +2|      |      |     +4.5%|     +3.2%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                              |      |      |      |      |          |     +0.1%|
cprop_hardreg                    |      |      |      |      |     -0.1%|     +0.1%|
rtl_dce                          |      |      |      |      |     -0.1%|     -0.0%|
bbro                             |      |      |      |      |     -0.1%|     +0.2%|
split4                           |      |      |      |      |     -0.1%|     +0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
