../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:10:
./benchmarks/openssh-portable/leak_1/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_1/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c: In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   57 |                 return(dlen + strlen(s));
      |                               ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../openssh.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
   57 |                 return(dlen + strlen(s));
      |                               ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c: In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: implicit declaration of function ‘isupper’ [-Wimplicit-function-declaration]
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^~~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:11:1: note: include ‘<ctype.h>’ or provide a declaration of ‘isupper’
   10 | #include "../openssh.h"
  +++ |+#include <ctype.h>
   11 | 
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: implicit declaration of function ‘tolower’ [-Wimplicit-function-declaration]
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^~~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: note: include ‘<ctype.h>’ or provide a declaration of ‘tolower’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c: In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  188 |     char *orig_prop = strdup(proposal);
      |                       ^~~~~~
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1298k ( 44%)
 phase parsing                      :   0.01 ( 50%)   0.03 (100%)   0.04 ( 67%)  1397k ( 48%)
 phase opt and generate             :   0.01 ( 50%)   0.00 (  0%)   0.01 ( 17%)   214k (  7%)
 callgraph ipa passes               :   0.01 ( 50%)   0.00 (  0%)   0.01 ( 17%)   113k (  4%)
 ipa function summary               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    15k (  1%)
 lexical analysis                   :   0.00 (  0%)   0.00 (  0%)   0.02 ( 33%)     0  (  0%)
 parser (global)                    :   0.01 ( 50%)   0.01 ( 33%)   0.02 ( 33%)   564k ( 19%)
 parser struct body                 :   0.00 (  0%)   0.02 ( 67%)   0.00 (  0%)   115k (  4%)
 tree forward propagate             :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)  1656  (  0%)
 TOTAL                              :   0.02          0.03          0.06         2921k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 phase opt and generate             :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 whopr wpa                          :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.00         2234k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------match_filter_list--
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
=======node_fun:match_filter_list=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 3 
 	next_branch :=12
node:= 4 
 	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------match_pattern_list--
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------strlcat--
node:= 8 
 	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------strlcat--
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=5
	next_branch :=11
addr_expraddr_expraddr_expraddr_expraddr_expr------strsep--
node:= 11 
 	next_branch :=12
=======node_fun:match_pattern_list=========
node:= 2 
 	next_branch :=20
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=11
node:= 6 
 	next_branch :=7
	next_branch :=9
node:= 7 
 	next_branch :=8
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------isupper--
node:= 8 
 	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------tolower--
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=6
	next_branch :=13
node:= 13 
 	next_branch :=21
	next_branch :=14
node:= 14 
 	next_branch :=15
	next_branch :=17
node:= 15 
 	next_branch :=16
	next_branch :=17
node:= 16 
 	next_branch :=17
node:= 17 
 	next_branch :=18
	next_branch :=19
addr_expraddr_expraddr_expraddr_expraddr_expr------match_pattern--
node:= 18 
 	next_branch :=21
	next_branch :=19
node:= 19 
 	next_branch :=20
node:= 20 
 	next_branch :=3
	next_branch :=21
=======node_fun:match_pattern=========
node:= 2 
 	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=17
node:= 5 
 	next_branch :=6
	next_branch :=13
node:= 6 
 	next_branch :=17
	next_branch :=7
node:= 7 
 	next_branch :=18
	next_branch :=11
node:= 18 
 	next_branch :=10
node:= 8 
 	next_branch :=17
	next_branch :=9
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=8
	next_branch :=17
node:= 11 
 	next_branch :=17
	next_branch :=12
node:= 12 
 	next_branch :=17
node:= 13 
 	next_branch :=17
	next_branch :=14
node:= 14 
 	next_branch :=15
	next_branch :=16
node:= 15 
 	next_branch :=17
	next_branch :=16
node:= 16 
 	next_branch :=3
=======node_fun:strlcat=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=3
	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=11
node:= 7 
 	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=8
	next_branch :=12
node:= 12 
 	next_branch :=13
=======node_fun:strsep=========
node:= 2 
 	next_branch :=9
	next_branch :=10
node:= 10 
 	next_branch :=3
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=8
node:= 5 
 	next_branch :=7
	next_branch :=6
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=9
node:= 8 
 	next_branch :=12
	next_branch :=11
node:= 12 
 	next_branch :=4
node:= 11 
 	next_branch :=3
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 29 
===============The second stage : Mapping stmt=================
# .MEM_7 = VDEF <.MEM_6(D)>
proposal_4 = match_filter_list ("proposal", "filter");
# .MEM_8 = VDEF <.MEM_7>
__builtin_puts (&"match_filter_list failed"[0]);
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
# VUSE <.MEM_57>
_10 = isupper (_9);
# VUSE <.MEM_57>
_16 = tolower (_15);
# .MEM_61 = VDEF <.MEM_57>
sub[subi_35] = _36;
# .MEM_62 = VDEF <.MEM_57>
sub[subi_35] = 0;
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
proposal_4 = match_filter_list ("proposal", "filter");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
proposal_4 = match_filter_list ("proposal", "filter");
========================================================
=============== *this point analyzable =================
proposal_4 = match_filter_list ("proposal", "filter");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"match_filter_list failed"[0]);
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
_1 = strlen (proposal_12(D));
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
_1 = strlen (proposal_12(D));
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
fix_prop_15 = malloc (len_13);
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
orig_prop_17 = strdup (proposal_12(D));
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
_5 = match_pattern_list (cp_21, filter_24(D), 0);
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
_5 = match_pattern_list (cp_21, filter_24(D), 0);
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
_5 = match_pattern_list (cp_21, filter_24(D), 0);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strlcat (fix_prop_15, ",", len_13);
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
=============== *this point analyzable =================
strlcat (fix_prop_15, ",", len_13);
========================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
cp_21 = strsep (&tmp, ",");
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
cp_21 = strsep (&tmp, ",");
========================================================
=============== *this point analyzable =================
_1 = strlen (pattern_42(D));
========================================================
=============== *this point analyzable =================
_1 = strlen (pattern_42(D));
========================================================
=============== *this point analyzable =================
_10 = isupper (_9);
========================================================
=============== *this point analyzable =================
_10 = isupper (_9);
========================================================
=============== *this point analyzable =================
_16 = tolower (_15);
========================================================
=============== *this point analyzable =================
_16 = tolower (_15);
========================================================
=============== *this point analyzable =================
_28 = match_pattern (string_56(D), &sub);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_28 = match_pattern (string_56(D), &sub);
========================================================
=============== *this point analyzable =================
_28 = match_pattern (string_56(D), &sub);
========================================================
=============== *this point analyzable =================
_3 = strlen (src_20(D));
========================================================
=============== *this point analyzable =================
_3 = strlen (src_20(D));
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:match_filter_list========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path match_filter_list  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strsep========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strsep  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strsep========= [0m
[40;42m =======start_check_funciton:strsep========= [0m
[40;33m =======POP node_fun stack:strsep========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:match_pattern_list========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern_list  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;33m =======POP node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;33m =======POP node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_pattern_list========= [0m
[40;42m =======start_check_funciton:match_pattern_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
_1 = strlen (pattern_42(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *_26;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 44)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:29: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = pattern_42(D) + _25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:28: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 33)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:20: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
_1 = strlen (pattern_42(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *_26;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 44)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:29: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:28: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 33)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:20: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_10 = isupper (_9);
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt call this function :isupper
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:isupper 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>
is Other function isupper
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_10 = isupper (_9);
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt call this function :isupper
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_16 = tolower (_15);
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch ---tolower-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:tolower 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
is Other function tolower
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_16 = tolower (_15);
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch ---tolower-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with sub ========= [0m
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with sub ========= [0m
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>

 ================== pre trace ptable ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
is Other function match_pattern
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:match_pattern_list========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_filter_list========= [0m
[40;42m =======start_check_funciton:match_filter_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
orig_prop_17 = strdup (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt call this function :strdup
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
free (orig_prop_17);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
orig_prop_17 = strdup (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt call this function :strdup
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
fix_prop_15 = malloc (len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
orig_prop_17 = strdup (proposal_12(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt call this function :strdup
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
free (orig_prop_17);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>

 ================== pre trace ptable ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_18>
return _6;
lto1: warning: use location
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
is Other function strsep
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
_5 = match_pattern_list (cp_21, filter_24(D), 0);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt call this function :match_pattern_list
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt call this function :match_pattern_list
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
[40;36m ======= relate node_fun argument:filter========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
[40;36m ======= relate node_fun argument:filter========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>

 ================== pre trace ptable ================== 
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :888========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :889========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
is Other function match_pattern_list
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt call this function :match_pattern_list
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f3151e09318
    type <array_type 0x7f3151e029d8
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        HI
        size <integer_cst 0x7f31522e2d68 constant 16>
        unit-size <integer_cst 0x7f31522e2d80 constant 2>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e02930 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31522e2cc0 1>>
        pointer_to_this <pointer_type 0x7f3151e02a80>>
    readonly constant static ",\000">

dot graph START

======================================================================
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlcat
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlcat
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with tmp ========= [0m
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
cp_21 = strsep (&tmp, ",");
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with tmp ========= [0m
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f3151e09330
    type <array_type 0x7f3151e029d8
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        HI
        size <integer_cst 0x7f31522e2d68 constant 16>
        unit-size <integer_cst 0x7f31522e2d80 constant 2>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e02930 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31522e2cc0 1>>
        pointer_to_this <pointer_type 0x7f3151e02a80>>
    readonly constant static ",\000">
[40;33m =======POP node_fun stack:match_filter_list========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f31524deaa0
    type <array_type 0x7f3151e02d20
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17f8 constant 72>
        unit-size <integer_cst 0x7f3151df17e0 constant 9>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e02c78 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31522e2bd0 8>>
        pointer_to_this <pointer_type 0x7f3151e02dc8>>
    readonly constant static "proposal\000">

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f31524deae0
    type <array_type 0x7f3151e02f18
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df1840 constant 56>
        unit-size <integer_cst 0x7f3151df1828 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e02e70 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f3151df1810 6>>
        pointer_to_this <pointer_type 0x7f3151e03000>>
    readonly constant static "filter\000">

dot graph START

======================================================================
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>

 ================== pre trace ptable ================== 
trace fucntion name:match_filter_list 
[40;44m =======trace_function_path match_filter_list  function_call count: 7 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_39>
return _7;
In function ‘main’:
lto1: warning: use location
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:match_filter_list========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
*fix_prop_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strsep========= [0m
[40;46m =======add node_fun stack:strsep========= [0m
[40;44m =======trace_function_path strsep  function_call count: 0 level :889========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:match_pattern_list========= [0m
[40;46m =======add node_fun stack:match_pattern_list========= [0m
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :889========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :890========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
is Other function match_filter_list
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
proposal_4 = match_filter_list ("proposal", "filter");
proposal_4 = match_filter_list ("proposal", "filter");
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:212:26: warning: use location
  212 |         char *proposal = match_filter_list("proposal", "filter");
      |                          ^
this stmt call this function :match_filter_list
trace fucntion name:match_filter_list 
[40;44m =======trace_function_path match_filter_list  function_call count: 7 level :0========  [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:match_filter_list========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
*fix_prop_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strsep========= [0m
[40;46m =======add node_fun stack:strsep========= [0m
[40;44m =======trace_function_path strsep  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:match_pattern_list========= [0m
[40;46m =======add node_fun stack:match_pattern_list========= [0m
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :1========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("proposal : %s\n", proposal_4);
In function ‘main’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:215:9: warning: use location
  215 |         printf("proposal : %s\n", proposal);
      |         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
if (proposal_4 == 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:213:11: warning: use location
  213 |         if(proposal == NULL)
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea5e8
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8ab40 proposal>
    def_stmt proposal_4 = match_filter_list ("proposal", "filter");
    version:4
    ptr-info 0x7f3151e09558>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f31522ec150
    type <integer_type 0x7f3151dfaa80 char readonly public QI
        size <integer_cst 0x7f31522e2ca8 constant 8>
        unit-size <integer_cst 0x7f31522e2cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
        pointer_to_this <pointer_type 0x7f3151dfab28>>
   
    arg:0 <string_cst 0x7f31522e0780
        type <array_type 0x7f3151e031f8 type <integer_type 0x7f3151dfaa80 char>
            BLK
            size <integer_cst 0x7f3151df1870 constant 200>
            unit-size <integer_cst 0x7f3151df1858 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f3151e03150>>
        readonly constant static "match_filter_list failed\000">
    arg:1 <integer_cst 0x7f31522e2f48 type <integer_type 0x7f31522f75e8 int> constant 0>>
 <array_ref 0x7f31522ec150
    type <integer_type 0x7f3151dfaa80 char readonly public QI
        size <integer_cst 0x7f31522e2ca8 constant 8>
        unit-size <integer_cst 0x7f31522e2cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
        pointer_to_this <pointer_type 0x7f3151dfab28>>
   
    arg:0 <string_cst 0x7f31522e0780
        type <array_type 0x7f3151e031f8 type <integer_type 0x7f3151dfaa80 char>
            BLK
            size <integer_cst 0x7f3151df1870 constant 200>
            unit-size <integer_cst 0x7f3151df1858 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f3151e03150>>
        readonly constant static "match_filter_list failed\000">
    arg:1 <integer_cst 0x7f31522e2f48 type <integer_type 0x7f31522f75e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f31522ec150
    type <integer_type 0x7f3151dfaa80 char readonly public QI
        size <integer_cst 0x7f31522e2ca8 constant 8>
        unit-size <integer_cst 0x7f31522e2cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
        pointer_to_this <pointer_type 0x7f3151dfab28>>
   
    arg:0 <string_cst 0x7f31522e0780
        type <array_type 0x7f3151e031f8 type <integer_type 0x7f3151dfaa80 char>
            BLK
            size <integer_cst 0x7f3151df1870 constant 200>
            unit-size <integer_cst 0x7f3151df1858 constant 25>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f3151e03150>>
        readonly constant static "match_filter_list failed\000">
    arg:1 <integer_cst 0x7f31522e2f48 type <integer_type 0x7f31522f75e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
__builtin_puts (&"match_filter_list failed"[0]);
__builtin_puts (&"match_filter_list failed"[0]);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:214:17: warning: use location
  214 |                 printf("match_filter_list failed\n");
      |                 ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
__builtin_puts (&"match_filter_list failed"[0]);
__builtin_puts (&"match_filter_list failed"[0]);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:214:17: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:match_filter_list========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path match_filter_list  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strsep========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strsep  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strsep========= [0m
[40;42m =======start_check_funciton:strsep========= [0m
[40;33m =======POP node_fun stack:strsep========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
In function ‘match_filter_list’:
lto1: warning: use location
this stmt have mutiple branch --------
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:match_pattern_list========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern_list  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;33m =======POP node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;33m =======POP node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_pattern_list========= [0m
[40;42m =======start_check_funciton:match_pattern_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
_1 = strlen (pattern_42(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *_26;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 44)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:29: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = pattern_42(D) + _25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:28: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 33)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:20: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
_1 = strlen (pattern_42(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *_26;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 44)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:29: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:28: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 33)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:20: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_10 = isupper (_9);
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt call this function :isupper
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:isupper 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>
is Other function isupper
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_10 = isupper (_9);
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt call this function :isupper
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_16 = tolower (_15);
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch ---tolower-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:tolower 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
is Other function tolower
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_16 = tolower (_15);
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch ---tolower-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with sub ========= [0m
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with sub ========= [0m
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>

 ================== pre trace ptable ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
is Other function match_pattern
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:match_pattern_list========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_filter_list========= [0m
[40;42m =======start_check_funciton:match_filter_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
In function ‘match_filter_list’:
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
orig_prop_17 = strdup (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt call this function :strdup
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with proposal ========= [0m
[40;36m ======= relate node_fun argument:proposal========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
free (orig_prop_17);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea990
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10000 proposal>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f3151e09588>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_1 = strlen (proposal_12(D));
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
orig_prop_17 = strdup (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt call this function :strdup
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea798
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (proposal_12(D));
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with fix_prop ========= [0m
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:fix_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^
# .MEM_30 = VDEF <.MEM_29(D)>
fix_prop_15 = malloc (len_13);
fix_prop_15 = malloc (len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:187:22: warning: use location
  187 |     char *fix_prop = malloc(len);       /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaa20
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11090 fix_prop>
    def_stmt fix_prop_15 = malloc (len_13);
    version:15
    ptr-info 0x7f3151e095a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (proposal_12(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:18: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |                  ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_13 = _1 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:186:12: warning: use location
  186 |     size_t len = strlen(proposal) + 1;
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
orig_prop_17 = strdup (proposal_12(D));
orig_prop_17 = strdup (proposal_12(D));
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:188:23: warning: use location
  188 |     char *orig_prop = strdup(proposal);
      |                       ^
this stmt call this function :strdup
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with orig_prop ========= [0m
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:orig_prop========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
free (orig_prop_17);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
_3 = orig_prop_17 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:39: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                                       ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaa68
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3151e11000 orig_prop>
    def_stmt orig_prop_17 = strdup (proposal_12(D));
    version:17
    ptr-info 0x7f3151e095b8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_32 = VDEF <.MEM_31>
tmp = orig_prop_17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:197:9: warning: use location
  197 |     tmp = orig_prop;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>

 ================== pre trace ptable ================== 
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_18>
return _6;
lto1: warning: use location
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
is Other function strsep
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_21 = strsep (&tmp, ",");
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
_5 = match_pattern_list (cp_21, filter_24(D), 0);
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt call this function :match_pattern_list
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
In function ‘match_filter_list’:
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with cp ========= [0m
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
   52 |                 d++;
      |                  ^
d_24 = d_8 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:52:18: warning: use location
d_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:d========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
   60 |                         *d++ = *s;
      |                           ^
d_29 = d_10 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:27: warning: use location
d_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
s_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaab0
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    var <var_decl 0x7f3152b8af30 cp>
    def_stmt cp_21 = strsep (&tmp, ",");
    version:21
    ptr-info 0x7f3151e095d0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt call this function :match_pattern_list
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
[40;36m ======= relate node_fun argument:filter========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
In function ‘match_filter_list’:
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filter ========= [0m
[40;36m ======= relate node_fun argument:filter========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
   65 |         *d = '\0';
      |            ^
*d_10 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:65:12: warning: use location
*d_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaaf8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10080 filter>
    def_stmt GIMPLE_NOP
    version:24
    ptr-info 0x7f3151e095e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>

 ================== pre trace ptable ================== 
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :888========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :889========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
is Other function match_pattern_list
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^
this stmt call this function :match_pattern_list
trace fucntion name:match_pattern_list 
[40;44m =======trace_function_path match_pattern_list  function_call count: 4 level :0========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;46m =======add node_fun stack:match_pattern========= [0m
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;46m =======add node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;46m =======add node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea8b8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _5 = match_pattern_list (cp_21, filter_24(D), 0);
    version:5>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_5 = match_pattern_list (cp_21, filter_24(D), 0);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:13: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_5 != 1)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:200:12: warning: use location
  200 |         if (match_pattern_list(cp, filter, 0) != 1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (cp_21 != 0B)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:37: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f3151e09318
    type <array_type 0x7f3151e029d8
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        HI
        size <integer_cst 0x7f31522e2d68 constant 16>
        unit-size <integer_cst 0x7f31522e2d80 constant 2>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e02930 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31522e2cc0 1>>
        pointer_to_this <pointer_type 0x7f3151e02a80>>
    readonly constant static ",\000">

dot graph START

======================================================================
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlcat
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^
this stmt call this function :strlcat
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with len ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location
this stmt have mutiple branch ---strlcat-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strlcat
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^
_2 = fix_prop_15 == 0B;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:18: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                  ^
_4 = _2 | _3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:26: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |                          ^
if (_4 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:191:8: warning: use location
  191 |     if (fix_prop == NULL || orig_prop == NULL) {
      |        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522ea9d8
    type <integer_type 0x7f3151dfadc8 size_t public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615> context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>>
    var <var_decl 0x7f3151e11120 len>
    def_stmt len_13 = _1 + 1;
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: use location
  192 |         free(orig_prop);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: use location
  206 |     free(orig_prop);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_25>
strlcat (fix_prop_15, cp_21, len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:203:13: warning: use location
  203 |             strlcat(fix_prop, cp, len);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:206:5: warning: free in this location
  206 |     free(orig_prop);
      |     ^

===== possiable asias =====
_7 = PHI <0B(3), fix_prop_15(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_34>
strlcat (fix_prop_15, ",", len_13);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:202:17: warning: use location
  202 |                 strlcat(fix_prop, ",", len);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
_6 = *fix_prop_15;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:17: warning: use location
  201 |             if (*fix_prop != '\0')
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:201:16: warning: use location
  201 |             if (*fix_prop != '\0')
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_31>
free (orig_prop_17);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:192:9: warning: free in this location
  192 |         free(orig_prop);
      |         ^

===== possiable asias =====
# .MEM_33 = VDEF <.MEM_32>
*fix_prop_15 = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:198:15: warning: use location
  198 |     *fix_prop = '\0';
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
cp_21 = strsep (&tmp, ",");
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with tmp ========= [0m
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_34 = VDEF <.MEM_27>
cp_21 = strsep (&tmp, ",");
cp_21 = strsep (&tmp, ",");
In function ‘match_filter_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:199:18: warning: use location
  199 |     while ((cp = strsep(&tmp, ",")) != NULL) {
      |                  ^
this stmt call this function :strsep
trace fucntion name:strsep 
[40;44m =======trace_function_path strsep  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3152b8aea0 tmp
    type <pointer_type 0x7f3151dfabd0
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f31522ed168 ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c>
        pointer_to_this <pointer_type 0x7f3151dfac78>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:189:16 size <integer_cst 0x7f31522e2bb8 64> unit-size <integer_cst 0x7f31522e2bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f3151dfbe00 match_filter_list>>
[40;36m ======= node_fun:strsep========= [0m
[40;36m ======= find relate stmt with tmp ========= [0m
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘strsep’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
   23 |         if ((s = *stringp) == NULL)
      |                ^
s_11 = *stringp_10(D);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:23:16: warning: use location
s_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
   26 |                 c = *s++;
      |                       ^
s_12 = s_3 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:26:23: warning: use location
s_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:spanp========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
   29 |                         if ((sc = *spanp++) == c) {
      |                                         ^
spanp_15 = spanp_5 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:29:41: warning: use location
spanp_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
   33 |                                         s[-1] = 0;
      |                                               ^
MEM[(char *)s_12 + -1B] = 0;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:33:47: warning: use location
MEM[(char *)s_12 + -1B]

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
   34 |                                 *stringp = s;
      |                                          ^
*stringp_10(D) = s_4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:34:42: warning: use location
*stringp_10(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f3151e09330
    type <array_type 0x7f3151e029d8
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        HI
        size <integer_cst 0x7f31522e2d68 constant 16>
        unit-size <integer_cst 0x7f31522e2d80 constant 2>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e02930 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31522e2cc0 1>>
        pointer_to_this <pointer_type 0x7f3151e02a80>>
    readonly constant static ",\000">
[40;33m =======POP node_fun stack:match_filter_list========= [0m
[40;44m =======node_fun:match_pattern_list========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path match_pattern_list  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:match_pattern========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;42m =======pre add _ fucntion:tolower========= [0m
[40;33m =======POP node_fun stack:tolower========= [0m
[40;42m =======pre add _ fucntion:isupper========= [0m
[40;33m =======POP node_fun stack:isupper========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:match_pattern_list========= [0m
[40;42m =======start_check_funciton:match_pattern_list========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
_1 = strlen (pattern_42(D));
In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *_26;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 44)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:29: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = pattern_42(D) + _25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:28: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 33)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:20: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18a20
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10180 pattern>
    def_stmt GIMPLE_NOP
    version:42
    ptr-info 0x7f3151e09690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_60(D)>
_1 = strlen (pattern_42(D));
_1 = strlen (pattern_42(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:37: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
len_43 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:136:31: warning: use location
  136 |         unsigned int i, subi, len = strlen(pattern);
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = i_32 < len_43;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:23: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & _20;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:29: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:152:55: warning: use location
  152 |                     i < len && subi < sizeof(sub) - 1 && pattern[i] != ',';
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = *_26;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:39: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_27 == 44)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:161:29: warning: use location
  161 |                 if (i < len && pattern[i] == ',')
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = pattern_42(D) + _17;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:66: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = pattern_42(D) + _11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:52: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (unsigned char) _13;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:37: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = (int) _14;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *_3;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:28: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 33)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:141:20: warning: use location
  141 |                 if (pattern[i] == '!') {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f31522eaf78
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _1 = strlen (pattern_42(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_10 = isupper (_9);
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt call this function :isupper
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e181f8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _9 = (int) _8;
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:isupper 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>
is Other function isupper
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_10 = isupper (_9);
_10 = isupper (_9);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:48: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                                ^
this stmt call this function :isupper
trace fucntion name:isupper 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:45: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18240
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _10 = isupper (_9);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_16 = tolower (_15);
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch ---tolower-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e183a8
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _15 = (int) _14;
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:tolower 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
is Other function tolower
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_57>
_16 = tolower (_15);
_16 = tolower (_15);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:155:29: warning: use location
  155 |                             tolower((u_char)pattern[i]) : pattern[i];
      |                             ^
this stmt call this function :tolower
trace fucntion name:tolower 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (char) _16;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = PHI <_49(8), _50(9)>
lto1: warning: use location
this stmt have mutiple branch ---tolower-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e183f0
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _16 = tolower (_15);
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with string ========= [0m
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:string========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18d38
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10100 string>
    def_stmt GIMPLE_NOP
    version:56
    ptr-info 0x7f3151e096a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with sub ========= [0m
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <var_decl 0x7f3151e11870 sub
    type <array_type 0x7f3151e02348
        type <integer_type 0x7f3151dfa9d8 char public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfabd0>>
        BLK
        size <integer_cst 0x7f3151df17b0 constant 8192>
        unit-size <integer_cst 0x7f3151df1798 constant 1024>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f3151e022a0 type <integer_type 0x7f31522f7000 sizetype>
            DI
            size <integer_cst 0x7f31522e2bb8 constant 64>
            unit-size <integer_cst 0x7f31522e2bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2be8 0> max <integer_cst 0x7f31523b70a8 1023>>
        pointer_to_this <pointer_type 0x7f3151e02540>>
    addressable BLK ./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:133:7 size <integer_cst 0x7f3151df17b0 8192> unit-size <integer_cst 0x7f3151df1798 1024>
    align:8 warn_if_not_align:0 context <function_decl 0x7f3151dfbd00 match_pattern_list> chain <var_decl 0x7f3151e117e0 negated>>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with sub ========= [0m
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
In function ‘match_pattern’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
   98 |                                 for (; *s; s++)
      |                                             ^
s_28 = s_20 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:98:45: warning: use location
s_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:s========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
  125 |                 s++;
      |                  ^
s_26 = s_19 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:125:18: warning: use location
s_26

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sub========= [0m
[40;36m ======= relate gimple_assign_lhs:pattern========= [0m
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
  126 |                 pattern++;
      |                        ^
pattern_27 = pattern_21 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:126:24: warning: use location
pattern_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>

 ================== pre trace ptable ================== 
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
is Other function match_pattern
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_62>
_28 = match_pattern (string_56(D), &sub);
_28 = match_pattern (string_56(D), &sub);
In function ‘match_pattern_list’:
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:21: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                     ^
this stmt call this function :match_pattern
trace fucntion name:match_pattern 
[40;44m =======trace_function_path match_pattern  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>
[40;36m ======= node_fun:match_pattern========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_28 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:168:20: warning: use location
  168 |                 if (match_pattern(string, sub)) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sub[subi_35] = _36;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:154:35: warning: use location
  154 |                         sub[subi] = dolower && isupper((u_char)pattern[i]) ?
      |                                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e18750
    type <integer_type 0x7f31522f75e8 int public SI
        size <integer_cst 0x7f31522e2df8 constant 32>
        unit-size <integer_cst 0x7f31522e2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f75e8 precision:32 min <integer_cst 0x7f31522e2db0 -2147483648> max <integer_cst 0x7f31522e2dc8 2147483647>
        pointer_to_this <pointer_type 0x7f31522fe9d8>>
   
    def_stmt _28 = match_pattern (string_56(D), &sub);
    version:28>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:match_pattern_list========= [0m
[40;44m =======node_fun:match_pattern========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path match_pattern  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:match_pattern========= [0m
[40;42m =======start_check_funciton:match_pattern========= [0m
[40;33m =======POP node_fun stack:match_pattern========= [0m
[40;44m =======node_fun:strlcat========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strlcat  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
In function ‘strlcat’:
lto1: warning: use location
this stmt have mutiple branch --------
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1dca8
    type <pointer_type 0x7f3151dfab28
        type <integer_type 0x7f3151dfaa80 char readonly public QI
            size <integer_cst 0x7f31522e2ca8 constant 8>
            unit-size <integer_cst 0x7f31522e2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f73f0 precision:8 min <integer_cst 0x7f3151df1720 -128> max <integer_cst 0x7f3151df1708 127>
            pointer_to_this <pointer_type 0x7f3151dfab28>>
        public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f3151e10400 src>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f3151e097f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_11 = PHI <src_20(D)(6), s_32(10)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_7 = (long unsigned int) _6;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:26: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                          ^
_28 = _7 + dlen_25;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:67:21: warning: use location
   67 |         return(dlen + (s - src));       /* count does not include NUL */
      |                     ^
_15 = PHI <_33(7), _28(12)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:16: warning: use location
   58 |         while (*s != '\0') {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 != 0)
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:58:19: warning: use location
   58 |         while (*s != '\0') {
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_32 = s_11 + 1;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:63:18: warning: use location
   63 |                 s++;
      |                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = *s_11;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:32: warning: use location
   60 |                         *d++ = *s;
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_10 = _4;
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:60:30: warning: use location
   60 |                         *d++ = *s;
      |                              ^
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
   57 |                 return(dlen + strlen(s));
      |                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_37(D)>
_3 = strlen (src_20(D));
_3 = strlen (src_20(D));
./benchmarks/openssh-portable/leak_1/openssh_leak_1.c:57:31: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3151e1d8b8
    type <integer_type 0x7f31522f77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f31522e2bb8 constant 64>
        unit-size <integer_cst 0x7f31522e2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f31522f7738 precision:64 min <integer_cst 0x7f31522e2e88 0> max <integer_cst 0x7f31522e3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f31523037e0>>
   
    def_stmt _3 = strlen (src_20(D));
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;44m =======node_fun:strsep========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strsep  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strsep========= [0m
[40;42m =======start_check_funciton:strsep========= [0m
[40;33m =======POP node_fun stack:strsep========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
proposal_4 = match_filter_list ("proposal", "filter");
if (proposal_4 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 4>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
__builtin_puts (&"match_filter_list failed"[0]);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
printf ("proposal : %s\n", proposal_4);
return 0;

=======Mapping node_fun:match_filter_list=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 59079431]:
_1 = strlen (proposal_12(D));
len_13 = _1 + 1;
fix_prop_15 = malloc (len_13);
orig_prop_17 = strdup (proposal_12(D));
_2 = fix_prop_15 == 0B;
_3 = orig_prop_17 == 0B;
_4 = _2 | _3;
if (_4 != 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 23632]:
free (orig_prop_17);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 59055799]:
tmp = orig_prop_17;
*fix_prop_15 = 0;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686025]:
_5 = match_pattern_list (cp_21, filter_24(D), 0);
if (_5 != 1)
  goto <bb 6>; [5.50%]
else
  goto <bb 10>; [94.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 55807731]:
_6 = *fix_prop_15;
if (_6 != 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 18416551]:
strlcat (fix_prop_15, ",", len_13);

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 55807731]:
strlcat (fix_prop_15, cp_21, len_13);

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 114863530]:

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
cp_21 = strsep (&tmp, ",");
if (cp_21 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 59055800]:
free (orig_prop_17);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 59079432]:
# _7 = PHI <0B(3), fix_prop_15(11)>
tmp ={v} {CLOBBER};
return _7;

=======Mapping node_fun:match_pattern_list=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 239436848]:
_1 = strlen (pattern_42(D));
len_43 = (unsigned int) _1;
goto <bb 20>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 114863530]:
_2 = (sizetype) i_34;
_3 = pattern_42(D) + _2;
_4 = *_3;
if (_4 == 33)
  goto <bb 4>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 39053601]:
i_47 = i_34 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 114863530]:
# negated_29 = PHI <0(3), 1(4)>
# i_31 = PHI <i_34(3), i_47(4)>
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 958878293]:
if (dolower_48(D) != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 479439146]:
_5 = (sizetype) i_32;
_6 = pattern_42(D) + _5;
_7 = *_6;
_8 = (unsigned char) _7;
_9 = (int) _8;
_10 = isupper (_9);
if (_10 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 239719573]:
_11 = (sizetype) i_32;
_12 = pattern_42(D) + _11;
_13 = *_12;
_14 = (unsigned char) _13;
_15 = (int) _14;
_16 = tolower (_15);
_49 = (char) _16;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 719158720]:
_17 = (sizetype) i_32;
_18 = pattern_42(D) + _17;
_50 = *_18;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 958878293]:
# _36 = PHI <_49(8), _50(9)>
sub[subi_35] = _36;
subi_52 = subi_35 + 1;
i_53 = i_32 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# i_32 = PHI <i_31(5), i_53(10)>
# subi_35 = PHI <0(5), subi_52(10)>
_19 = i_32 < len_43;
_20 = subi_35 <= 1022;
_21 = _19 & _20;
if (_21 != 0)
  goto <bb 12>; [94.50%]
else
  goto <bb 13>; [5.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1014686025]:
_22 = (sizetype) i_32;
_23 = pattern_42(D) + _22;
_24 = *_23;
if (_24 != 44)
  goto <bb 6>; [94.50%]
else
  goto <bb 13>; [5.50%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 114863531]:
if (subi_35 > 1022)
  goto <bb 21>; [3.66%]
else
  goto <bb 14>; [96.34%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 110659526]:
if (i_32 < len_43)
  goto <bb 15>; [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 55329763]:
_25 = (sizetype) i_32;
_26 = pattern_42(D) + _25;
_27 = *_26;
if (_27 == 44)
  goto <bb 16>; [34.00%]
else
  goto <bb 17>; [66.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 18812120]:
i_54 = i_32 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 110659526]:
# i_33 = PHI <i_32(14), i_32(15), i_54(16)>
sub[subi_35] = 0;
_28 = match_pattern (string_56(D), &sub);
if (_28 != 0)
  goto <bb 18>; [50.00%]
else
  goto <bb 19>; [50.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 55329763]:
if (negated_29 != 0)
  goto <bb 21>; [3.66%]
else
  goto <bb 19>; [96.34%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 108634456]:
# got_positive_46 = PHI <got_positive_30(17), 1(18)>
# i_44 = PHI <i_33(17), i_33(18)>

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 348071305]:
# got_positive_30 = PHI <0(2), got_positive_46(19)>
# i_34 = PHI <0(2), i_44(19)>
if (i_34 < len_43)
  goto <bb 3>; [33.00%]
else
  goto <bb 21>; [67.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 239436850]:
# _37 = PHI <0(13), -1(18), got_positive_30(20)>
sub ={v} {CLOBBER};
return _37;

=======Mapping node_fun:match_pattern=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 104094422]:

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1073741824]:
# s_19 = PHI <s_23(D)(2), s_26(16)>
# pattern_21 = PHI <pattern_24(D)(2), pattern_27(16)>
_1 = *pattern_21;
if (_1 == 0)
  goto <bb 4>; [2.75%]
else
  goto <bb 5>; [97.25%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 29527904]:
_2 = *s_19;
_3 = _2 == 0;
_29 = (int) _3;
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1044213921]:
_4 = *pattern_21;
if (_4 == 42)
  goto <bb 6>; [2.75%]
else
  goto <bb 13>; [97.25%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 28715887]:
_5 = MEM[(const char *)pattern_21 + 1B];
if (_5 == 0)
  goto <bb 17>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 18952485]:
_6 = MEM[(const char *)pattern_21 + 1B];
_7 = _6 != 63;
_8 = MEM[(const char *)pattern_21 + 1B];
_9 = _8 != 42;
_10 = _7 & _9;
if (_10 != 0)
  goto <bb 18>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 9476243]:
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 83711608]:
_11 = *s_20;
_12 = MEM[(const char *)pattern_21 + 1B];
if (_11 == _12)
  goto <bb 17>; [5.50%]
else
  goto <bb 9>; [94.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 79107470]:
s_28 = s_20 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 88583712]:
# s_20 = PHI <s_19(18), s_28(9)>
_13 = *s_20;
if (_13 != 0)
  goto <bb 8>; [94.50%]
else
  goto <bb 17>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 9476243]:
_14 = *s_19;
if (_14 != 0)
  goto <bb 17>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 4738121]:
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 1015498034]:
_15 = *s_19;
if (_15 == 0)
  goto <bb 17>; [2.75%]
else
  goto <bb 14>; [97.25%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 987571833]:
_16 = *pattern_21;
if (_16 != 63)
  goto <bb 15>; [66.00%]
else
  goto <bb 16>; [34.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 651797407]:
_17 = *pattern_21;
_18 = *s_19;
if (_17 != _18)
  goto <bb 17>; [2.75%]
else
  goto <bb 16>; [97.25%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 969647403]:
s_26 = s_19 + 1;
pattern_27 = pattern_21 + 1;
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 104094421]:
# _22 = PHI <_29(4), 1(6), 1(8), 0(10), 1(11), 0(12), 0(13), 0(15)>
return _22;

=======Mapping node_fun:strlcat=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 958878296]:
d_24 = d_8 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# d_8 = PHI <dst_19(D)(2), d_24(3)>
# n_12 = PHI <siz_21(D)(2), n_22(3)>
n_22 = n_12 + 18446744073709551615;
if (n_12 != 0)
  goto <bb 5>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686026]:
_1 = *d_8;
if (_1 != 0)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
_2 = d_8 - dst_19(D);
dlen_25 = (size_t) _2;
n_26 = siz_21(D) - dlen_25;
if (n_26 == 0)
  goto <bb 7>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 39053601]:
_3 = strlen (src_20(D));
_33 = _3 + dlen_25;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 613371258]:
if (n_14 != 1)
  goto <bb 9>; [66.00%]
else
  goto <bb 10>; [34.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 404825028]:
d_29 = d_10 + 1;
_4 = *s_11;
*d_10 = _4;
n_31 = n_14 + 18446744073709551615;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 613371258]:
# d_9 = PHI <d_10(8), d_29(9)>
# n_13 = PHI <n_14(8), n_31(9)>
s_32 = s_11 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 689181189]:
# d_10 = PHI <d_8(6), d_9(10)>
# s_11 = PHI <src_20(D)(6), s_32(10)>
# n_14 = PHI <n_26(6), n_13(10)>
_5 = *s_11;
if (_5 != 0)
  goto <bb 8>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 75809930]:
*d_10 = 0;
_6 = s_11 - src_20(D);
_7 = (long unsigned int) _6;
_28 = _7 + dlen_25;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 114863531]:
# _15 = PHI <_33(7), _28(12)>
return _15;

=======Mapping node_fun:strsep=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 69395768]:
s_11 = *stringp_10(D);
if (s_11 == 0B)
  goto <bb 9>; [14.90%]
else
  goto <bb 10>; [85.10%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 59055799]:

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 114863530]:
# s_3 = PHI <s_11(10), s_12(11)>
s_12 = s_3 + 1;
_1 = *s_3;
c_13 = (int) _1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# spanp_5 = PHI <delim_14(D)(3), spanp_15(12)>
spanp_15 = spanp_5 + 1;
_2 = *spanp_5;
sc_16 = (int) _2;
if (c_13 == sc_16)
  goto <bb 5>; [5.50%]
else
  goto <bb 8>; [94.50%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 59055800]:
if (c_13 == 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 29527900]:
MEM[(char *)s_12 + -1B] = 0;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 59055800]:
# s_4 = PHI <0B(5), s_12(6)>
*stringp_10(D) = s_4;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1014686025]:
if (sc_16 != 0)
  goto <bb 12>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 958878294]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 55807731]:
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 69395769]:
# _6 = PHI <0B(2), s_11(7)>
return _6;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    all ptable point : 30 [0m
[40;34m    analyzable ptable point : 26 [0m
[40;34m    used_stmt array stack totalsize of : 0.003552 mb[0m
[40;34m    collect time: : 0.004396 s [0m
[40;34m    algorithm time: 0.153047 s [0m
[40;34m    gimple stmt count : : 148 [0m
[40;34m    this report analysis in Fri Feb 18 12:19:08 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 73%)
 phase opt and generate             :   0.07 (100%)   0.12 (100%)   0.20 (100%)   772k ( 26%)
 callgraph functions expansion      :   0.03 ( 43%)   0.00 (  0%)   0.04 ( 20%)   625k ( 21%)
 df live regs                       :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 tree operand scan                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    22k (  1%)
 dominance computation              :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)     0  (  0%)
 LRA non-specific                   :   0.02 ( 29%)   0.00 (  0%)   0.00 (  0%)  4800  (  0%)
 final                              :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    30k (  1%)
 plugin execution                   :   0.04 ( 57%)   0.12 (100%)   0.15 ( 75%)  3336  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    20k (  1%)
 TOTAL                              :   0.07          0.12          0.20         2968k
