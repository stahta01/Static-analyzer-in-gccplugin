In file included from ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:10:
./benchmarks/openssh-portable/leak_9/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_9/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_9/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_9/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_9/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c: In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^~~~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
   10 | #include "../openssh.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^~~~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
In file included from ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:9:
./benchmarks/openssh-portable/leak_9/../stdio.h:266:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: note: in expansion of macro ‘xstrdup’
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^~~~~~~
./benchmarks/openssh-portable/leak_9/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: note: in expansion of macro ‘xstrdup’
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^~~~~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c: In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:243:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  243 |         srand(time(NULL));
      |               ^~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:21: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  259 |                 if (strcmp(filename, ".") == 0 ||
      |                     ^~~~~~
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:21: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -0.5%|          |
nothrow                          |      |      |      |      |     -0.5%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 7
succs:= 8
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 11
=======node_fun:do_readdir=========

=======node_fun:do_lsreaddir=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 9
succs:= 10
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 5
succs:= 15
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 16
succs:= 11
succs:= 17
--------GIMPLE Cond -------
succs:= 18
succs:= 4
succs:= 16
succs:= 17
succs:= 18
=======node_fun:free_sftp_dirents=========

--------GIMPLE Cond -------
succs:= 4
=======node_fun:xrealloc=========

--------GIMPLE Cond -------
succs:= 13
succs:= 15
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 9
succs:= 4
succs:= 9
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_34 = VDEF <.MEM_33(D)>
_1 = time (0B);
# .MEM_35 = VDEF <.MEM_34>
srand (_2);
# .MEM_36 = VDEF <.MEM_35>
_3 = do_readdir (src_17, &dir_entries);
# .MEM_38 = VDEF <.MEM_36>
printf ("%s: Failed to get directory contents", src_17);
# VUSE <.MEM_36>
_9 = strcmp (filename_30, ".");
# VUSE <.MEM_36>
_10 = strcmp (filename_30, "..");
# .MEM_37 = VDEF <.MEM_36>
free_sftp_dirents (_16);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = do_lsreaddir (path_2(D), 0, dir_3(D));
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();
# .MEM_98 = VDEF <.MEM_87>
__builtin_puts ("longname");
# VUSE <.MEM_85>
_7 = strchr (path_63(D), 47);
# .MEM_108 = VDEF <.MEM_85>
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
# .MEM_99 = VDEF <.MEM_85>
_11 = xrealloc (_10, _9, 8);
# .MEM_101 = VDEF <.MEM_100>
_16 = calloc (1, 56);
# .MEM_103 = VDEF <.MEM_102>
_22 = strdup (path_63(D));
# .MEM_105 = VDEF <.MEM_104>
_28 = strdup ("longname");
# .MEM_109 = VDEF <.MEM_86>
_33 = rand ();
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);
# .MEM_21 = VDEF <.MEM_14(D)>
printf ("xrealloc: zero size%s\n", "");
# .MEM_19 = VDEF <.MEM_14(D)>
printf ("xrealloc: nmemb * size > SIZE_T_MAX%s\n", "");
# .MEM_16 = VDEF <.MEM_14(D)>
new_ptr_12 = malloc (new_size_6);
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_sftp_dirents  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_sftp_dirents========= [0m
[40;42m =======start_check_funciton:free_sftp_dirents========= [0m
[40;33m =======POP node_fun stack:free_sftp_dirents========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:do_readdir========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_readdir  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_lsreaddir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path do_lsreaddir  function_call count: 8 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_sftp_dirents  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_sftp_dirents========= [0m
[40;42m =======start_check_funciton:free_sftp_dirents========= [0m
[40;33m =======POP node_fun stack:free_sftp_dirents========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
# .MEM_16 = VDEF <.MEM_14(D)>
new_ptr_12 = malloc (new_size_6);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
In function ‘xrealloc’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa0e0
    type <pointer_type 0x7f0b4a6da930
        type <array_type 0x7f0b4a6da888 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9780 constant 184>
            unit-size <integer_cst 0x7f0b4a6c9768 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6da7e0>
            pointer_to_this <pointer_type 0x7f0b4a6da930>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6f3750 type <array_type 0x7f0b4a6da888>
        readonly constant static "xrealloc: zero size%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa160
    type <pointer_type 0x7f0b4a6db000
        type <array_type 0x7f0b4a6daf18 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4ac7e0a8 constant 312>
            unit-size <integer_cst 0x7f0b4a6c97b0 constant 39>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dae70>
            pointer_to_this <pointer_type 0x7f0b4a6db000>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4abbc0c0 type <array_type 0x7f0b4a6daf18>
        readonly constant static "xrealloc: nmemb * size > SIZE_T_MAX%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
new_size_6 = nmemb_4(D) * size_5(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
In function ‘xrealloc’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa220
    type <pointer_type 0x7f0b4a6db348
        type <array_type 0x7f0b4a6db2a0 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c97c8 constant 368>
            unit-size <integer_cst 0x7f0b4a6c97f8 constant 46>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6db1f8>
            pointer_to_this <pointer_type 0x7f0b4a6db348>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6fc318 type <array_type 0x7f0b4a6db2a0>
        readonly constant static "xrealloc: out of memory (new_size %lu bytes\012)\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_lsreaddir========= [0m
[40;42m =======start_check_funciton:do_lsreaddir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0120
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _1 = calloc (1, 8);
    version:1
    ptr-info 0x7f0b4a6e5768>
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_39>
return _19;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
*dir_55(D) = _1;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:22: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_39>
return _19;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
*dir_55(D) = _1;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:22: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_39>
return _19;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_1 = calloc (1, 8);
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:24: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0120
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _1 = calloc (1, 8);
    version:1
    ptr-info 0x7f0b4a6e5768>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0558
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _16 = calloc (1, 56);
    version:16
    ptr-info 0x7f0b4a6e5810>
# .MEM_101 = VDEF <.MEM_100>
_16 = calloc (1, 56);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_15 = _16;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:46: warning: use location
  210 |                                 (*dir)[ents] = xcalloc(1, sizeof(***dir));
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_15 = _16;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = calloc (1, 56);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:48: warning: use location
  210 |                                 (*dir)[ents] = xcalloc(1, sizeof(***dir));
      |                                                ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0558
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _16 = calloc (1, 56);
    version:16
    ptr-info 0x7f0b4a6e5810>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0708
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _22 = strdup (path_63(D));
    version:22
    ptr-info 0x7f0b4a6e5870>
# .MEM_103 = VDEF <.MEM_102>
_22 = strdup (path_63(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = strchr (path_63(D), 47);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
if (_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
Cond in fucntion do_lsreaddir basic block 8
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 9
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = strdup (path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->filename = _22;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:56: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:33: warning: use location
  203 |                                 printf("Server sent suspect path \"%s\" "
      |                                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0708
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _22 = strdup (path_63(D));
    version:22
    ptr-info 0x7f0b4a6e5870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f08b8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _28 = strdup ("longname");
    version:28
    ptr-info 0x7f0b4a6e58d0>
# .MEM_105 = VDEF <.MEM_104>
_28 = strdup ("longname");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts ("longname");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:195:33: warning: use location
  195 |                                 printf("%s\n", longname);
      |                                 ^
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = strdup ("longname");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:58: warning: use location
  212 |                                 (*dir)[ents]->longname = xstrdup(longname);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27->longname = _28;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:56: warning: use location
  212 |                                 (*dir)[ents]->longname = xstrdup(longname);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27->longname = _28;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:56: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f08b8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _28 = strdup ("longname");
    version:28
    ptr-info 0x7f0b4a6e58d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0c60
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _41 = calloc (1, 8);
    version:41
    ptr-info 0x7f0b4a6e5948>
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
*dir_55(D) = _41;
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
*dir_55(D) = _41;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:22: warning: use location
  223 |                 *dir = xcalloc(1, sizeof(**dir));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
*dir_55(D) = _41;
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
*dir_55(D) = _41;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:22: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
_41 = calloc (1, 8);
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:24: warning: use location
  223 |                 *dir = xcalloc(1, sizeof(**dir));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0c60
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _41 = calloc (1, 8);
    version:41
    ptr-info 0x7f0b4a6e5948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0b4a6e5468 type <integer_type 0x7f0b4a6d29d8 size_t> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f01b0
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 % 2;
bb index := 4
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = _3 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:20: warning: use location
  182 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 1)
bb index := 4
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
Cond in fucntion do_lsreaddir basic block 4
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 20
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();
bb index := 4
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:20: warning: use location
  182 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f01b0
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0240
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 5;
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 5;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:32: warning: use location
  185 |                 count = rand() % 5;
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
count_62 = (u_int) _6;
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
count_62 = (u_int) _6;
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:23: warning: use location
  185 |                 count = rand() % 5;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (count_62 == 0)
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (count_62 == 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
if (count_62 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
Cond in fucntion do_lsreaddir basic block 5
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 16
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:25: warning: use location
  185 |                 count = rand() % 5;
      |                         ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0240
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _5 = rand ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5de0
    type <pointer_type 0x7f0b4a6dbf18
        type <array_type 0x7f0b4a6dbe70 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c98e8 constant 72>
            unit-size <integer_cst 0x7f0b4a6c98d0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dbdc8>
            pointer_to_this <pointer_type 0x7f0b4a6dbf18>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4ada5dc0 type <array_type 0x7f0b4a6dbe70>
        readonly constant static "longname\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0ee8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de280 path>
    def_stmt GIMPLE_NOP
    version:63
    ptr-info 0x7f0b4a6e5990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = strchr (path_63(D), 47);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
if (_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
Cond in fucntion do_lsreaddir basic block 8
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 9
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = strdup (path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->filename = _22;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:56: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:33: warning: use location
  203 |                                 printf("Server sent suspect path \"%s\" "
      |                                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0ee8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de280 path>
    def_stmt GIMPLE_NOP
    version:63
    ptr-info 0x7f0b4a6e5990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5e40
    type <pointer_type 0x7f0b4a6dc1f8
        type <array_type 0x7f0b4a6dc150 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9870 constant 424>
            unit-size <integer_cst 0x7f0b4a6c9918 constant 53>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dc0a8>
            pointer_to_this <pointer_type 0x7f0b4a6dc1f8>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6ed8c0 type <array_type 0x7f0b4a6dc150>
        readonly constant static "Server sent suspect path "%s" during readdir of "%s"\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f03a8
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _10 = *dir_55(D);
    version:10
    ptr-info 0x7f0b4a6e57b0>
# VUSE <.MEM_85>
_10 = *dir_55(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = xrealloc (_10, _9, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:40: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                        ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :0========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*dir_55(D) = _11;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:38: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f03a8
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _10 = *dir_55(D);
    version:10
    ptr-info 0x7f0b4a6e57b0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_99 = VDEF <.MEM_85>
_11 = xrealloc (_10, _9, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:40: warning: Use after free error!: free location 
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                        ^
# .MEM_100 = VDEF <.MEM_99>
*dir_55(D) = _11;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:38: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 10
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:208:28: warning: use location
  208 |                         if (dir) {
      |                            ^
	relate logic:= 1
succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:205:33: warning: use location
  205 |                                 goto next;
      |                                 ^
	relate logic:= 1
succs:= 8
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
	relate logic:= 0
succs:= 6
if (print_flag_64(D) != 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:194:28: warning: use location
  194 |                         if (print_flag)
      |                            ^
	relate logic:= 0
succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5ee0
    type <pointer_type 0x7f0b4a6dbf18
        type <array_type 0x7f0b4a6dbe70 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c98e8 constant 72>
            unit-size <integer_cst 0x7f0b4a6c98d0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dbdc8>
            pointer_to_this <pointer_type 0x7f0b4a6dbf18>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4ada5dc0 type <array_type 0x7f0b4a6dbe70>
        readonly constant static "longname\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0a20
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _33 = rand ();
    version:33>
# .MEM_109 = VDEF <.MEM_86>
_33 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = _33 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location
  216 |                 interrupted = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = _33 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = rand ();
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0a20
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _33 = rand ();
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0c18
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _40 = *dir_55(D);
    version:40
    ptr-info 0x7f0b4a6e5930>
# VUSE <.MEM_90>
_40 = *dir_55(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
free_sftp_dirents (_40);
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:222:17: warning: use location
  222 |                 free_sftp_dirents(*dir);
      |                 ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
free_sftp_dirents (_40);
In function ‘main’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:222:17: warning: use location
  222 |                 free_sftp_dirents(*dir);
      |                 ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0c18
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _40 = *dir_55(D);
    version:40
    ptr-info 0x7f0b4a6e5930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:do_lsreaddir========= [0m
[40;42m =======pre_check_funciton:do_readdir========= [0m
[40;42m =======start_check_funciton:do_readdir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1f30
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de180 path>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f0b4a6e5738>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = do_lsreaddir (path_2(D), 0, dir_3(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:233:16: warning: use location
  233 |         return(do_lsreaddir(path, 0, dir));
      |                ^
this stmt is child function---do_lsreaddir-----

 ================== trace ================== 
trace fucntion name:do_lsreaddir 
[40;44m =======trace_function_path do_lsreaddir  function_call count: 8 level :0========  [0m
[40;36m ======= node_fun:do_lsreaddir========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;46m =======add node_fun stack:free_sftp_dirents========= [0m
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :1========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:160:17: warning: use location
  160 |                 free(s[i]->filename);
      |                 ^
# .MEM_32 = VDEF <.MEM_31>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (_10);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:161:17: warning: use location
  161 |                 free(s[i]->longname);
      |                 ^
# .MEM_33 = VDEF <.MEM_32>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (_14);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:162:17: warning: use location
  162 |                 free(s[i]);
      |                 ^
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:5 
_5 = do_lsreaddir (path_2(D), 0, dir_3(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:233:16: warning: use location
  233 |         return(do_lsreaddir(path, 0, dir));
      |                ^
this stmt is child function---do_lsreaddir-----

 ================== trace ================== 
trace fucntion name:do_lsreaddir 
[40;44m =======trace_function_path do_lsreaddir  function_call count: 8 level :0========  [0m
[40;36m ======= node_fun:do_lsreaddir========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;46m =======add node_fun stack:free_sftp_dirents========= [0m
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :1========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:160:17: warning: use location
  160 |                 free(s[i]->filename);
      |                 ^
# .MEM_32 = VDEF <.MEM_31>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (_10);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:161:17: warning: use location
  161 |                 free(s[i]->longname);
      |                 ^
# .MEM_33 = VDEF <.MEM_32>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (_14);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:162:17: warning: use location
  162 |                 free(s[i]);
      |                 ^
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:10 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1f30
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de180 path>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f0b4a6e5738>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:10 [0m
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================
[40;33m =======POP node_fun stack:do_readdir========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0b4aba9fc0 type <pointer_type 0x7f0b4abc5000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1630
    type <integer_type 0x7f0b4abbe690 unsigned int public unsigned SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe690 precision:32 min <integer_cst 0x7f0b4aba9e28 0> max <integer_cst 0x7f0b4aba9de0 4294967295>
        pointer_to_this <pointer_type 0x7f0b4abca690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:243:9: warning: use location
  243 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:243:9: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1630
    type <integer_type 0x7f0b4abbe690 unsigned int public unsigned SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe690 precision:32 min <integer_cst 0x7f0b4aba9e28 0> max <integer_cst 0x7f0b4aba9de0 4294967295>
        pointer_to_this <pointer_type 0x7f0b4abca690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1a68
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <var_decl 0x7f0b4b451d80 src>
    def_stmt src_17 = PHI <src_27(3), src_26(4)>
    version:17
    ptr-info 0x7f0b4a6e56c0>
src_17 = PHI <src_27(3), src_26(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_36>
printf ("%s: Failed to get directory contents", src_17);
bb index := 6
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
printf ("%s: Failed to get directory contents", src_17);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:251:17: warning: use location
  251 |                 printf("%s: Failed to get directory contents", src);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
_3 = do_readdir (src_17, &dir_entries);
bb index := 5
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_3 = do_readdir (src_17, &dir_entries);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:250:13: warning: use location
  250 |         if (do_readdir(src, &dir_entries) == -1) {
      |             ^
this stmt is child function---do_readdir-----

 ================== trace ================== 
trace fucntion name:do_readdir 
[40;44m =======trace_function_path do_readdir  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:do_readdir========= [0m
[40;36m ======= find relate stmt with src ========= [0m
[40;36m ======= relate stmt argument:src ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_lsreaddir========= [0m
do_lsreaddir this fucntion return value is heap-object 
do_readdir this fucntion return value is heap-object do_lsreaddir
[40;46m =======add node_fun stack:do_lsreaddir========= [0m
[40;44m =======trace_function_path do_lsreaddir  function_call count: 8 level :1========  [0m
[40;36m ======= node_fun:do_lsreaddir========= [0m
[40;36m ======= find relate stmt with src ========= [0m
[40;36m ======= relate stmt argument:src ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;46m =======add node_fun stack:free_sftp_dirents========= [0m
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :2========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:160:17: warning: use location
  160 |                 free(s[i]->filename);
      |                 ^
# .MEM_32 = VDEF <.MEM_31>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (_10);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:161:17: warning: use location
  161 |                 free(s[i]->longname);
      |                 ^
# .MEM_33 = VDEF <.MEM_32>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (_14);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:162:17: warning: use location
  162 |                 free(s[i]);
      |                 ^
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with src ========= [0m
[40;36m ======= relate stmt argument:src ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :2========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with src ========= [0m
[40;36m ======= relate stmt argument:src ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == -1)
bb index := 5
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
if (_3 == -1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:250:12: warning: use location
  250 |         if (do_readdir(src, &dir_entries) == -1) {
      |            ^
if (_3 == -1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:250:12: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1a68
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <var_decl 0x7f0b4b451d80 src>
    def_stmt src_17 = PHI <src_27(3), src_26(4)>
    version:17
    ptr-info 0x7f0b4a6e56c0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_36 = VDEF <.MEM_35>
_3 = do_readdir (src_17, &dir_entries);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:250:13: warning: Use after free error!: free location 
  250 |         if (do_readdir(src, &dir_entries) == -1) {
      |             ^
# .MEM_38 = VDEF <.MEM_36>
printf ("%s: Failed to get directory contents", src_17);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:251:17: warning: use location
  251 |                 printf("%s: Failed to get directory contents", src);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_36 = VDEF <.MEM_35>
_3 = do_readdir (src_17, &dir_entries);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:250:13: warning: Use after free error!: free location 
  250 |         if (do_readdir(src, &dir_entries) == -1) {
      |             ^
if (_3 == -1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:250:12: warning: use location
  250 |         if (do_readdir(src, &dir_entries) == -1) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5b80
    type <pointer_type 0x7f0b4a6dc930
        type <array_type 0x7f0b4a6dc888 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9930 constant 296>
            unit-size <integer_cst 0x7f0b4a6c9960 constant 37>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dc7e0>
            pointer_to_this <pointer_type 0x7f0b4a6dc930>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4abbc080 type <array_type 0x7f0b4a6dc888>
        readonly constant static "%s: Failed to get directory contents\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:251:10 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:251:10 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:251:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1c60
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <var_decl 0x7f0b4b451bd0 filename>
    def_stmt filename_30 = _8->filename;
    version:30
    ptr-info 0x7f0b4a6e5720>
# VUSE <.MEM_36>
filename_30 = _8->filename;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = strcmp (filename_30, "..");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:260:25: warning: use location
  260 |                         strcmp(filename, "..") == 0)
      |                         ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:48: warning: use location
  259 |                 if (strcmp(filename, ".") == 0 ||
      |                                                ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:48: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = strcmp (filename_30, ".");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:21: warning: use location
  259 |                 if (strcmp(filename, ".") == 0 ||
      |                     ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = strcmp (filename_30, ".");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:21: warning: use location
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1c60
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <var_decl 0x7f0b4b451bd0 filename>
    def_stmt filename_30 = _8->filename;
    version:30
    ptr-info 0x7f0b4a6e5720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1c60
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <var_decl 0x7f0b4b451bd0 filename>
    def_stmt filename_30 = _8->filename;
    version:30
    ptr-info 0x7f0b4a6e5720>
# VUSE <.MEM_36>
filename_30 = _8->filename;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = strcmp (filename_30, "..");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:260:25: warning: use location
  260 |                         strcmp(filename, "..") == 0)
      |                         ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_10 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:48: warning: use location
  259 |                 if (strcmp(filename, ".") == 0 ||
      |                                                ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:48: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = strcmp (filename_30, ".");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:21: warning: use location
  259 |                 if (strcmp(filename, ".") == 0 ||
      |                     ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = strcmp (filename_30, ".");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:259:21: warning: use location
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1c60
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <var_decl 0x7f0b4b451bd0 filename>
    def_stmt filename_30 = _8->filename;
    version:30
    ptr-info 0x7f0b4a6e5720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1a20
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _16 = dir_entries;
    version:16
    ptr-info 0x7f0b4a6e56a8>
# VUSE <.MEM_36>
_16 = dir_entries;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_37 = VDEF <.MEM_36>
free_sftp_dirents (_16);
free_sftp_dirents (_16);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:265:9: warning: use location
  265 |         free_sftp_dirents(dir_entries);
      |         ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_37 = VDEF <.MEM_36>
free_sftp_dirents (_16);
free_sftp_dirents (_16);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:265:9: warning: use location
  265 |         free_sftp_dirents(dir_entries);
      |         ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1a20
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _16 = dir_entries;
    version:16
    ptr-info 0x7f0b4a6e56a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:do_readdir========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_readdir  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_lsreaddir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path do_lsreaddir  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_sftp_dirents  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_sftp_dirents========= [0m
[40;42m =======start_check_funciton:free_sftp_dirents========= [0m
[40;33m =======POP node_fun stack:free_sftp_dirents========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
# .MEM_16 = VDEF <.MEM_14(D)>
new_ptr_12 = malloc (new_size_6);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘do_readdir’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘do_readdir’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
In function ‘xrealloc’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa0e0
    type <pointer_type 0x7f0b4a6da930
        type <array_type 0x7f0b4a6da888 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9780 constant 184>
            unit-size <integer_cst 0x7f0b4a6c9768 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6da7e0>
            pointer_to_this <pointer_type 0x7f0b4a6da930>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6f3750 type <array_type 0x7f0b4a6da888>
        readonly constant static "xrealloc: zero size%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa160
    type <pointer_type 0x7f0b4a6db000
        type <array_type 0x7f0b4a6daf18 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4ac7e0a8 constant 312>
            unit-size <integer_cst 0x7f0b4a6c97b0 constant 39>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dae70>
            pointer_to_this <pointer_type 0x7f0b4a6db000>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4abbc0c0 type <array_type 0x7f0b4a6daf18>
        readonly constant static "xrealloc: nmemb * size > SIZE_T_MAX%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
new_size_6 = nmemb_4(D) * size_5(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘do_readdir’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
In function ‘xrealloc’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa220
    type <pointer_type 0x7f0b4a6db348
        type <array_type 0x7f0b4a6db2a0 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c97c8 constant 368>
            unit-size <integer_cst 0x7f0b4a6c97f8 constant 46>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6db1f8>
            pointer_to_this <pointer_type 0x7f0b4a6db348>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6fc318 type <array_type 0x7f0b4a6db2a0>
        readonly constant static "xrealloc: out of memory (new_size %lu bytes\012)\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_lsreaddir========= [0m
[40;42m =======start_check_funciton:do_lsreaddir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0120
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _1 = calloc (1, 8);
    version:1
    ptr-info 0x7f0b4a6e5768>
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_39>
return _19;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
*dir_55(D) = _1;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:22: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_39>
return _19;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
*dir_55(D) = _1;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:22: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_39>
return _19;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_1 = calloc (1, 8);
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:24: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0120
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _1 = calloc (1, 8);
    version:1
    ptr-info 0x7f0b4a6e5768>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0558
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _16 = calloc (1, 56);
    version:16
    ptr-info 0x7f0b4a6e5810>
# .MEM_101 = VDEF <.MEM_100>
_16 = calloc (1, 56);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_15 = _16;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:46: warning: use location
  210 |                                 (*dir)[ents] = xcalloc(1, sizeof(***dir));
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_15 = _16;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = calloc (1, 56);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:48: warning: use location
  210 |                                 (*dir)[ents] = xcalloc(1, sizeof(***dir));
      |                                                ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0558
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _16 = calloc (1, 56);
    version:16
    ptr-info 0x7f0b4a6e5810>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0708
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _22 = strdup (path_63(D));
    version:22
    ptr-info 0x7f0b4a6e5870>
# .MEM_103 = VDEF <.MEM_102>
_22 = strdup (path_63(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = strchr (path_63(D), 47);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
if (_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
Cond in fucntion do_lsreaddir basic block 8
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 9
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = strdup (path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->filename = _22;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:56: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:33: warning: use location
  203 |                                 printf("Server sent suspect path \"%s\" "
      |                                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0708
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _22 = strdup (path_63(D));
    version:22
    ptr-info 0x7f0b4a6e5870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f08b8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _28 = strdup ("longname");
    version:28
    ptr-info 0x7f0b4a6e58d0>
# .MEM_105 = VDEF <.MEM_104>
_28 = strdup ("longname");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts ("longname");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:195:33: warning: use location
  195 |                                 printf("%s\n", longname);
      |                                 ^
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = strdup ("longname");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:58: warning: use location
  212 |                                 (*dir)[ents]->longname = xstrdup(longname);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27->longname = _28;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:56: warning: use location
  212 |                                 (*dir)[ents]->longname = xstrdup(longname);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27->longname = _28;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:56: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f08b8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _28 = strdup ("longname");
    version:28
    ptr-info 0x7f0b4a6e58d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0c60
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _41 = calloc (1, 8);
    version:41
    ptr-info 0x7f0b4a6e5948>
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
*dir_55(D) = _41;
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
*dir_55(D) = _41;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:22: warning: use location
  223 |                 *dir = xcalloc(1, sizeof(**dir));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
*dir_55(D) = _41;
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
*dir_55(D) = _41;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:22: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
_41 = calloc (1, 8);
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:24: warning: use location
  223 |                 *dir = xcalloc(1, sizeof(**dir));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0c60
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _41 = calloc (1, 8);
    version:41
    ptr-info 0x7f0b4a6e5948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0b4a6e5468 type <integer_type 0x7f0b4a6d29d8 size_t> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f01b0
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 % 2;
bb index := 4
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = _3 % 2;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:20: warning: use location
  182 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 1)
bb index := 4
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 1)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
Cond in fucntion do_lsreaddir basic block 4
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 20
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();
bb index := 4
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = rand ();
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:20: warning: use location
  182 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f01b0
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0240
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 5;
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 5;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:32: warning: use location
  185 |                 count = rand() % 5;
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
count_62 = (u_int) _6;
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
count_62 = (u_int) _6;
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:23: warning: use location
  185 |                 count = rand() % 5;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (count_62 == 0)
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (count_62 == 0)
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
if (count_62 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
Cond in fucntion do_lsreaddir basic block 5
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 16
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();
bb index := 5
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:25: warning: use location
  185 |                 count = rand() % 5;
      |                         ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0240
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _5 = rand ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5de0
    type <pointer_type 0x7f0b4a6dbf18
        type <array_type 0x7f0b4a6dbe70 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c98e8 constant 72>
            unit-size <integer_cst 0x7f0b4a6c98d0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dbdc8>
            pointer_to_this <pointer_type 0x7f0b4a6dbf18>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4ada5dc0 type <array_type 0x7f0b4a6dbe70>
        readonly constant static "longname\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0ee8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de280 path>
    def_stmt GIMPLE_NOP
    version:63
    ptr-info 0x7f0b4a6e5990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = strchr (path_63(D), 47);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
if (_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
Cond in fucntion do_lsreaddir basic block 8
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 9
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = strdup (path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->filename = _22;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:56: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:33: warning: use location
  203 |                                 printf("Server sent suspect path \"%s\" "
      |                                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0ee8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de280 path>
    def_stmt GIMPLE_NOP
    version:63
    ptr-info 0x7f0b4a6e5990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5e40
    type <pointer_type 0x7f0b4a6dc1f8
        type <array_type 0x7f0b4a6dc150 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9870 constant 424>
            unit-size <integer_cst 0x7f0b4a6c9918 constant 53>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dc0a8>
            pointer_to_this <pointer_type 0x7f0b4a6dc1f8>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6ed8c0 type <array_type 0x7f0b4a6dc150>
        readonly constant static "Server sent suspect path "%s" during readdir of "%s"\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f03a8
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _10 = *dir_55(D);
    version:10
    ptr-info 0x7f0b4a6e57b0>
# VUSE <.MEM_85>
_10 = *dir_55(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = xrealloc (_10, _9, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:40: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                        ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :0========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*dir_55(D) = _11;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:38: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f03a8
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _10 = *dir_55(D);
    version:10
    ptr-info 0x7f0b4a6e57b0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_99 = VDEF <.MEM_85>
_11 = xrealloc (_10, _9, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:40: warning: Use after free error!: free location 
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                        ^
# .MEM_100 = VDEF <.MEM_99>
*dir_55(D) = _11;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:38: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 10
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:208:28: warning: use location
  208 |                         if (dir) {
      |                            ^
	relate logic:= 1
succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:205:33: warning: use location
  205 |                                 goto next;
      |                                 ^
	relate logic:= 1
succs:= 8
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
	relate logic:= 0
succs:= 6
if (print_flag_64(D) != 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:194:28: warning: use location
  194 |                         if (print_flag)
      |                            ^
	relate logic:= 0
succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5ee0
    type <pointer_type 0x7f0b4a6dbf18
        type <array_type 0x7f0b4a6dbe70 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c98e8 constant 72>
            unit-size <integer_cst 0x7f0b4a6c98d0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dbdc8>
            pointer_to_this <pointer_type 0x7f0b4a6dbf18>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4ada5dc0 type <array_type 0x7f0b4a6dbe70>
        readonly constant static "longname\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0a20
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _33 = rand ();
    version:33>
# .MEM_109 = VDEF <.MEM_86>
_33 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = _33 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location
  216 |                 interrupted = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = _33 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = rand ();
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0a20
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _33 = rand ();
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0c18
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _40 = *dir_55(D);
    version:40
    ptr-info 0x7f0b4a6e5930>
# VUSE <.MEM_90>
_40 = *dir_55(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
free_sftp_dirents (_40);
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:222:17: warning: use location
  222 |                 free_sftp_dirents(*dir);
      |                 ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
bb index := 19
# VUSE <.MEM_91>
return _47;
In function ‘do_lsreaddir’:
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
free_sftp_dirents (_40);
In function ‘do_readdir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:222:17: warning: use location
  222 |                 free_sftp_dirents(*dir);
      |                 ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0c18
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _40 = *dir_55(D);
    version:40
    ptr-info 0x7f0b4a6e5930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:do_lsreaddir========= [0m
[40;42m =======pre_check_funciton:do_readdir========= [0m
[40;42m =======start_check_funciton:do_readdir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4abb1f30
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de180 path>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f0b4a6e5738>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = do_lsreaddir (path_2(D), 0, dir_3(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:233:16: warning: use location
  233 |         return(do_lsreaddir(path, 0, dir));
      |                ^
this stmt is child function---do_lsreaddir-----

 ================== trace ================== 
trace fucntion name:do_lsreaddir 
[40;44m =======trace_function_path do_lsreaddir  function_call count: 8 level :0========  [0m
[40;36m ======= node_fun:do_lsreaddir========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;46m =======add node_fun stack:free_sftp_dirents========= [0m
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :1========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:160:17: warning: use location
  160 |                 free(s[i]->filename);
      |                 ^
# .MEM_32 = VDEF <.MEM_31>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (_10);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:161:17: warning: use location
  161 |                 free(s[i]->longname);
      |                 ^
# .MEM_33 = VDEF <.MEM_32>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (_14);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:162:17: warning: use location
  162 |                 free(s[i]);
      |                 ^
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:5 
_5 = do_lsreaddir (path_2(D), 0, dir_3(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:233:16: warning: use location
  233 |         return(do_lsreaddir(path, 0, dir));
      |                ^
this stmt is child function---do_lsreaddir-----

 ================== trace ================== 
trace fucntion name:do_lsreaddir 
[40;44m =======trace_function_path do_lsreaddir  function_call count: 8 level :0========  [0m
[40;36m ======= node_fun:do_lsreaddir========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;46m =======add node_fun stack:free_sftp_dirents========= [0m
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :1========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:160:17: warning: use location
  160 |                 free(s[i]->filename);
      |                 ^
# .MEM_32 = VDEF <.MEM_31>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (_10);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:161:17: warning: use location
  161 |                 free(s[i]->longname);
      |                 ^
# .MEM_33 = VDEF <.MEM_32>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (_14);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:162:17: warning: use location
  162 |                 free(s[i]);
      |                 ^
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:10 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4abb1f30
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de180 path>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f0b4a6e5738>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:10 [0m
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:10 [0m

======================================================================
[40;33m =======POP node_fun stack:do_readdir========= [0m
[40;44m =======node_fun:do_lsreaddir========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_lsreaddir  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:free_sftp_dirents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_sftp_dirents  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_sftp_dirents========= [0m
[40;42m =======start_check_funciton:free_sftp_dirents========= [0m
[40;33m =======POP node_fun stack:free_sftp_dirents========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
# .MEM_16 = VDEF <.MEM_14(D)>
new_ptr_12 = malloc (new_size_6);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘do_lsreaddir’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘do_lsreaddir’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
In function ‘xrealloc’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa0e0
    type <pointer_type 0x7f0b4a6da930
        type <array_type 0x7f0b4a6da888 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9780 constant 184>
            unit-size <integer_cst 0x7f0b4a6c9768 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6da7e0>
            pointer_to_this <pointer_type 0x7f0b4a6da930>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6f3750 type <array_type 0x7f0b4a6da888>
        readonly constant static "xrealloc: zero size%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa160
    type <pointer_type 0x7f0b4a6db000
        type <array_type 0x7f0b4a6daf18 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4ac7e0a8 constant 312>
            unit-size <integer_cst 0x7f0b4a6c97b0 constant 39>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dae70>
            pointer_to_this <pointer_type 0x7f0b4a6db000>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4abbc0c0 type <array_type 0x7f0b4a6daf18>
        readonly constant static "xrealloc: nmemb * size > SIZE_T_MAX%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
new_size_6 = nmemb_4(D) * size_5(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
In function ‘do_lsreaddir’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
In function ‘xrealloc’:
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
In function ‘do_lsreaddir’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa220
    type <pointer_type 0x7f0b4a6db348
        type <array_type 0x7f0b4a6db2a0 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c97c8 constant 368>
            unit-size <integer_cst 0x7f0b4a6c97f8 constant 46>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6db1f8>
            pointer_to_this <pointer_type 0x7f0b4a6db348>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6fc318 type <array_type 0x7f0b4a6db2a0>
        readonly constant static "xrealloc: out of memory (new_size %lu bytes\012)\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_lsreaddir========= [0m
[40;42m =======start_check_funciton:do_lsreaddir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0120
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _1 = calloc (1, 8);
    version:1
    ptr-info 0x7f0b4a6e5768>
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
*dir_55(D) = _1;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:22: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
*dir_55(D) = _1;
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
*dir_55(D) = _1;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:22: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92(D)>
_1 = calloc (1, 8);
bb index := 3
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
_1 = calloc (1, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:177:24: warning: use location
  177 |                 *dir = xcalloc(1, sizeof(**dir));       /* allocation site */
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0120
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _1 = calloc (1, 8);
    version:1
    ptr-info 0x7f0b4a6e5768>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0558
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _16 = calloc (1, 56);
    version:16
    ptr-info 0x7f0b4a6e5810>
# .MEM_101 = VDEF <.MEM_100>
_16 = calloc (1, 56);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_15 = _16;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:46: warning: use location
  210 |                                 (*dir)[ents] = xcalloc(1, sizeof(***dir));
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_15 = _16;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:46: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = calloc (1, 56);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:210:48: warning: use location
  210 |                                 (*dir)[ents] = xcalloc(1, sizeof(***dir));
      |                                                ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0558
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _16 = calloc (1, 56);
    version:16
    ptr-info 0x7f0b4a6e5810>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0708
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _22 = strdup (path_63(D));
    version:22
    ptr-info 0x7f0b4a6e5870>
# .MEM_103 = VDEF <.MEM_102>
_22 = strdup (path_63(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = strchr (path_63(D), 47);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
if (_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
Cond in fucntion do_lsreaddir basic block 8
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 9
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = strdup (path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->filename = _22;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:56: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:33: warning: use location
  203 |                                 printf("Server sent suspect path \"%s\" "
      |                                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0708
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _22 = strdup (path_63(D));
    version:22
    ptr-info 0x7f0b4a6e5870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f08b8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _28 = strdup ("longname");
    version:28
    ptr-info 0x7f0b4a6e58d0>
# .MEM_105 = VDEF <.MEM_104>
_28 = strdup ("longname");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
__builtin_puts ("longname");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:195:33: warning: use location
  195 |                                 printf("%s\n", longname);
      |                                 ^
this stmt is child function---__builtin_puts-----

 ================== trace ================== 
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = strdup ("longname");
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:58: warning: use location
  212 |                                 (*dir)[ents]->longname = xstrdup(longname);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27->longname = _28;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:56: warning: use location
  212 |                                 (*dir)[ents]->longname = xstrdup(longname);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27->longname = _28;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:212:56: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f08b8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
   
    def_stmt _28 = strdup ("longname");
    version:28
    ptr-info 0x7f0b4a6e58d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0c60
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _41 = calloc (1, 8);
    version:41
    ptr-info 0x7f0b4a6e5948>
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
*dir_55(D) = _41;
bb index := 19
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
*dir_55(D) = _41;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:22: warning: use location
  223 |                 *dir = xcalloc(1, sizeof(**dir));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
*dir_55(D) = _41;
bb index := 19
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
*dir_55(D) = _41;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:22: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
_41 = calloc (1, 8);
bb index := 19
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
_41 = calloc (1, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:223:24: warning: use location
  223 |                 *dir = xcalloc(1, sizeof(**dir));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0c60
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
   
    def_stmt _41 = calloc (1, 8);
    version:41
    ptr-info 0x7f0b4a6e5948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0b4a6e5468 type <integer_type 0x7f0b4a6d29d8 size_t> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f01b0
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _3 = rand ();
    version:3>
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = _3 % 2;
bb index := 4
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = _3 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:20: warning: use location
  182 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 1)
bb index := 4
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
if (_4 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
Cond in fucntion do_lsreaddir basic block 4
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 20
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_89>
_3 = rand ();
bb index := 4
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = rand ();
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:20: warning: use location
  182 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f01b0
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _3 = rand ();
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0240
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 5;
bb index := 5
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 5;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:32: warning: use location
  185 |                 count = rand() % 5;
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
count_62 = (u_int) _6;
bb index := 5
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
count_62 = (u_int) _6;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:23: warning: use location
  185 |                 count = rand() % 5;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (count_62 == 0)
bb index := 5
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
if (count_62 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
Cond in fucntion do_lsreaddir basic block 5
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 16
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
_5 = rand ();
bb index := 5
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:185:25: warning: use location
  185 |                 count = rand() % 5;
      |                         ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0240
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _5 = rand ();
    version:5>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5de0
    type <pointer_type 0x7f0b4a6dbf18
        type <array_type 0x7f0b4a6dbe70 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c98e8 constant 72>
            unit-size <integer_cst 0x7f0b4a6c98d0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dbdc8>
            pointer_to_this <pointer_type 0x7f0b4a6dbf18>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4ada5dc0 type <array_type 0x7f0b4a6dbe70>
        readonly constant static "longname\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0ee8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de280 path>
    def_stmt GIMPLE_NOP
    version:63
    ptr-info 0x7f0b4a6e5990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = strchr (path_63(D), 47);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:29: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                             ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
if (_7 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
Cond in fucntion do_lsreaddir basic block 8
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 9
 ================== possible direct basic block ================= 
from do_lsreaddir basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = strdup (path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:58: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                          ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->filename = _22;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:211:56: warning: use location
  211 |                                 (*dir)[ents]->filename = xstrdup(filename);
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:33: warning: use location
  203 |                                 printf("Server sent suspect path \"%s\" "
      |                                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0ee8
    type <pointer_type 0x7f0b4a6d2f18
        type <integer_type 0x7f0b4a6d2e70 char public QI
            size <integer_cst 0x7f0b4aba9ca8 constant 8>
            unit-size <integer_cst 0x7f0b4aba9cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe3f0 precision:8 min <integer_cst 0x7f0b4a6c9738 -128> max <integer_cst 0x7f0b4a6c9720 127>
            pointer_to_this <pointer_type 0x7f0b4a6d2f18>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>
        pointer_to_this <pointer_type 0x7f0b4a6d25e8>>
    var <parm_decl 0x7f0b4a6de280 path>
    def_stmt GIMPLE_NOP
    version:63
    ptr-info 0x7f0b4a6e5990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5e40
    type <pointer_type 0x7f0b4a6dc1f8
        type <array_type 0x7f0b4a6dc150 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9870 constant 424>
            unit-size <integer_cst 0x7f0b4a6c9918 constant 53>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dc0a8>
            pointer_to_this <pointer_type 0x7f0b4a6dc1f8>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6ed8c0 type <array_type 0x7f0b4a6dc150>
        readonly constant static "Server sent suspect path "%s" during readdir of "%s"\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:203:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f03a8
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _10 = *dir_55(D);
    version:10
    ptr-info 0x7f0b4a6e57b0>
# VUSE <.MEM_85>
_10 = *dir_55(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = xrealloc (_10, _9, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:40: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                        ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 4 level :0========  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*dir_55(D) = _11;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:38: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f03a8
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _10 = *dir_55(D);
    version:10
    ptr-info 0x7f0b4a6e57b0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_99 = VDEF <.MEM_85>
_11 = xrealloc (_10, _9, 8);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:40: warning: Use after free error!: free location 
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                        ^
# .MEM_100 = VDEF <.MEM_99>
*dir_55(D) = _11;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:209:38: warning: use location
  209 |                                 *dir = xrealloc(*dir, ents + 2, sizeof(**dir));
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 10
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:208:28: warning: use location
  208 |                         if (dir) {
      |                            ^
	relate logic:= 1
succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:205:33: warning: use location
  205 |                                 goto next;
      |                                 ^
	relate logic:= 1
succs:= 8
if (_7 != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:202:28: warning: use location
  202 |                         if (strchr(filename, '/') != NULL) {
      |                            ^
	relate logic:= 0
succs:= 6
if (print_flag_64(D) != 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:194:28: warning: use location
  194 |                         if (print_flag)
      |                            ^
	relate logic:= 0
succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4ada5ee0
    type <pointer_type 0x7f0b4a6dbf18
        type <array_type 0x7f0b4a6dbe70 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c98e8 constant 72>
            unit-size <integer_cst 0x7f0b4a6c98d0 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dbdc8>
            pointer_to_this <pointer_type 0x7f0b4a6dbf18>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4ada5dc0 type <array_type 0x7f0b4a6dbe70>
        readonly constant static "longname\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:192:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0a20
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _33 = rand ();
    version:33>
# .MEM_109 = VDEF <.MEM_86>
_33 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = _33 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location
  216 |                 interrupted = __RANDBOOL;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = _33 % 2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = rand ();
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:216:31: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0a20
    type <integer_type 0x7f0b4abbe5e8 int public SI
        size <integer_cst 0x7f0b4aba9df8 constant 32>
        unit-size <integer_cst 0x7f0b4aba9e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe5e8 precision:32 min <integer_cst 0x7f0b4aba9db0 -2147483648> max <integer_cst 0x7f0b4aba9dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0b4abc59d8>>
   
    def_stmt _33 = rand ();
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6f0c18
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _40 = *dir_55(D);
    version:40
    ptr-info 0x7f0b4a6e5930>
# VUSE <.MEM_90>
_40 = *dir_55(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
bb index := 19
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
free_sftp_dirents (_40);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:222:17: warning: use location
  222 |                 free_sftp_dirents(*dir);
      |                 ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
bb index := 19
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================
# .MEM_111 = VDEF <.MEM_90>
free_sftp_dirents (_40);
free_sftp_dirents (_40);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:222:17: warning: use location
  222 |                 free_sftp_dirents(*dir);
      |                 ^
this stmt is child function---free_sftp_dirents-----

 ================== trace ================== 
trace fucntion name:free_sftp_dirents 
[40;44m =======trace_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
# .MEM_31 = VDEF <.MEM_28>
free (_5);
# .MEM_32 = VDEF <.MEM_31>
free (_10);
# .MEM_33 = VDEF <.MEM_32>
free (_14);
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_28>
free (s_22(D));
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:164:9: warning: use location
  164 |         free(s);
      |         ^
[40;36m ======= node_fun:free_sftp_dirents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6f0c18
    type <pointer_type 0x7f0b4a6db888
        type <pointer_type 0x7f0b4a6db7e0 type <record_type 0x7f0b4a6db738 SFTP_DIRENT>
            public unsigned DI
            size <integer_cst 0x7f0b4aba9bb8 constant 64>
            unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4a6db888>>
        public unsigned DI size <integer_cst 0x7f0b4aba9bb8 64> unit-size <integer_cst 0x7f0b4aba9bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4a6db9d8>>
   
    def_stmt _40 = *dir_55(D);
    version:40
    ptr-info 0x7f0b4a6e5930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:do_lsreaddir========= [0m
[40;44m =======node_fun:free_sftp_dirents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path free_sftp_dirents  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_sftp_dirents========= [0m
[40;42m =======start_check_funciton:free_sftp_dirents========= [0m
[40;33m =======POP node_fun stack:free_sftp_dirents========= [0m
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
# .MEM_16 = VDEF <.MEM_14(D)>
new_ptr_12 = malloc (new_size_6);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
In function ‘xrealloc’:
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc2d0
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_12 = malloc (new_size_6);
    version:12
    ptr-info 0x7f0b4a6e5af8>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc288
    type <pointer_type 0x7f0b4abc5000
        type <void_type 0x7f0b4abbef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0b4abc5000>>
        public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0b4abca9d8>>
    var <var_decl 0x7f0b4a6eeea0 new_ptr>
    def_stmt new_ptr_10 = realloc (ptr_7(D), new_size_6);
    version:10
    ptr-info 0x7f0b4a6e5ae0>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa0e0
    type <pointer_type 0x7f0b4a6da930
        type <array_type 0x7f0b4a6da888 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c9780 constant 184>
            unit-size <integer_cst 0x7f0b4a6c9768 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6da7e0>
            pointer_to_this <pointer_type 0x7f0b4a6da930>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6f3750 type <array_type 0x7f0b4a6da888>
        readonly constant static "xrealloc: zero size%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:142:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa160
    type <pointer_type 0x7f0b4a6db000
        type <array_type 0x7f0b4a6daf18 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4ac7e0a8 constant 312>
            unit-size <integer_cst 0x7f0b4a6c97b0 constant 39>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6dae70>
            pointer_to_this <pointer_type 0x7f0b4a6db000>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4abbc0c0 type <array_type 0x7f0b4a6daf18>
        readonly constant static "xrealloc: nmemb * size > SIZE_T_MAX%s\012\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:144:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
new_size_6 = nmemb_4(D) * size_5(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
bb index := 10
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
this stmt is child function---realloc-----

 ================== find ================== 
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_ptr_2 == 0B)
bb index := 9
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^
if (new_ptr_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
Cond in fucntion xrealloc basic block 9
 ================== possible direct basic block ================= 
from xrealloc basic block 10
 ================== possible direct basic block ================= 
from xrealloc basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
new_ptr_12 = malloc (new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:146:27: warning: use location
  146 |                 new_ptr = malloc(new_size);
      |                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_39>
return _19;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
beacuse in succ := 20 have return or exit
# VUSE <.MEM_91>
return _47;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
  165 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_30>
return;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:165:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_size_6 == 0)
bb index := 2
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
  152 |         return new_ptr;
      |                ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_13>
return new_ptr_2;
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:152:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (new_size_6 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
  141 |         if (new_size == 0)
      |            ^
if (new_size_6 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:141:12: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0b4a6fc1f8
    type <integer_type 0x7f0b4a6d29d8 size_t public unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0b4abbe738 precision:64 min <integer_cst 0x7f0b4aba9e88 0> max <integer_cst 0x7f0b4abaa500 18446744073709551615> context <translation_unit_decl 0x7f0b4abb4168 ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c>>
    var <var_decl 0x7f0b4a6eee10 new_size>
    def_stmt new_size_6 = nmemb_4(D) * size_5(D);
    version:6>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: use location
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
# .MEM_17 = VDEF <.MEM_13>
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:17: warning: use location
  150 |                 fatal("xrealloc: out of memory (new_size %lu bytes\n)",
      |                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14(D)>
new_ptr_10 = realloc (ptr_7(D), new_size_6);
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:148:27: warning: Use after free error!: free location 
  148 |                 new_ptr = realloc(ptr, new_size);
      |                           ^
if (new_ptr_2 == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:149:12: warning: use location
  149 |         if (new_ptr == NULL)
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m
=======================Path Constaint===========================

=succs:= 6
if (ptr_7(D) == 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:145:12: warning: use location
  145 |         if (ptr == NULL)
      |            ^
	relate logic:= 0
=succs:= 13
if (i_43 < count_62)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:188:31: warning: use location
  188 |                 for (i = 0; i < count; i++) {
      |                               ^
	relate logic:= 0
=succs:= 5
if (count_62 == 0)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:186:19: warning: use location
  186 |                 if(count == 0)
      |                   ^
	relate logic:= 0
=succs:= 4
if (_4 == 1)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:182:19: warning: use location
  182 |                 if(__RANDBOOL)
      |                   ^
	relate logic:= 0
=succs:= 2
if (dir_55(D) != 0B)
./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:175:12: warning: use location
  175 |         if (dir) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0b4a6fa220
    type <pointer_type 0x7f0b4a6db348
        type <array_type 0x7f0b4a6db2a0 type <integer_type 0x7f0b4a6d2e70 char>
            BLK
            size <integer_cst 0x7f0b4a6c97c8 constant 368>
            unit-size <integer_cst 0x7f0b4a6c97f8 constant 46>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f0b4a6db1f8>
            pointer_to_this <pointer_type 0x7f0b4a6db348>>
        unsigned DI
        size <integer_cst 0x7f0b4aba9bb8 constant 64>
        unit-size <integer_cst 0x7f0b4aba9bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f0b4a6fc318 type <array_type 0x7f0b4a6db2a0>
        readonly constant static "xrealloc: out of memory (new_size %lu bytes\012)\000">
    ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 start: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3 finish: ./benchmarks/openssh-portable/leak_9/openssh_leak_9.c:150:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118431365]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
if (argc_24(D) == 1)
  goto <bb 3>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 40266664]:
src_27 = *argv_25(D);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 78164700]:
src_26 = MEM[(char * *)argv_25(D) + 8B];

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118431365]:
# src_17 = PHI <src_27(3), src_26(4)>
_3 = do_readdir (src_17, &dir_entries);
if (_3 == -1)
  goto <bb 6>; [0.27%]
else
  goto <bb 11>; [99.73%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 319765]:
printf ("%s: Failed to get directory contents", src_17);
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630225]:
_4 = dir_entries;
_5 = (long unsigned int) i_18;
_6 = _5 * 8;
_7 = _4 + _6;
_8 = *_7;
filename_30 = _8->filename;
_9 = strcmp (filename_30, ".");
if (_9 == 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 640272253]:
_10 = strcmp (filename_30, "..");
if (_10 == 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 526647815]:
// predicted unlikely by continue predictor.

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 955630226]:
i_31 = i_18 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# i_18 = PHI <0(5), i_31(10)>
_11 = dir_entries;
_12 = (long unsigned int) i_18;
_13 = _12 * 8;
_14 = _11 + _13;
_15 = *_14;
if (_15 != 0B)
  goto <bb 7>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118111600]:
_16 = dir_entries;
free_sftp_dirents (_16);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 118431365]:
# _19 = PHI <-1(6), 0(12)>
dir_entries ={v} {CLOBBER};
return _19;

=======Mapping node_fun:do_readdir=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = do_lsreaddir (path_2(D), 0, dir_3(D));
return _5;

=======Mapping node_fun:do_lsreaddir=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 13979218]:
if (dir_55(D) != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 14>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 7474688]:
_1 = calloc (1, 8);
*dir_55(D) = _1;
_2 = *dir_55(D);
*_2 = 0B;
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 127256294]:
_3 = rand ();
_4 = _3 % 2;
if (_4 == 1)
  goto <bb 20>; [3.66%]
else
  goto <bb 5>; [96.34%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 122598713]:
_5 = rand ();
_6 = _5 % 5;
count_62 = (u_int) _6;
if (count_62 == 0)
  goto <bb 16>; [3.66%]
else
  goto <bb 13>; [96.34%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630226]:
if (print_flag_64(D) != 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 315357973]:
__builtin_puts ("longname");

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630228]:
_7 = strchr (path_63(D), 47);
if (_7 != 0B)
  goto <bb 9>; [37.19%]
else
  goto <bb 10>; [62.81%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 355398881]:
printf ("Server sent suspect path \"%s\" during readdir of \"%s\"", path_63(D), path_63(D));
// predicted unlikely by goto predictor.
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 600231347]:
if (dir_55(D) != 0B)
  goto <bb 11>; [53.47%]
else
  goto <bb 12>; [46.53%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 320943700]:
_8 = ents_45 + 2;
_9 = (long unsigned int) _8;
_10 = *dir_55(D);
_11 = xrealloc (_10, _9, 8);
*dir_55(D) = _11;
_12 = *dir_55(D);
_13 = (long unsigned int) ents_45;
_14 = _13 * 8;
_15 = _12 + _14;
_16 = calloc (1, 56);
*_15 = _16;
_17 = *dir_55(D);
_18 = (long unsigned int) ents_45;
_19 = _18 * 8;
_20 = _17 + _19;
_21 = *_20;
_22 = strdup (path_63(D));
_21->filename = _22;
_23 = *dir_55(D);
_24 = (long unsigned int) ents_45;
_25 = _24 * 8;
_26 = _23 + _25;
_27 = *_26;
_28 = strdup ("longname");
_27->longname = _28;
_29 = *dir_55(D);
ents_74 = ents_45 + 1;
_30 = (long unsigned int) ents_74;
_31 = _30 * 8;
_32 = _29 + _31;
*_32 = 0B;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 955630228]:
# ents_44 = PHI <ents_45(9), ents_45(10), ents_74(11)>
next:
_33 = rand ();
_34 = _33 % 2;
_35 = _34 == 1;
_36 = (int) _35;
interrupted ={v} _36;
i_79 = i_43 + 1;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# i_43 = PHI <0(5), i_79(12)>
# ents_45 = PHI <ents_46(5), ents_44(12)>
if (i_43 < count_62)
  goto <bb 6>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 13979218]:
# ents_84 = PHI <0(2), 0(3)>

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 132090818]:
# ents_46 = PHI <ents_45(13), ents_84(14)>
_37 ={v} interrupted;
if (_37 == 0)
  goto <bb 4>; [96.34%]
else
  goto <bb 16>; [3.66%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 9321637]:
_38 ={v} interrupted;
if (_38 != 0)
  goto <bb 17>; [50.00%]
else
  goto <bb 20>; [50.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 4660819]:
if (dir_55(D) != 0B)
  goto <bb 18>; [70.00%]
else
  goto <bb 20>; [30.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 3262573]:
_39 = *dir_55(D);
if (_39 != 0B)
  goto <bb 19>; [53.47%]
else
  goto <bb 20>; [46.53%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 1744498]:
_40 = *dir_55(D);
free_sftp_dirents (_40);
_41 = calloc (1, 8);
*dir_55(D) = _41;
_42 = *dir_55(D);
*_42 = 0B;

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 13979218]:
# _47 = PHI <-1(4), 0(16), 0(17), 0(18), 0(19)>
return _47;

=======Mapping node_fun:free_sftp_dirents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = (long unsigned int) i_19;
_2 = _1 * 8;
_3 = s_22(D) + _2;
_4 = *_3;
_5 = _4->filename;
free (_5);
_6 = (long unsigned int) i_19;
_7 = _6 * 8;
_8 = s_22(D) + _7;
_9 = *_8;
_10 = _9->longname;
free (_10);
_11 = (long unsigned int) i_19;
_12 = _11 * 8;
_13 = s_22(D) + _12;
_14 = *_13;
free (_14);
i_27 = i_19 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_19 = PHI <0(2), i_27(3)>
_15 = (long unsigned int) i_19;
_16 = _15 * 8;
_17 = s_22(D) + _16;
_18 = *_17;
if (_18 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
free (s_22(D));
return;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_size_6 = nmemb_4(D) * size_5(D);
if (new_size_6 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("xrealloc: zero size%s\n", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_1 = 10000 / nmemb_4(D);
if (_1 < size_5(D))
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429324]:
printf ("xrealloc: nmemb * size > SIZE_T_MAX%s\n", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1072883005]:
if (ptr_7(D) == 0B)
  goto <bb 7>; [30.00%]
else
  goto <bb 8>; [70.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 321864898]:
new_ptr_12 = malloc (new_size_6);
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 751018107]:
new_ptr_10 = realloc (ptr_7(D), new_size_6);

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 1072883005]:
# new_ptr_2 = PHI <new_ptr_12(7), new_ptr_10(8)>
if (new_ptr_2 == 0B)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 429152]:
printf ("xrealloc: out of memory (new_size %lu bytes\n)", new_size_6);
exit (1);

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 1072453853]:
return new_ptr_2;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 7 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    find Entry point : 19 [0m
[40;34m    used_stmt array stack totalsize of : 0.001336 mb[0m
[40;34m    collect time: : 0.000332 s [0m
[40;34m    algorithm time: 0.232439 s [0m
[40;34m    gimple stmt count : : 145 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.9%|     -0.6%|
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -1.4%|     -2.4%|
stdarg                           |      |      |      |      |     -1.4%|     -2.4%|
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine                        |      |      |      |      |     +0.2%|     +0.0%|
mergephi                         |      |      |      |      |     +0.2%|     +0.0%|
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +2.9%|     -0.1%|
cplxlower                        |      |      |      |      |     +2.8%|     -0.1%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -3.9%|     -2.8%|
copyprop                         |      |    +1|      |      |     -4.1%|     -2.8%|
reassoc              ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -2.7%|     -4.2%|
forwprop                         |      |      |      |      |     -2.8%|     -4.4%|
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -20.5%|    -30.3%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -1.7%|     -2.3%|
lim                              |      |      |      |      |     -1.7%|     -2.3%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +26.7%|    +45.6%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +1.9%|     -0.0%|
strlen                           |      |      |      |      |     +1.9%|     -0.0%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +74.5%|    +46.1%|
into_cfglayout                   |      |      |      |      |     -1.8%|     -0.3%|
jump                             |      |      |      |      |     -1.9%|     -0.3%|
subreg1              ------------|      |      |      |      |          |          |
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.3%|     -1.0%|
ce1                              |      |      |      |      |     -1.3%|     -1.0%|
reginfo                          |      |      |      |      |          |     +0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +1.3%|     +3.4%|
ce2                              |      |      |      |      |     +1.3%|     +3.3%|
outof_cfglayout                  |      |      |      |      |     +1.7%|     +0.3%|
split1                           |      |      |      |      |     +1.7%|     +0.3%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -5.2%|     -7.4%|
postreload                       |      |      |      |      |     -5.6%|     -8.1%|
split2                           |      |      |      |      |     +0.1%|     +0.8%|
cmpelim                          |      |      |      |      |     +0.3%|     +1.0%|
pro_and_epilogue                 |      |      |      |      |     +7.1%|     +3.7%|
dse2                             |      |      |      |      |     +6.7%|     +3.5%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     +0.1%|     +0.2%|
split4                           |      |      |      |      |     +0.1%|     +0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
