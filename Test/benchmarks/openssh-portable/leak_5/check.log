In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:104:0: warning: "ENOMSG" redefined
 #define ENOMSG 35 /* No message of desired type */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:23:0: note: this is the location of the previous definition
 #define ENOMSG  42 /* No message of desired type */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:105:0: warning: "EIDRM" redefined
 #define EIDRM 36 /* Identifier removed */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:24:0: note: this is the location of the previous definition
 #define EIDRM  43 /* Identifier removed */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:106:0: warning: "ECHRNG" redefined
 #define ECHRNG 37 /* Channel number out of range */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:25:0: note: this is the location of the previous definition
 #define ECHRNG  44 /* Channel number out of range */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:107:0: warning: "EL2NSYNC" redefined
 #define EL2NSYNC 38 /* Level 2 not synchronized */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:26:0: note: this is the location of the previous definition
 #define EL2NSYNC 45 /* Level 2 not synchronized */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:108:0: warning: "EL3HLT" redefined
 #define EL3HLT 39 /* Level 3 halted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:27:0: note: this is the location of the previous definition
 #define EL3HLT  46 /* Level 3 halted */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:109:0: warning: "EL3RST" redefined
 #define EL3RST 40 /* Level 3 reset */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:28:0: note: this is the location of the previous definition
 #define EL3RST  47 /* Level 3 reset */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:110:0: warning: "ELNRNG" redefined
 #define ELNRNG 41 /* Link number out of range */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:29:0: note: this is the location of the previous definition
 #define ELNRNG  48 /* Link number out of range */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:111:0: warning: "EUNATCH" redefined
 #define EUNATCH 42 /* Protocol driver not attached */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:30:0: note: this is the location of the previous definition
 #define EUNATCH  49 /* Protocol driver not attached */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:112:0: warning: "ENOCSI" redefined
 #define ENOCSI 43 /* No CSI structure available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:31:0: note: this is the location of the previous definition
 #define ENOCSI  50 /* No CSI structure available */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:113:0: warning: "EL2HLT" redefined
 #define EL2HLT 44 /* Level 2 halted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:32:0: note: this is the location of the previous definition
 #define EL2HLT  51 /* Level 2 halted */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:114:0: warning: "EDEADLK" redefined
 #define EDEADLK 45 /* Deadlock condition */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:7:0: note: this is the location of the previous definition
 #define EDEADLK  35 /* Resource deadlock would occur */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:115:0: warning: "ENOLCK" redefined
 #define ENOLCK 46 /* No record locks available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:9:0: note: this is the location of the previous definition
 #define ENOLCK  37 /* No record locks available */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:116:0: warning: "EBADE" redefined
 #define EBADE 50 /* Invalid exchange */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:33:0: note: this is the location of the previous definition
 #define EBADE  52 /* Invalid exchange */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:117:0: warning: "EBADR" redefined
 #define EBADR 51 /* Invalid request descriptor */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:34:0: note: this is the location of the previous definition
 #define EBADR  53 /* Invalid request descriptor */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:118:0: warning: "EXFULL" redefined
 #define EXFULL 52 /* Exchange full */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:35:0: note: this is the location of the previous definition
 #define EXFULL  54 /* Exchange full */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:119:0: warning: "ENOANO" redefined
 #define ENOANO 53 /* No anode */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:36:0: note: this is the location of the previous definition
 #define ENOANO  55 /* No anode */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:120:0: warning: "EBADRQC" redefined
 #define EBADRQC 54 /* Invalid request code */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:37:0: note: this is the location of the previous definition
 #define EBADRQC  56 /* Invalid request code */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:121:0: warning: "EBADSLT" redefined
 #define EBADSLT 55 /* Invalid slot */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:38:0: note: this is the location of the previous definition
 #define EBADSLT  57 /* Invalid slot */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:122:0: warning: "EDEADLOCK" redefined
 #define EDEADLOCK 56 /* File locking deadlock error */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:40:0: note: this is the location of the previous definition
 #define EDEADLOCK EDEADLK
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:123:0: warning: "EBFONT" redefined
 #define EBFONT 57 /* Bad font file fmt */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:42:0: note: this is the location of the previous definition
 #define EBFONT  59 /* Bad font file format */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:136:0: warning: "EMULTIHOP" redefined
 #define EMULTIHOP 74 /* Multihop attempted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:55:0: note: this is the location of the previous definition
 #define EMULTIHOP 72 /* Multihop attempted */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:138:0: warning: "EDOTDOT" redefined
 #define EDOTDOT 76 /* Cross mount point (not really error) */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:56:0: note: this is the location of the previous definition
 #define EDOTDOT  73 /* RFS specific error */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:139:0: warning: "EBADMSG" redefined
 #define EBADMSG 77 /* Trying to read unreadable message */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:57:0: note: this is the location of the previous definition
 #define EBADMSG  74 /* Not a data message */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:141:0: warning: "ENOTUNIQ" redefined
 #define ENOTUNIQ 80 /* Given log. name not unique */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:59:0: note: this is the location of the previous definition
 #define ENOTUNIQ 76 /* Name not unique on network */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:142:0: warning: "EBADFD" redefined
 #define EBADFD 81 /* f.d. invalid for this operation */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:60:0: note: this is the location of the previous definition
 #define EBADFD  77 /* File descriptor in bad state */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:143:0: warning: "EREMCHG" redefined
 #define EREMCHG 82 /* Remote address changed */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:61:0: note: this is the location of the previous definition
 #define EREMCHG  78 /* Remote address changed */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:144:0: warning: "ELIBACC" redefined
 #define ELIBACC 83 /* Can't access a needed shared lib */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:62:0: note: this is the location of the previous definition
 #define ELIBACC  79 /* Can not access a needed shared library */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:145:0: warning: "ELIBBAD" redefined
 #define ELIBBAD 84 /* Accessing a corrupted shared lib */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:63:0: note: this is the location of the previous definition
 #define ELIBBAD  80 /* Accessing a corrupted shared library */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:146:0: warning: "ELIBSCN" redefined
 #define ELIBSCN 85 /* .lib section in a.out corrupted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:64:0: note: this is the location of the previous definition
 #define ELIBSCN  81 /* .lib section in a.out corrupted */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:147:0: warning: "ELIBMAX" redefined
 #define ELIBMAX 86 /* Attempting to link in too many libs */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:65:0: note: this is the location of the previous definition
 #define ELIBMAX  82 /* Attempting to link in too many shared libraries */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:148:0: warning: "ELIBEXEC" redefined
 #define ELIBEXEC 87 /* Attempting to exec a shared library */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:66:0: note: this is the location of the previous definition
 #define ELIBEXEC 83 /* Cannot exec a shared library directly */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:149:0: warning: "ENOSYS" redefined
 #define ENOSYS 88 /* Function not implemented */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:18:0: note: this is the location of the previous definition
 #define ENOSYS  38 /* Invalid system call number */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:151:0: warning: "ENOTEMPTY" redefined
 #define ENOTEMPTY 90 /* Directory not empty */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:20:0: note: this is the location of the previous definition
 #define ENOTEMPTY 39 /* Directory not empty */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:152:0: warning: "ENAMETOOLONG" redefined
 #define ENAMETOOLONG 91 /* File or path name too long */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:8:0: note: this is the location of the previous definition
 #define ENAMETOOLONG 36 /* File name too long */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:153:0: warning: "ELOOP" redefined
 #define ELOOP 92 /* Too many symbolic links */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:21:0: note: this is the location of the previous definition
 #define ELOOP  40 /* Too many symbolic links encountered */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:158:0: warning: "EAFNOSUPPORT" redefined
 #define EAFNOSUPPORT 106 /* Address family not supported by protocol family */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:80:0: note: this is the location of the previous definition
 #define EAFNOSUPPORT 97 /* Address family not supported by protocol */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:159:0: warning: "EPROTOTYPE" redefined
 #define EPROTOTYPE 107 /* Protocol wrong type for socket */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:74:0: note: this is the location of the previous definition
 #define EPROTOTYPE 91 /* Protocol wrong type for socket */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:160:0: warning: "ENOTSOCK" redefined
 #define ENOTSOCK 108 /* Socket operation on non-socket */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:71:0: note: this is the location of the previous definition
 #define ENOTSOCK 88 /* Socket operation on non-socket */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:161:0: warning: "ENOPROTOOPT" redefined
 #define ENOPROTOOPT 109 /* Protocol not available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:75:0: note: this is the location of the previous definition
 #define ENOPROTOOPT 92 /* Protocol not available */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:162:0: warning: "ESHUTDOWN" redefined
 #define ESHUTDOWN 110 /* Can't send after socket shutdown */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:91:0: note: this is the location of the previous definition
 #define ESHUTDOWN 108 /* Cannot send after transport endpoint shutdown */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:164:0: warning: "EADDRINUSE" redefined
 #define EADDRINUSE 112  /* Address already in use */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:81:0: note: this is the location of the previous definition
 #define EADDRINUSE 98 /* Address already in use */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:165:0: warning: "ECONNABORTED" redefined
 #define ECONNABORTED 113 /* Connection aborted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:86:0: note: this is the location of the previous definition
 #define ECONNABORTED 103 /* Software caused connection abort */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:166:0: warning: "ENETUNREACH" redefined
 #define ENETUNREACH 114  /* Network is unreachable */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:84:0: note: this is the location of the previous definition
 #define ENETUNREACH 101 /* Network is unreachable */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:167:0: warning: "ENETDOWN" redefined
 #define ENETDOWN 115  /* Network interface is not configured */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:83:0: note: this is the location of the previous definition
 #define ENETDOWN 100 /* Network is down */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:168:0: warning: "ETIMEDOUT" redefined
 #define ETIMEDOUT 116  /* Connection timed out */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:93:0: note: this is the location of the previous definition
 #define ETIMEDOUT 110 /* Connection timed out */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:169:0: warning: "EHOSTDOWN" redefined
 #define EHOSTDOWN 117  /* Host is down */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:95:0: note: this is the location of the previous definition
 #define EHOSTDOWN 112 /* Host is down */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:170:0: warning: "EHOSTUNREACH" redefined
 #define EHOSTUNREACH 118 /* Host is unreachable */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:96:0: note: this is the location of the previous definition
 #define EHOSTUNREACH 113 /* No route to host */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:171:0: warning: "EINPROGRESS" redefined
 #define EINPROGRESS 119  /* Connection already in progress */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:98:0: note: this is the location of the previous definition
 #define EINPROGRESS 115 /* Operation now in progress */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:172:0: warning: "EALREADY" redefined
 #define EALREADY 120  /* Socket already connected */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:97:0: note: this is the location of the previous definition
 #define EALREADY 114 /* Operation already in progress */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:173:0: warning: "EDESTADDRREQ" redefined
 #define EDESTADDRREQ 121 /* Destination address required */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:72:0: note: this is the location of the previous definition
 #define EDESTADDRREQ 89 /* Destination address required */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:174:0: warning: "EMSGSIZE" redefined
 #define EMSGSIZE 122  /* Message too long */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:73:0: note: this is the location of the previous definition
 #define EMSGSIZE 90 /* Message too long */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:175:0: warning: "EPROTONOSUPPORT" redefined
 #define EPROTONOSUPPORT 123 /* Unknown protocol */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:76:0: note: this is the location of the previous definition
 #define EPROTONOSUPPORT 93 /* Protocol not supported */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:176:0: warning: "ESOCKTNOSUPPORT" redefined
 #define ESOCKTNOSUPPORT 124 /* Socket type not supported */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:77:0: note: this is the location of the previous definition
 #define ESOCKTNOSUPPORT 94 /* Socket type not supported */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:177:0: warning: "EADDRNOTAVAIL" redefined
 #define EADDRNOTAVAIL 125 /* Address not available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:82:0: note: this is the location of the previous definition
 #define EADDRNOTAVAIL 99 /* Cannot assign requested address */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:178:0: warning: "ENETRESET" redefined
 #define ENETRESET 126
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:85:0: note: this is the location of the previous definition
 #define ENETRESET 102 /* Network dropped connection because of reset */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:179:0: warning: "EISCONN" redefined
 #define EISCONN 127  /* Socket is already connected */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:89:0: note: this is the location of the previous definition
 #define EISCONN  106 /* Transport endpoint is already connected */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:180:0: warning: "ENOTCONN" redefined
 #define ENOTCONN 128  /* Socket is not connected */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:90:0: note: this is the location of the previous definition
 #define ENOTCONN 107 /* Transport endpoint is not connected */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:181:0: warning: "ETOOMANYREFS" redefined
 #define ETOOMANYREFS 129
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:92:0: note: this is the location of the previous definition
 #define ETOOMANYREFS 109 /* Too many references: cannot splice */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:183:0: warning: "EUSERS" redefined
 #define EUSERS 131
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:70:0: note: this is the location of the previous definition
 #define EUSERS  87 /* Too many users */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:184:0: warning: "EDQUOT" redefined
 #define EDQUOT 132
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:105:0: note: this is the location of the previous definition
 #define EDQUOT  122 /* Quota exceeded */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:185:0: warning: "ESTALE" redefined
 #define ESTALE 133
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:99:0: note: this is the location of the previous definition
 #define ESTALE  116 /* Stale file handle */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:186:0: warning: "ENOTSUP" redefined
 #define ENOTSUP 134  /* Not supported */
 
In file included from /usr/include/errno.h:28:0,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/x86_64-linux-gnu/bits/errno.h:30:0: note: this is the location of the previous definition
 #  define ENOTSUP  EOPNOTSUPP
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:187:0: warning: "ENOMEDIUM" redefined
 #define ENOMEDIUM 135   /* No medium (in tape drive) */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:107:0: note: this is the location of the previous definition
 #define ENOMEDIUM 123 /* No medium found */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:190:0: warning: "EILSEQ" redefined
 #define EILSEQ 138
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:67:0: note: this is the location of the previous definition
 #define EILSEQ  84 /* Illegal byte sequence */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/../stdio.h:191:0: warning: "EOVERFLOW" redefined
 #define EOVERFLOW 139 /* Value too large for defined data type */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:7:
/usr/include/asm-generic/errno.h:58:0: note: this is the location of the previous definition
 #define EOVERFLOW 75 /* Value too large for defined data type */
 
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:10:0:
./benchmarks/openssh-portable/leak_5/../openssh.h:675:49: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/leak_5/../openssh.h:676:58: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/leak_5/../openssh.h:677:59: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/leak_5/../openssh.h:678:53: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/leak_5/../openssh.h:681:29: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c: In function ‘do_realpath’:
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  return(strdup(path));
         ^~~~~~
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: incompatible implicit declaration of built-in function ‘strdup’
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c: In function ‘parse_dispatch_command’:
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:4: warning: implicit declaration of function ‘error’; did you mean ‘perror’? [-Wimplicit-function-declaration]
    error("Can't change directory: Can't check target");
    ^~~~~
    perror
In file included from ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:9:0:
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c: In function ‘interactive_loop’:
./benchmarks/openssh-portable/leak_5/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:313:9: note: in expansion of macro ‘xstrdup’
   dir = xstrdup(file1);
         ^~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 7
succs:= 6
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 11
succs:= 11
succs:= 12
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 12
succs:= 14
succs:= 10
succs:= 6
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 20
succs:= 19
succs:= 20
--------GIMPLE Cond -------
succs:= 21
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 7
succs:= 7
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_39 = VDEF <.MEM_38>
_35 = strdup (0B);
# .MEM_29 = VDEF <.MEM_37>
error ("Can\'t change directory: Can\'t check target");
# .MEM_31 = VDEF <.MEM_25(D)>
_23 = __printf_chk (1, "%d is not implemented", cmdnum_11(D));
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
# .MEM_79 = VDEF <.MEM_59>
_47 = __printf_chk (1, "Need cwd%s", "");
# .MEM_60 = VDEF <.MEM_59>
dir_28 = strdup (file1_26(D));
# .MEM_66 = VDEF <.MEM_60>
_48 = __printf_chk (1, "Changing to: %s\n", dir_28);
# .MEM_67 = VDEF <.MEM_52>
_49 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "cd \"%s\"", dir_28);
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
 <var_decl 0x7fdbe9a3f870 remote_path
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    addressable unsigned DI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 302 col 8 size <integer_cst 0x7fdbe9ef8be8 64> unit size <integer_cst 0x7fdbe9ef8c00 8>
    align 64 context <function_decl 0x7fdbe9a23d00 interactive_loop> chain <var_decl 0x7fdbe9a3f7e0 dir>>
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
 <var_decl 0x7fdbe9a3f870 remote_path
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    addressable unsigned DI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 302 col 8 size <integer_cst 0x7fdbe9ef8be8 64> unit size <integer_cst 0x7fdbe9ef8c00 8>
    align 64 context <function_decl 0x7fdbe9a23d00 interactive_loop> chain <var_decl 0x7fdbe9a3f7e0 dir>>
# .MEM_73 = VDEF <.MEM_56>
_51 = __fgets_alias (&cmd, 2048, _7);
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
 <var_decl 0x7fdbe9a3f870 remote_path
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    addressable unsigned DI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 302 col 8 size <integer_cst 0x7fdbe9ef8be8 64> unit size <integer_cst 0x7fdbe9ef8c00 8>
    align 64 context <function_decl 0x7fdbe9a23d00 interactive_loop> chain <var_decl 0x7fdbe9a3f7e0 dir>>
# .MEM_29 = VDEF <.MEM_12(D)>
ret_16 = calloc (1, 168);
# .MEM_40 = VDEF <.MEM_36>
_19 = __printf_chk (1, "Invalid packet back from SSH2_FXP_INIT (type %u)\n", _18);
# .MEM_37 = VDEF <.MEM_36>
_21 = __printf_chk (1, "Remote version: %u", _20);
# .MEM_15 = VDEF <.MEM_28>
_10 = __printf_chk (1, "Couldn\'t initialise connection to server\n");
# .MEM_14 = VDEF <.MEM_28>
err_9 = interactive_loop (conn_7, 0B, 0B);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:parse_dispatch_command========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:parse_dispatch_command========= [0m
[40;42m =======start_check_funciton:parse_dispatch_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
# .MEM_39 = VDEF <.MEM_38>
_35 = strdup (0B);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_24>
return _8;
In function ‘parse_dispatch_command’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_40 = _36;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
tmp_15 = _40;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
   if ((tmp = do_realpath(conn, path1)) == NULL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
    free(tmp);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (tmp_15 == 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
   if ((tmp = do_realpath(conn, path1)) == NULL) {
      ^
if (tmp_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
Cond in fucntion parse_dispatch_command basic block 6
 ================== possible direct basic block ================= 
from parse_dispatch_command basic block 11
 ================== possible direct basic block ================= 
from parse_dispatch_command basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_35 = strdup (0B);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: use location
  return(strdup(path));
         ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
    free(tmp);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: Use after free error!: free location 
   free(*pwd);
   ^
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: Use after free error!: free location 
   free(*pwd);
   ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9a25f48 type <pointer_type 0x7fdbe9a227e0> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a169c0
    type <pointer_type 0x7fdbe9a321f8
        type <array_type 0x7fdbe9a32150 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25540 constant 344>
            unit size <integer_cst 0x7fdbe9a25588 constant 43>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a320a8>
            pointer_to_this <pointer_type 0x7fdbe9a321f8>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fdbe9f0a040 type <array_type 0x7fdbe9a32150>
        readonly constant static "Can't change directory: Can't check target\000">
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9ef8f90 type <integer_type 0x7fdbe9f0c5e8 int> constant 1>
[40;33m =======POP node_fun stack:parse_dispatch_command========= [0m
[40;44m =======node_fun:interactive_loop========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path interactive_loop  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:parse_dispatch_command========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path parse_dispatch_command  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:parse_dispatch_command========= [0m
[40;42m =======start_check_funciton:parse_dispatch_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
# .MEM_39 = VDEF <.MEM_38>
_35 = strdup (0B);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_24>
return _8;
In function ‘interactive_loop’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_40 = _36;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
tmp_15 = _40;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
   if ((tmp = do_realpath(conn, path1)) == NULL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
    free(tmp);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (tmp_15 == 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
   if ((tmp = do_realpath(conn, path1)) == NULL) {
      ^
if (tmp_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
Cond in fucntion parse_dispatch_command basic block 6
 ================== possible direct basic block ================= 
from parse_dispatch_command basic block 11
 ================== possible direct basic block ================= 
from parse_dispatch_command basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_35 = strdup (0B);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: use location
  return(strdup(path));
         ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
    free(tmp);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: Use after free error!: free location 
   free(*pwd);
   ^
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: Use after free error!: free location 
   free(*pwd);
   ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9a25f48 type <pointer_type 0x7fdbe9a227e0> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a169c0
    type <pointer_type 0x7fdbe9a321f8
        type <array_type 0x7fdbe9a32150 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25540 constant 344>
            unit size <integer_cst 0x7fdbe9a25588 constant 43>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a320a8>
            pointer_to_this <pointer_type 0x7fdbe9a321f8>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fdbe9f0a040 type <array_type 0x7fdbe9a32150>
        readonly constant static "Can't change directory: Can't check target\000">
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9ef8f90 type <integer_type 0x7fdbe9f0c5e8 int> constant 1>
[40;33m =======POP node_fun stack:parse_dispatch_command========= [0m
[40;42m =======pre add _ fucntion:__fgets_alias========= [0m
[40;33m =======POP node_fun stack:__fgets_alias========= [0m
[40;42m =======pre add _ fucntion:__builtin___snprintf_chk========= [0m
[40;33m =======POP node_fun stack:__builtin___snprintf_chk========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:interactive_loop========= [0m
[40;42m =======start_check_funciton:interactive_loop========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_84 = strdup (".");
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: use location
  return(strdup(path));
         ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_89 = _85;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_1 = _89;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16: warning: use location
  remote_path = do_realpath(conn, ".");
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
remote_path = _1;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:14: warning: use location
  remote_path = do_realpath(conn, ".");
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_2 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:309:18: warning: use location
  if (remote_path == NULL)
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (_2 == 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:309:5: warning: use location
  if (remote_path == NULL)
     ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:309:5: warning: use location
Cond in fucntion interactive_loop basic block 4
 ================== possible direct basic block ================= 
from interactive_loop basic block 5
 ================== possible direct basic block ================= 
from interactive_loop basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
    if (parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
    if (parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
_5 = remote_path;
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
_5 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_6 = remote_path;
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
[40;32m    HAS FREE STMT count:6 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:7 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_9 = remote_path;
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_9 = remote_path;
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: Use after free error!: free location 
  free(remote_path);
  ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: Use after free error!: free location 
  free(remote_path);
  ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_70>
_5 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_70>
_5 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :9 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
# .MEM_60 = VDEF <.MEM_59>
dir_28 = strdup (file1_26(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
dir_28 = strdup (file1_26(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:313:7: warning: use location
   dir = xstrdup(file1);
       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
   free(dir);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
free (dir_28);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
    free(dir);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
     free(dir);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_49 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "cd \"%s\"", dir_28);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:3 
_48 = __printf_chk (1, "Changing to: %s\n", dir_28);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (file1_26(D) != 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
  if (file1 != NULL) {
     ^
if (file1_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
Cond in fucntion interactive_loop basic block 6
 ================== possible direct basic block ================= 
from interactive_loop basic block 7
 ================== possible direct basic block ================= 
from interactive_loop basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
     free(dir);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_63 = VDEF <.MEM_62>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
    free(dir);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_69 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
   free(dir);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: Use after free error!: free location 
     free(dir);
     ^
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: Use after free error!: free location 
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a4b1a0
    type <pointer_type 0x7fdbe9a2ee70
        type <array_type 0x7fdbe9a2edc8 type <integer_type 0x7fdbe9a22738 char>
            HI
            size <integer_cst 0x7fdbe9ef8d98 constant 16>
            unit size <integer_cst 0x7fdbe9ef8db0 constant 2>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2ed20>
            pointer_to_this <pointer_type 0x7fdbe9a2ee70>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fdbe9a45060 type <array_type 0x7fdbe9a2edc8>
        readonly constant static ".\000">
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dir_28 = strdup (file1_26(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:313:7: warning: use location
   dir = xstrdup(file1);
       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
   free(dir);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
free (dir_28);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
    free(dir);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
     free(dir);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_49 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "cd \"%s\"", dir_28);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:3 
_48 = __printf_chk (1, "Changing to: %s\n", dir_28);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (file1_26(D) != 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
  if (file1 != NULL) {
     ^
if (file1_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
Cond in fucntion interactive_loop basic block 6
 ================== possible direct basic block ================= 
from interactive_loop basic block 7
 ================== possible direct basic block ================= 
from interactive_loop basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: Use after free error!: free location 
     free(dir);
     ^
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a16d40
    type <pointer_type 0x7fdbe9a30690
        type <array_type 0x7fdbe9a2ebd0 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25468 constant 16384>
            unit size <integer_cst 0x7fdbe9a25450 constant 2048>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2eb28>
            pointer_to_this <pointer_type 0x7fdbe9a30690>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fdbe9a3f750 cmd type <array_type 0x7fdbe9a2ebd0>
        addressable BLK file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 304 col 7 size <integer_cst 0x7fdbe9a25468 16384> unit size <integer_cst 0x7fdbe9a25450 2048>
        align 128 context <function_decl 0x7fdbe9a23d00 interactive_loop>
        chain <var_decl 0x7fdbe9a3f6c0 err type <integer_type 0x7fdbe9f0c5e8 int>
            SI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 305 col 6
            size <integer_cst 0x7fdbe9ef8e28 constant 32>
            unit size <integer_cst 0x7fdbe9ef8e40 constant 4>
            align 32 context <function_decl 0x7fdbe9a23d00 interactive_loop>>>
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:318:13 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:318:13 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:318:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
conn_23(D)->msg_id = _82;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:33: warning: use location
  expected_id = id = conn->msg_id++;
                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
conn_23(D)->msg_id = _82;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:33: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_81 = conn_23(D)->msg_id;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:25: warning: use location
  expected_id = id = conn->msg_id++;
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: use location
  free(conn);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
err_11 = PHI <err_10(19), err_41(20)>
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
err_11 = PHI <err_10(19), err_41(20)>
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (err_11 >= 0)
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (err_11 >= 0)
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^
if (err_11 >= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
Cond in fucntion interactive_loop basic block 21
 ================== possible direct basic block ================= 
from interactive_loop basic block 23
 ================== possible direct basic block ================= 
from interactive_loop basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: use location
    free(conn);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: use location
     free(conn);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
    if (parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:3 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: use location
     free(conn);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: use location
    free(conn);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: use location
  free(conn);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a16ea0
    type <pointer_type 0x7fdbe9a30690
        type <array_type 0x7fdbe9a2ebd0 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25468 constant 16384>
            unit size <integer_cst 0x7fdbe9a25450 constant 2048>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2eb28>
            pointer_to_this <pointer_type 0x7fdbe9a30690>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fdbe9a3f750 cmd type <array_type 0x7fdbe9a2ebd0>
        addressable BLK file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 304 col 7 size <integer_cst 0x7fdbe9a25468 16384> unit size <integer_cst 0x7fdbe9a25450 2048>
        align 128 context <function_decl 0x7fdbe9a23d00 interactive_loop>
        chain <var_decl 0x7fdbe9a3f6c0 err type <integer_type 0x7fdbe9f0c5e8 int>
            SI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 305 col 6
            size <integer_cst 0x7fdbe9ef8e28 constant 32>
            unit size <integer_cst 0x7fdbe9ef8e40 constant 4>
            align 32 context <function_decl 0x7fdbe9a23d00 interactive_loop>>>
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:328:13 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:328:13 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:328:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a4b080
    type <pointer_type 0x7fdbe9a30690
        type <array_type 0x7fdbe9a2ebd0 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25468 constant 16384>
            unit size <integer_cst 0x7fdbe9a25450 constant 2048>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2eb28>
            pointer_to_this <pointer_type 0x7fdbe9a30690>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fdbe9a3f750 cmd type <array_type 0x7fdbe9a2ebd0>
        addressable BLK file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 304 col 7 size <integer_cst 0x7fdbe9a25468 16384> unit size <integer_cst 0x7fdbe9a25450 2048>
        align 128 context <function_decl 0x7fdbe9a23d00 interactive_loop>
        chain <var_decl 0x7fdbe9a3f6c0 err type <integer_type 0x7fdbe9f0c5e8 int>
            SI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 305 col 6
            size <integer_cst 0x7fdbe9ef8e28 constant 32>
            unit size <integer_cst 0x7fdbe9ef8e40 constant 4>
            align 32 context <function_decl 0x7fdbe9a23d00 interactive_loop>>>
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:347:8 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:347:8 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:347:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:interactive_loop========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:interactive_loop========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path interactive_loop  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:parse_dispatch_command========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path parse_dispatch_command  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:parse_dispatch_command========= [0m
[40;42m =======start_check_funciton:parse_dispatch_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
# .MEM_39 = VDEF <.MEM_38>
_35 = strdup (0B);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_24>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_36 = PHI <0B(4), _35(5)>
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_40 = _36;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_40 = _36;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmp_15 = _40;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
tmp_15 = _40;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
   if ((tmp = do_realpath(conn, path1)) == NULL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
bb index := 9
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
bb index := 8
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
    free(tmp);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (tmp_15 == 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (tmp_15 == 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
   if ((tmp = do_realpath(conn, path1)) == NULL) {
      ^
if (tmp_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:271:6: warning: use location
Cond in fucntion parse_dispatch_command basic block 6
 ================== possible direct basic block ================= 
from parse_dispatch_command basic block 11
 ================== possible direct basic block ================= 
from parse_dispatch_command basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_35 = strdup (0B);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: use location
  return(strdup(path));
         ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44318
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _35 = strdup (0B);
    version 35
    ptr-info 0x7fdbe9a45348>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: use location
    free(tmp);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: Use after free error!: free location 
   free(*pwd);
   ^
_36 = PHI <0B(4), _35(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:278:4: warning: Use after free error!: free location 
    free(tmp);
    ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: Use after free error!: free location 
   free(*pwd);
   ^
# .MEM_28 = VDEF <.MEM_27>
*pwd_17(D) = tmp_15;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:283:8: warning: use location
   *pwd = tmp;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9a25f48 type <pointer_type 0x7fdbe9a227e0> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a169c0
    type <pointer_type 0x7fdbe9a321f8
        type <array_type 0x7fdbe9a32150 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25540 constant 344>
            unit size <integer_cst 0x7fdbe9a25588 constant 43>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a320a8>
            pointer_to_this <pointer_type 0x7fdbe9a321f8>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fdbe9f0a040 type <array_type 0x7fdbe9a32150>
        readonly constant static "Can't change directory: Can't check target\000">
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:277:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9ef8f90 type <integer_type 0x7fdbe9f0c5e8 int> constant 1>
[40;33m =======POP node_fun stack:parse_dispatch_command========= [0m
[40;42m =======pre add _ fucntion:__fgets_alias========= [0m
[40;33m =======POP node_fun stack:__fgets_alias========= [0m
[40;42m =======pre add _ fucntion:__builtin___snprintf_chk========= [0m
[40;33m =======POP node_fun stack:__builtin___snprintf_chk========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:interactive_loop========= [0m
[40;42m =======start_check_funciton:interactive_loop========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
_84 = strdup (".");
bb index := 3
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_84 = strdup (".");
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:235:9: warning: use location
  return(strdup(path));
         ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_85 = PHI <0B(2), _84(3)>
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = _85;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_89 = _85;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = _89;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_1 = _89;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16: warning: use location
  remote_path = do_realpath(conn, ".");
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_86>
remote_path = _1;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
remote_path = _1;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:14: warning: use location
  remote_path = do_realpath(conn, ".");
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_59>
_2 = remote_path;
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
_2 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:309:18: warning: use location
  if (remote_path == NULL)
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (_2 == 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:309:5: warning: use location
  if (remote_path == NULL)
     ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:309:5: warning: use location
Cond in fucntion interactive_loop basic block 4
 ================== possible direct basic block ================= 
from interactive_loop basic block 5
 ================== possible direct basic block ================= 
from interactive_loop basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
    if (parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
    if (parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_70>
_5 = remote_path;
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
_5 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_6 = remote_path;
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
[40;32m    HAS FREE STMT count:6 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:7 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_37>
free (_3);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:282:3: warning: use location
   free(*pwd);
   ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_9 = remote_path;
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_9 = remote_path;
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
[40;32m    HAS FREE STMT count:9 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a4e5a0
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
   
    def_stmt _84 = strdup (".");
    version 84
    ptr-info 0x7fdbe9a454c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: Use after free error!: free location 
  free(remote_path);
  ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: Use after free error!: free location 
  free(remote_path);
  ^
_85 = PHI <0B(2), _84(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_70>
_5 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_70>
_5 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: use location
     free(remote_path);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_63>
_6 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: use location
    free(remote_path);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_71 = VDEF <.MEM_70>
free (_5);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:322:5: warning: Use after free error!: free location 
     free(remote_path);
     ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_64 = VDEF <.MEM_63>
free (_6);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:335:4: warning: Use after free error!: free location 
    free(remote_path);
    ^
# VUSE <.MEM_54>
_9 = remote_path;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_68 = VDEF <.MEM_67>
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: Use after free error!: free location 
    if (parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: Use after free error!: free location 
    err = parse_dispatch_command(conn, cmd,
        ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: Use after free error!: free location 
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
# .MEM_75 = VDEF <.MEM_54>
free (_9);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:357:2: warning: use location
  free(remote_path);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :9 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
# .MEM_60 = VDEF <.MEM_59>
dir_28 = strdup (file1_26(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
dir_28 = strdup (file1_26(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:313:7: warning: use location
   dir = xstrdup(file1);
       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
   free(dir);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
free (dir_28);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
    free(dir);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
     free(dir);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_49 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "cd \"%s\"", dir_28);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:3 
_48 = __printf_chk (1, "Changing to: %s\n", dir_28);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (file1_26(D) != 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
  if (file1 != NULL) {
     ^
if (file1_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
Cond in fucntion interactive_loop basic block 6
 ================== possible direct basic block ================= 
from interactive_loop basic block 7
 ================== possible direct basic block ================= 
from interactive_loop basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a449d8
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <var_decl 0x7fdbe9a3f7e0 dir>
    def_stmt dir_28 = strdup (file1_26(D));
    version 28
    ptr-info 0x7fdbe9a45480>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
     free(dir);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_63 = VDEF <.MEM_62>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
    free(dir);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_69 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
   free(dir);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: Use after free error!: free location 
     free(dir);
     ^
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: Use after free error!: free location 
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a4b1a0
    type <pointer_type 0x7fdbe9a2ee70
        type <array_type 0x7fdbe9a2edc8 type <integer_type 0x7fdbe9a22738 char>
            HI
            size <integer_cst 0x7fdbe9ef8d98 constant 16>
            unit size <integer_cst 0x7fdbe9ef8db0 constant 2>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2ed20>
            pointer_to_this <pointer_type 0x7fdbe9a2ee70>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fdbe9a45060 type <array_type 0x7fdbe9a2edc8>
        readonly constant static ".\000">
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:308:16>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dir_28 = strdup (file1_26(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:313:7: warning: use location
   dir = xstrdup(file1);
       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
   free(dir);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:339:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
free (dir_28);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
    free(dir);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:334:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
     free(dir);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_49 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "cd \"%s\"", dir_28);
this stmt is child function---__builtin___snprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:__builtin___snprintf_chk 

 ================== trace ================== 
trace fucntion free:3 
_48 = __printf_chk (1, "Changing to: %s\n", dir_28);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (file1_26(D) != 0B)
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (file1_26(D) != 0B)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
  if (file1 != NULL) {
     ^
if (file1_26(D) != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:312:5: warning: use location
Cond in fucntion interactive_loop basic block 6
 ================== possible direct basic block ================= 
from interactive_loop basic block 7
 ================== possible direct basic block ================= 
from interactive_loop basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44990
    type <pointer_type 0x7fdbe9a227e0
        type <integer_type 0x7fdbe9a22738 char public string-flag QI
            size <integer_cst 0x7fdbe9ef8cd8 constant 8>
            unit size <integer_cst 0x7fdbe9ef8cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fdbe9f0c3f0 precision 8 min <integer_cst 0x7fdbe9a25180 -128> max <integer_cst 0x7fdbe9a25168 127>
            pointer_to_this <pointer_type 0x7fdbe9a227e0>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
        pointer_to_this <pointer_type 0x7fdbe9a22888>>
    var <parm_decl 0x7fdbe9a33880 file1>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fdbe9a45468>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_70 = VDEF <.MEM_68>
free (dir_28);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:321:5: warning: Use after free error!: free location 
     free(dir);
     ^
# .MEM_61 = VDEF <.MEM_60>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a16d40
    type <pointer_type 0x7fdbe9a30690
        type <array_type 0x7fdbe9a2ebd0 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25468 constant 16384>
            unit size <integer_cst 0x7fdbe9a25450 constant 2048>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2eb28>
            pointer_to_this <pointer_type 0x7fdbe9a30690>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fdbe9a3f750 cmd type <array_type 0x7fdbe9a2ebd0>
        addressable BLK file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 304 col 7 size <integer_cst 0x7fdbe9a25468 16384> unit size <integer_cst 0x7fdbe9a25450 2048>
        align 128 context <function_decl 0x7fdbe9a23d00 interactive_loop>
        chain <var_decl 0x7fdbe9a3f6c0 err type <integer_type 0x7fdbe9f0c5e8 int>
            SI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 305 col 6
            size <integer_cst 0x7fdbe9ef8e28 constant 32>
            unit size <integer_cst 0x7fdbe9ef8e40 constant 4>
            align 32 context <function_decl 0x7fdbe9a23d00 interactive_loop>>>
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:318:13 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:318:13 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:318:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
conn_23(D)->msg_id = _82;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:33: warning: use location
  expected_id = id = conn->msg_id++;
                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_57(D)>
conn_23(D)->msg_id = _82;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
conn_23(D)->msg_id = _82;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:33: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_57(D)>
_81 = conn_23(D)->msg_id;
bb index := 2
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_81 = conn_23(D)->msg_id;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:25: warning: use location
  expected_id = id = conn->msg_id++;
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: use location
  free(conn);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
err_11 = PHI <err_10(19), err_41(20)>
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
err_11 = PHI <err_10(19), err_41(20)>
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (err_11 >= 0)
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (err_11 >= 0)
bb index := 21
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 23

======================================================================
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^
if (err_11 >= 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
Cond in fucntion interactive_loop basic block 21
 ================== possible direct basic block ================= 
from interactive_loop basic block 23
 ================== possible direct basic block ================= 
from interactive_loop basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: use location
    free(conn);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
bb index := 16
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 23

======================================================================
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
bb index := 23
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 23

======================================================================
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
bb index := 11
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 23

======================================================================
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: use location
     free(conn);
     ^
this stmt is child function---free-----

 ================== find ================== 
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
    if (parse_dispatch_command(conn, cmd,
        ^
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:3 
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:319:8: warning: use location
this stmt is child function---parse_dispatch_command-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
trace fucntion name:parse_dispatch_command 
[40;44m =======trace_function_path parse_dispatch_command  function_call count: 4 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (tmp_15);
# .MEM_27 = VDEF <.MEM_37>
free (_3);
[40;36m ======= node_fun:parse_dispatch_command========= [0m
[40;36m ======= find relate stmt with conn ========= [0m
[40;36m ======= relate stmt argument:conn ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;46m =======add node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a44948
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fdbe9a33800 conn>
    def_stmt GIMPLE_NOP
    version 23
    ptr-info 0x7fdbe9a45450>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: use location
     free(conn);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: use location
    free(conn);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: use location
  free(conn);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
# .MEM_74 = VDEF <.MEM_73>
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:352:13: warning: use location
         err = parse_dispatch_command(conn, cmd, &remote_path,
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
err_10 = PHI <err_17(18), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
err_11 = PHI <err_10(19), err_41(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
if (err_11 >= 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:361:23: warning: use location
  return (err >= 0 ? 0 : -1);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
# .MEM_62 = VDEF <.MEM_61>
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:332:8: warning: use location
    err = parse_dispatch_command(conn, cmd,
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
     free(conn);
     ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_72 = VDEF <.MEM_71>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:323:5: warning: Use after free error!: free location 
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_65 = VDEF <.MEM_64>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:336:4: warning: Use after free error!: free location 
    free(conn);
    ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_76 = VDEF <.MEM_75>
free (conn_23(D));
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:358:2: warning: Use after free error!: free location 
  free(conn);
  ^
_12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a16ea0
    type <pointer_type 0x7fdbe9a30690
        type <array_type 0x7fdbe9a2ebd0 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25468 constant 16384>
            unit size <integer_cst 0x7fdbe9a25450 constant 2048>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2eb28>
            pointer_to_this <pointer_type 0x7fdbe9a30690>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fdbe9a3f750 cmd type <array_type 0x7fdbe9a2ebd0>
        addressable BLK file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 304 col 7 size <integer_cst 0x7fdbe9a25468 16384> unit size <integer_cst 0x7fdbe9a25450 2048>
        align 128 context <function_decl 0x7fdbe9a23d00 interactive_loop>
        chain <var_decl 0x7fdbe9a3f6c0 err type <integer_type 0x7fdbe9f0c5e8 int>
            SI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 305 col 6
            size <integer_cst 0x7fdbe9ef8e28 constant 32>
            unit size <integer_cst 0x7fdbe9ef8e40 constant 4>
            align 32 context <function_decl 0x7fdbe9a23d00 interactive_loop>>>
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:328:13 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:328:13 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:328:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fdbe9a4b080
    type <pointer_type 0x7fdbe9a30690
        type <array_type 0x7fdbe9a2ebd0 type <integer_type 0x7fdbe9a22738 char>
            BLK
            size <integer_cst 0x7fdbe9a25468 constant 16384>
            unit size <integer_cst 0x7fdbe9a25450 constant 2048>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fdbe9a2eb28>
            pointer_to_this <pointer_type 0x7fdbe9a30690>>
        unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fdbe9a3f750 cmd type <array_type 0x7fdbe9a2ebd0>
        addressable BLK file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 304 col 7 size <integer_cst 0x7fdbe9a25468 16384> unit size <integer_cst 0x7fdbe9a25450 2048>
        align 128 context <function_decl 0x7fdbe9a23d00 interactive_loop>
        chain <var_decl 0x7fdbe9a3f6c0 err type <integer_type 0x7fdbe9f0c5e8 int>
            SI file ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c line 305 col 6
            size <integer_cst 0x7fdbe9ef8e28 constant 32>
            unit size <integer_cst 0x7fdbe9ef8e40 constant 4>
            align 32 context <function_decl 0x7fdbe9a23d00 interactive_loop>>>
    ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:347:8 start: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:347:8 finish: ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:347:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:interactive_loop========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a563f0
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fdbe9a4cc60 ret>
    def_stmt ret_16 = calloc (1, 168);
    version 16
    ptr-info 0x7fdbe9a45528>
# .MEM_29 = VDEF <.MEM_12(D)>
ret_16 = calloc (1, 168);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = PHI <0B(3), ret_16(6)>
bb index := 7
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = PHI <0B(3), ret_16(6)>
bb index := 7
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = PHI <0B(3), ret_16(6)>
bb index := 7
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = PHI <0B(3), ret_16(6)>
bb index := 7
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = PHI <0B(3), ret_16(6)>
bb index := 7
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = PHI <0B(3), ret_16(6)>
bb index := 7
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
_26 = PHI <0B(3), ret_16(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _26;
bb index := 7
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _26;
bb index := 7
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _26;
bb index := 7
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _26;
bb index := 7
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _26;
bb index := 7
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _26;
bb index := 7
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
_41 = _26;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = ret_16;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = ret_16;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = ret_16;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_25 = ret_16;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:216:9: warning: use location
  return ret;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_27>
ret_16->limit_kbps = 0;
bb index := 6
# VUSE <.MEM_24>
return _8;
lto1: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_27>
ret_16->limit_kbps = 0;
bb index := 6
# VUSE <.MEM_78>
return _12;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_27>
ret_16->limit_kbps = 0;
bb index := 6
# VUSE <.MEM_11>
return _1;
lto1: warning: use location
beacuse in succ := 10 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
ret_16->limit_kbps = 0;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:214:18: warning: use location
  ret->limit_kbps = limit_kbps;
                  ^
ret_16->transfer_buflen = _24;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:212:24: warning: use location
   ret->transfer_buflen = ret->transfer_buflen < 20480? ret->transfer_buflen : 20480;
                        ^
_23 = ret_16->transfer_buflen;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:212:29: warning: use location
   ret->transfer_buflen = ret->transfer_buflen < 20480? ret->transfer_buflen : 20480;
                             ^
_22 = ret_16->version;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:211:9: warning: use location
  if (ret->version == 0)
         ^
if (_22 == 0)
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:211:5: warning: use location
  if (ret->version == 0)
     ^
if (_22 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:211:5: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_20 = ret_16->version;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:208:2: warning: use location
  printf("Remote version: %u", ret->version);
  ^
_21 = __printf_chk (1, "Remote version: %u", _20);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a563f0
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fdbe9a4cc60 ret>
    def_stmt ret_16 = calloc (1, 168);
    version 16
    ptr-info 0x7fdbe9a45528>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
ret_16->limit_kbps = 0;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:199:18: warning: use location
  ret->limit_kbps = 0;
                  ^
ret_16->exts = 0;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:198:12: warning: use location
  ret->exts = 0;
            ^
ret_16->num_requests = 64;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:197:20: warning: use location
  ret->num_requests = num_requests;
                    ^
ret_16->transfer_buflen = 32768;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:196:23: warning: use location
  ret->transfer_buflen = transfer_buflen;
                       ^
ret_16->fd_out = out_5(D);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:195:14: warning: use location
  ret->fd_out = fd_out;
              ^
ret_16->fd_out = out_5(D);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:195:14: warning: use location
ret_16->fd_in = in_4(D);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:194:13: warning: use location
  ret->fd_in = fd_in;
             ^
ret_16->fd_in = in_4(D);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:194:13: warning: use location
conn_13(D)->msg_id = _33;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:33: warning: use location
  expected_id = id = conn->msg_id++;
                                 ^
conn_23(D)->msg_id = _82;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:228:33: warning: use location
  expected_id = id = conn->msg_id++;
                                 ^
ret_16->msg_id = 1;
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:193:14: warning: use location
  ret->msg_id = 1;
              ^
ret_16 = calloc (1, 168);
./benchmarks/openssh-portable/leak_5/openssh_leak_5.c:192:6: warning: use location
  ret = xcalloc(1, sizeof(*ret)); /* allocation site */
      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7fdbe9a563f0
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fdbe9a4cc60 ret>
    def_stmt ret_16 = calloc (1, 168);
    version 16
    ptr-info 0x7fdbe9a45528>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdbe9a563f0
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fdbe9a4cc60 ret>
    def_stmt ret_16 = calloc (1, 168);
    version 16
    ptr-info 0x7fdbe9a45528>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fdbe9a451e0 type <integer_type 0x7fdbe9a22dc8 size_t> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7fdbe9a4e870
    type <pointer_type 0x7fdbe9a220a8
        type <record_type 0x7fdbe9a22f18 sftp_conn BLK
            size <integer_cst 0x7fdbe9fb1c30 constant 1344>
            unit size <integer_cst 0x7fdbe9a251e0 constant 168>
            align 64 symtab 0 alias set -1 canonical type 0x7fdbe9a22f18 fields <field_decl 0x7fdbe9a29130 fd_in> context <translation_unit_decl 0x7fdbe9f03168 ./benchmarks/openssh-portable/leak_5/openssh_leak_5.c>
            pointer_to_this <pointer_type 0x7fdbe9a220a8> chain <type_decl 0x7fdbe9a291c8 D.4013>>
        public unsigned DI
        size <integer_cst 0x7fdbe9ef8be8 constant 64>
        unit size <integer_cst 0x7fdbe9ef8c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fdbe9a4c360 conn>
    def_stmt conn_7 = _41;
    version 7
    ptr-info 0x7fdbe9a45510>
conn_7 = _41;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:parse_dispatch_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
switch (cmdnum_11(D)) <default: <L2> [25.00%], case -1: <L0> [25.00%], case 0: <L3> [25.00%], case 1: <L4> [25.00%], case 19: <L4> [25.00%]>

=======is loop:0=========

 bb index 3 
<L0> [25.00%]:
goto <bb 11> (<L3>); [100.00%]

=======is loop:0=========

 bb index 4 
<L4> [25.00%]:
_32 = conn_13(D)->msg_id;
_33 = _32 + 1;
conn_13(D)->msg_id = _33;
if (type_34(D) == 101)
  goto <bb 6>; [9.37%]
else
  goto <bb 5>; [90.63%]

=======is loop:0=========

 bb index 5 
<bb 5> [22.66%]:
_35 = strdup (0B);

=======is loop:0=========

 bb index 6 
<bb 6> [25.00%]:
# _36 = PHI <0B(4), _35(5)>
_40 = _36;
tmp_15 = _40;
if (tmp_15 == 0B)
  goto <bb 11> (<L3>); [30.00%]
else
  goto <bb 7>; [70.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [17.50%]:
_1 = aa_16(D)->flags;
_2 = _1 & 4;
if (_2 == 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [8.75%]:
error ("Can\'t change directory: Can\'t check target");
free (tmp_15);
goto <bb 11> (<L3>); [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [8.75%]:
_3 = *pwd_17(D);
free (_3);
*pwd_17(D) = tmp_15;
goto <bb 11> (<L3>); [100.00%]

=======is loop:0=========

 bb index 10 
<L2> [25.00%]:
_23 = __printf_chk (1, "%d is not implemented", cmdnum_11(D));

=======is loop:0=========

 bb index 11 
# err_7 = PHI <0(2), -1(3), 1(6), 1(8), 0(9), 0(10)>
<L3> [100.00%]:
_4 = err_abort_10(D) != 0;
_5 = err_7 != 0;
_6 = _4 & _5;
if (_6 != 0)
  goto <bb 14>; [2.00%]
else
  goto <bb 12>; [98.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [98.00%]:
if (cmdnum_11(D) == 18)
  goto <bb 14>; [30.50%]
else
  goto <bb 13>; [69.50%]

=======is loop:0=========

 bb index 13 
<bb 13> [68.11%]:

=======is loop:0=========

 bb index 14 
<bb 14> [100.00%]:
# _8 = PHI <-1(11), 1(12), 0(13)>
return _8;

=======Mapping node_fun:interactive_loop=========
=======is loop:0=========

 bb index 2 
<bb 2> [23.20%]:
_81 = conn_23(D)->msg_id;
_82 = _81 + 1;
conn_23(D)->msg_id = _82;
if (type_83(D) == 101)
  goto <bb 4>; [9.37%]
else
  goto <bb 3>; [90.63%]

=======is loop:0=========

 bb index 3 
<bb 3> [21.03%]:
_84 = strdup (".");

=======is loop:0=========

 bb index 4 
<bb 4> [23.20%]:
# _85 = PHI <0B(2), _84(3)>
_89 = _85;
_1 = _89;
remote_path = _1;
_2 = remote_path;
if (_2 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.01%]:
_47 = __printf_chk (1, "Need cwd%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [23.19%]:
if (file1_26(D) != 0B)
  goto <bb 7>; [53.47%]
else
  goto <bb 18>; [46.53%]

=======is loop:0=========

 bb index 7 
<bb 7> [12.40%]:
dir_28 = strdup (file1_26(D));
if (file2_29(D) == 0B)
  goto <bb 8>; [30.00%]
else
  goto <bb 12>; [70.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [3.72%]:
_3 = quiet;
if (_3 == 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [1.23%]:
_48 = __printf_chk (1, "Changing to: %s\n", dir_28);

=======is loop:0=========

 bb index 10 
<bb 10> [3.72%]:
_49 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "cd \"%s\"", dir_28);
_4 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
if (_4 != 0)
  goto <bb 11>; [2.00%]
else
  goto <bb 17>; [98.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [0.07%]:
free (dir_28);
_5 = remote_path;
free (_5);
free (conn_23(D));
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [8.68%]:
if (file2_29(D) != 0B)
  goto <bb 14>; [70.00%]
else
  goto <bb 13>; [30.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [2.60%]:

=======is loop:0=========

 bb index 14 
<bb 14> [8.68%]:
# _13 = PHI <file2_29(D)(12), ""(13)>
if (file2_29(D) == 0B)
  goto <bb 16>; [26.74%]
else
  goto <bb 15>; [73.26%]

=======is loop:0=========

 bb index 15 
<bb 15> [6.36%]:

=======is loop:0=========

 bb index 16 
<bb 16> [8.68%]:
# _14 = PHI <""(14), " "(15)>
_50 = __builtin___snprintf_chk (&cmd, 2048, 1, 2048, "get %s%s%s", dir_28, _14, _13);
err_31 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, 1);
free (dir_28);
_6 = remote_path;
free (_6);
free (conn_23(D));
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [3.65%]:
free (dir_28);

=======is loop:0=========

 bb index 18 
<bb 18> [14.44%]:
# err_17 = PHI <0(6), 0(17)>

=======is loop:1=========

 bb index 19 
<bb 19> [100.00%]:
# err_10 = PHI <err_17(18), err_41(20)>
_7 = infile;
_51 = __fgets_alias (&cmd, 2048, _7);
if (_51 == 0B)
  goto <bb 21>; [7.50%]
else
  goto <bb 20>; [92.50%]

=======is loop:1=========

 bb index 20 
<bb 20> [92.50%]:
_8 = batchmode;
err_41 = parse_dispatch_command (conn_23(D), &cmd, &remote_path, _8);
if (err_41 != 0)
  goto <bb 21>; [7.50%]
else
  goto <bb 19>; [92.50%]

=======is loop:0=========

 bb index 21 
<bb 21> [14.44%]:
# err_11 = PHI <err_10(19), err_41(20)>
_9 = remote_path;
free (_9);
free (conn_23(D));
if (err_11 >= 0)
  goto <bb 23>; [98.87%]
else
  goto <bb 22>; [1.13%]

=======is loop:0=========

 bb index 22 
<bb 22> [0.16%]:

=======is loop:0=========

 bb index 23 
<bb 23> [23.19%]:
# _12 = PHI <-1(11), err_31(16), 0(21), -1(22)>
remote_path ={v} {CLOBBER};
cmd ={v} {CLOBBER};
return _12;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
ret_16 = calloc (1, 168);
ret_16->msg_id = 1;
ret_16->fd_in = in_4(D);
ret_16->fd_out = out_5(D);
ret_16->transfer_buflen = 32768;
ret_16->num_requests = 64;
ret_16->exts = 0;
ret_16->limit_kbps = 0;
if (type_17(D) != 2)
  goto <bb 3>; [16.11%]
else
  goto <bb 4>; [83.89%]

=======is loop:0=========

 bb index 3 
<bb 3> [16.11%]:
_18 = (int) type_17(D);
_19 = __printf_chk (1, "Invalid packet back from SSH2_FXP_INIT (type %u)\n", _18);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [83.89%]:
_20 = ret_16->version;
_21 = __printf_chk (1, "Remote version: %u", _20);
_22 = ret_16->version;
if (_22 == 0)
  goto <bb 5>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [41.94%]:
_23 = ret_16->transfer_buflen;
_24 = MIN_EXPR <_23, 20480>;
ret_16->transfer_buflen = _24;

=======is loop:0=========

 bb index 6 
<bb 6> [83.89%]:
ret_16->limit_kbps = 0;
_25 = ret_16;

=======is loop:0=========

 bb index 7 
<bb 7> [100.00%]:
# _26 = PHI <0B(3), ret_16(6)>
_41 = _26;
conn_7 = _41;
if (conn_7 == 0B)
  goto <bb 8>; [26.74%]
else
  goto <bb 9>; [73.26%]

=======is loop:0=========

 bb index 8 
<bb 8> [26.74%]:
_10 = __printf_chk (1, "Couldn\'t initialise connection to server\n");
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [73.26%]:
err_9 = interactive_loop (conn_7, 0B, 0B);

=======is loop:0=========

 bb index 10 
<bb 10> [100.00%]:
# _1 = PHI <1(8), 0(9)>
return _1;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 6 [0m
[40;34m    used_stmt array stack totalsize of : 1848 [0m
[40;34m    collect time: : 0.000141 s [0m
[40;34m    algorithm time: 0.048853 s [0m
[40;34m    gimple stmt count : : 101 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
