In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:104:0: warning: "ENOMSG" redefined
 #define ENOMSG 35 /* No message of desired type */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:23:0: note: this is the location of the previous definition
 #define ENOMSG  42 /* No message of desired type */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:105:0: warning: "EIDRM" redefined
 #define EIDRM 36 /* Identifier removed */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:24:0: note: this is the location of the previous definition
 #define EIDRM  43 /* Identifier removed */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:106:0: warning: "ECHRNG" redefined
 #define ECHRNG 37 /* Channel number out of range */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:25:0: note: this is the location of the previous definition
 #define ECHRNG  44 /* Channel number out of range */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:107:0: warning: "EL2NSYNC" redefined
 #define EL2NSYNC 38 /* Level 2 not synchronized */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:26:0: note: this is the location of the previous definition
 #define EL2NSYNC 45 /* Level 2 not synchronized */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:108:0: warning: "EL3HLT" redefined
 #define EL3HLT 39 /* Level 3 halted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:27:0: note: this is the location of the previous definition
 #define EL3HLT  46 /* Level 3 halted */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:109:0: warning: "EL3RST" redefined
 #define EL3RST 40 /* Level 3 reset */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:28:0: note: this is the location of the previous definition
 #define EL3RST  47 /* Level 3 reset */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:110:0: warning: "ELNRNG" redefined
 #define ELNRNG 41 /* Link number out of range */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:29:0: note: this is the location of the previous definition
 #define ELNRNG  48 /* Link number out of range */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:111:0: warning: "EUNATCH" redefined
 #define EUNATCH 42 /* Protocol driver not attached */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:30:0: note: this is the location of the previous definition
 #define EUNATCH  49 /* Protocol driver not attached */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:112:0: warning: "ENOCSI" redefined
 #define ENOCSI 43 /* No CSI structure available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:31:0: note: this is the location of the previous definition
 #define ENOCSI  50 /* No CSI structure available */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:113:0: warning: "EL2HLT" redefined
 #define EL2HLT 44 /* Level 2 halted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:32:0: note: this is the location of the previous definition
 #define EL2HLT  51 /* Level 2 halted */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:114:0: warning: "EDEADLK" redefined
 #define EDEADLK 45 /* Deadlock condition */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:7:0: note: this is the location of the previous definition
 #define EDEADLK  35 /* Resource deadlock would occur */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:115:0: warning: "ENOLCK" redefined
 #define ENOLCK 46 /* No record locks available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:9:0: note: this is the location of the previous definition
 #define ENOLCK  37 /* No record locks available */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:116:0: warning: "EBADE" redefined
 #define EBADE 50 /* Invalid exchange */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:33:0: note: this is the location of the previous definition
 #define EBADE  52 /* Invalid exchange */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:117:0: warning: "EBADR" redefined
 #define EBADR 51 /* Invalid request descriptor */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:34:0: note: this is the location of the previous definition
 #define EBADR  53 /* Invalid request descriptor */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:118:0: warning: "EXFULL" redefined
 #define EXFULL 52 /* Exchange full */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:35:0: note: this is the location of the previous definition
 #define EXFULL  54 /* Exchange full */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:119:0: warning: "ENOANO" redefined
 #define ENOANO 53 /* No anode */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:36:0: note: this is the location of the previous definition
 #define ENOANO  55 /* No anode */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:120:0: warning: "EBADRQC" redefined
 #define EBADRQC 54 /* Invalid request code */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:37:0: note: this is the location of the previous definition
 #define EBADRQC  56 /* Invalid request code */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:121:0: warning: "EBADSLT" redefined
 #define EBADSLT 55 /* Invalid slot */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:38:0: note: this is the location of the previous definition
 #define EBADSLT  57 /* Invalid slot */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:122:0: warning: "EDEADLOCK" redefined
 #define EDEADLOCK 56 /* File locking deadlock error */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:40:0: note: this is the location of the previous definition
 #define EDEADLOCK EDEADLK
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:123:0: warning: "EBFONT" redefined
 #define EBFONT 57 /* Bad font file fmt */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:42:0: note: this is the location of the previous definition
 #define EBFONT  59 /* Bad font file format */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:136:0: warning: "EMULTIHOP" redefined
 #define EMULTIHOP 74 /* Multihop attempted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:55:0: note: this is the location of the previous definition
 #define EMULTIHOP 72 /* Multihop attempted */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:138:0: warning: "EDOTDOT" redefined
 #define EDOTDOT 76 /* Cross mount point (not really error) */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:56:0: note: this is the location of the previous definition
 #define EDOTDOT  73 /* RFS specific error */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:139:0: warning: "EBADMSG" redefined
 #define EBADMSG 77 /* Trying to read unreadable message */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:57:0: note: this is the location of the previous definition
 #define EBADMSG  74 /* Not a data message */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:141:0: warning: "ENOTUNIQ" redefined
 #define ENOTUNIQ 80 /* Given log. name not unique */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:59:0: note: this is the location of the previous definition
 #define ENOTUNIQ 76 /* Name not unique on network */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:142:0: warning: "EBADFD" redefined
 #define EBADFD 81 /* f.d. invalid for this operation */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:60:0: note: this is the location of the previous definition
 #define EBADFD  77 /* File descriptor in bad state */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:143:0: warning: "EREMCHG" redefined
 #define EREMCHG 82 /* Remote address changed */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:61:0: note: this is the location of the previous definition
 #define EREMCHG  78 /* Remote address changed */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:144:0: warning: "ELIBACC" redefined
 #define ELIBACC 83 /* Can't access a needed shared lib */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:62:0: note: this is the location of the previous definition
 #define ELIBACC  79 /* Can not access a needed shared library */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:145:0: warning: "ELIBBAD" redefined
 #define ELIBBAD 84 /* Accessing a corrupted shared lib */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:63:0: note: this is the location of the previous definition
 #define ELIBBAD  80 /* Accessing a corrupted shared library */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:146:0: warning: "ELIBSCN" redefined
 #define ELIBSCN 85 /* .lib section in a.out corrupted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:64:0: note: this is the location of the previous definition
 #define ELIBSCN  81 /* .lib section in a.out corrupted */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:147:0: warning: "ELIBMAX" redefined
 #define ELIBMAX 86 /* Attempting to link in too many libs */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:65:0: note: this is the location of the previous definition
 #define ELIBMAX  82 /* Attempting to link in too many shared libraries */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:148:0: warning: "ELIBEXEC" redefined
 #define ELIBEXEC 87 /* Attempting to exec a shared library */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:66:0: note: this is the location of the previous definition
 #define ELIBEXEC 83 /* Cannot exec a shared library directly */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:149:0: warning: "ENOSYS" redefined
 #define ENOSYS 88 /* Function not implemented */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:18:0: note: this is the location of the previous definition
 #define ENOSYS  38 /* Invalid system call number */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:151:0: warning: "ENOTEMPTY" redefined
 #define ENOTEMPTY 90 /* Directory not empty */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:20:0: note: this is the location of the previous definition
 #define ENOTEMPTY 39 /* Directory not empty */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:152:0: warning: "ENAMETOOLONG" redefined
 #define ENAMETOOLONG 91 /* File or path name too long */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:8:0: note: this is the location of the previous definition
 #define ENAMETOOLONG 36 /* File name too long */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:153:0: warning: "ELOOP" redefined
 #define ELOOP 92 /* Too many symbolic links */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:21:0: note: this is the location of the previous definition
 #define ELOOP  40 /* Too many symbolic links encountered */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:158:0: warning: "EAFNOSUPPORT" redefined
 #define EAFNOSUPPORT 106 /* Address family not supported by protocol family */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:80:0: note: this is the location of the previous definition
 #define EAFNOSUPPORT 97 /* Address family not supported by protocol */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:159:0: warning: "EPROTOTYPE" redefined
 #define EPROTOTYPE 107 /* Protocol wrong type for socket */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:74:0: note: this is the location of the previous definition
 #define EPROTOTYPE 91 /* Protocol wrong type for socket */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:160:0: warning: "ENOTSOCK" redefined
 #define ENOTSOCK 108 /* Socket operation on non-socket */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:71:0: note: this is the location of the previous definition
 #define ENOTSOCK 88 /* Socket operation on non-socket */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:161:0: warning: "ENOPROTOOPT" redefined
 #define ENOPROTOOPT 109 /* Protocol not available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:75:0: note: this is the location of the previous definition
 #define ENOPROTOOPT 92 /* Protocol not available */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:162:0: warning: "ESHUTDOWN" redefined
 #define ESHUTDOWN 110 /* Can't send after socket shutdown */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:91:0: note: this is the location of the previous definition
 #define ESHUTDOWN 108 /* Cannot send after transport endpoint shutdown */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:164:0: warning: "EADDRINUSE" redefined
 #define EADDRINUSE 112  /* Address already in use */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:81:0: note: this is the location of the previous definition
 #define EADDRINUSE 98 /* Address already in use */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:165:0: warning: "ECONNABORTED" redefined
 #define ECONNABORTED 113 /* Connection aborted */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:86:0: note: this is the location of the previous definition
 #define ECONNABORTED 103 /* Software caused connection abort */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:166:0: warning: "ENETUNREACH" redefined
 #define ENETUNREACH 114  /* Network is unreachable */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:84:0: note: this is the location of the previous definition
 #define ENETUNREACH 101 /* Network is unreachable */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:167:0: warning: "ENETDOWN" redefined
 #define ENETDOWN 115  /* Network interface is not configured */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:83:0: note: this is the location of the previous definition
 #define ENETDOWN 100 /* Network is down */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:168:0: warning: "ETIMEDOUT" redefined
 #define ETIMEDOUT 116  /* Connection timed out */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:93:0: note: this is the location of the previous definition
 #define ETIMEDOUT 110 /* Connection timed out */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:169:0: warning: "EHOSTDOWN" redefined
 #define EHOSTDOWN 117  /* Host is down */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:95:0: note: this is the location of the previous definition
 #define EHOSTDOWN 112 /* Host is down */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:170:0: warning: "EHOSTUNREACH" redefined
 #define EHOSTUNREACH 118 /* Host is unreachable */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:96:0: note: this is the location of the previous definition
 #define EHOSTUNREACH 113 /* No route to host */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:171:0: warning: "EINPROGRESS" redefined
 #define EINPROGRESS 119  /* Connection already in progress */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:98:0: note: this is the location of the previous definition
 #define EINPROGRESS 115 /* Operation now in progress */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:172:0: warning: "EALREADY" redefined
 #define EALREADY 120  /* Socket already connected */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:97:0: note: this is the location of the previous definition
 #define EALREADY 114 /* Operation already in progress */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:173:0: warning: "EDESTADDRREQ" redefined
 #define EDESTADDRREQ 121 /* Destination address required */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:72:0: note: this is the location of the previous definition
 #define EDESTADDRREQ 89 /* Destination address required */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:174:0: warning: "EMSGSIZE" redefined
 #define EMSGSIZE 122  /* Message too long */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:73:0: note: this is the location of the previous definition
 #define EMSGSIZE 90 /* Message too long */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:175:0: warning: "EPROTONOSUPPORT" redefined
 #define EPROTONOSUPPORT 123 /* Unknown protocol */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:76:0: note: this is the location of the previous definition
 #define EPROTONOSUPPORT 93 /* Protocol not supported */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:176:0: warning: "ESOCKTNOSUPPORT" redefined
 #define ESOCKTNOSUPPORT 124 /* Socket type not supported */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:77:0: note: this is the location of the previous definition
 #define ESOCKTNOSUPPORT 94 /* Socket type not supported */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:177:0: warning: "EADDRNOTAVAIL" redefined
 #define EADDRNOTAVAIL 125 /* Address not available */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:82:0: note: this is the location of the previous definition
 #define EADDRNOTAVAIL 99 /* Cannot assign requested address */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:178:0: warning: "ENETRESET" redefined
 #define ENETRESET 126
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:85:0: note: this is the location of the previous definition
 #define ENETRESET 102 /* Network dropped connection because of reset */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:179:0: warning: "EISCONN" redefined
 #define EISCONN 127  /* Socket is already connected */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:89:0: note: this is the location of the previous definition
 #define EISCONN  106 /* Transport endpoint is already connected */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:180:0: warning: "ENOTCONN" redefined
 #define ENOTCONN 128  /* Socket is not connected */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:90:0: note: this is the location of the previous definition
 #define ENOTCONN 107 /* Transport endpoint is not connected */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:181:0: warning: "ETOOMANYREFS" redefined
 #define ETOOMANYREFS 129
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:92:0: note: this is the location of the previous definition
 #define ETOOMANYREFS 109 /* Too many references: cannot splice */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:183:0: warning: "EUSERS" redefined
 #define EUSERS 131
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:70:0: note: this is the location of the previous definition
 #define EUSERS  87 /* Too many users */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:184:0: warning: "EDQUOT" redefined
 #define EDQUOT 132
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:105:0: note: this is the location of the previous definition
 #define EDQUOT  122 /* Quota exceeded */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:185:0: warning: "ESTALE" redefined
 #define ESTALE 133
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:99:0: note: this is the location of the previous definition
 #define ESTALE  116 /* Stale file handle */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:186:0: warning: "ENOTSUP" redefined
 #define ENOTSUP 134  /* Not supported */
 
In file included from /usr/include/errno.h:28:0,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/x86_64-linux-gnu/bits/errno.h:30:0: note: this is the location of the previous definition
 #  define ENOTSUP  EOPNOTSUPP
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:187:0: warning: "ENOMEDIUM" redefined
 #define ENOMEDIUM 135   /* No medium (in tape drive) */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:107:0: note: this is the location of the previous definition
 #define ENOMEDIUM 123 /* No medium found */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:190:0: warning: "EILSEQ" redefined
 #define EILSEQ 138
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:67:0: note: this is the location of the previous definition
 #define EILSEQ  84 /* Illegal byte sequence */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:191:0: warning: "EOVERFLOW" redefined
 #define EOVERFLOW 139 /* Value too large for defined data type */
 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1:0,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:58:0: note: this is the location of the previous definition
 #define EOVERFLOW 75 /* Value too large for defined data type */
 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:10:0:
./benchmarks/openssh-portable/leak_10/../openssh.h:675:49: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:676:58: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:677:59: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:678:53: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:681:29: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
     const size_t srclen = strlen(src);
                           ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: incompatible implicit declaration of built-in function ‘strlen’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: implicit declaration of function ‘strnlen’ [-Wimplicit-function-declaration]
     const size_t dstlen = strnlen(dst, maxlen);
                           ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
         memcpy(dst+dstlen, src, srclen+1);
         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: incompatible implicit declaration of built-in function ‘memcpy’
         memcpy(dst+dstlen, src, maxlen-1);
         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:11: note: in expansion of macro ‘xstrdup’
   return (xstrdup(filename));  /* allocation site */
           ^~~~~~~
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:11: note: in expansion of macro ‘xstrdup’
   return (xstrdup(filename));  /* allocation site */
           ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:9: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  path = strchr(filename, '/');
         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:9: warning: incompatible implicit declaration of built-in function ‘strchr’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:9: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
   memcpy(user, filename, slash);
   ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10: note: in expansion of macro ‘xstrdup’
  return (xstrdup(ret));    /* allocation site */
          ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  if (strcmp(path, "-") == 0) {
      ^~~~~~
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:0:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10: note: in expansion of macro ‘xstrdup’
   path = xstrdup("(standard input)");
          ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:8: warning: implicit declaration of function ‘time’; did you mean ‘die’? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 4
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
succs:= 10
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 19
succs:= 19
--------GIMPLE Cond -------
succs:= 21
succs:= 21
--------GIMPLE Cond -------
succs:= 23
succs:= 23
--------GIMPLE Cond -------
succs:= 25
succs:= 25
--------GIMPLE Cond -------
succs:= 29
--------GIMPLE Cond -------
succs:= 29
succs:= 30
--------GIMPLE Cond -------
succs:= 31
--------GIMPLE Cond -------
succs:= 32
succs:= 32
--------GIMPLE Cond -------
succs:= 4
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
# VUSE <.MEM_41(D)>
path_60 = strchr (filename_59, 47);
# .MEM_108 = VDEF <.MEM_41(D)>
_68 = __printf_chk (1, "tilde_expand_filename: ~username too long%s\n", "");
# .MEM_106 = VDEF <.MEM_41(D)>
memcpy (&user, filename_59, _70);
# .MEM_107 = VDEF <.MEM_106>
user[slash_67] = 0;
# VUSE <.MEM_100>
srclen_77 = strlen (filename_72);
# .MEM_110 = VDEF <.MEM_100>
_78 = strnlen (&ret, 64);
# .MEM_113 = VDEF <.MEM_110>
memcpy (_83, filename_72, _82);
# .MEM_111 = VDEF <.MEM_110>
memcpy (_85, filename_72, _84);
# .MEM_116 = VDEF <.MEM_102>
_74 = __printf_chk (1, "tilde_expand_filename: Path too long%s\n", "");
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = time (0B);
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
# .MEM_22 = VDEF <.MEM_17>
update_krl_from_file (&pw, _6);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:update_krl_from_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path update_krl_from_file  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:update_krl_from_file========= [0m
[40;42m =======start_check_funciton:update_krl_from_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_39>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_58 = strdup (file_17(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:11: warning: use location
   return (xstrdup(filename));  /* allocation site */
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_121 = _76;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
path_19 = _121;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:7: warning: use location
  path = tilde_expand_filename(file, pw->pw_uid);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
_57 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:6: warning: use location
  if (*filename != '~')
      ^
if (_57 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
  if (*filename != '~')
     ^
if (_57 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filename_59 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:10: warning: use location
  filename++;
          ^
memcpy (&user, filename_59, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: use location
   memcpy(user, filename, slash);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_60 = strchr (filename_59, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:7: warning: use location
  path = strchr(filename, '/');
       ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
if (path_60 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
  if (path != NULL)
     ^
if (path_60 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_64 = (long int) path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^
_66 = _64 - _65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
slash_67 = (u_int) _66;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:9: warning: use location
   slash = path - filename;
         ^
user[slash_67] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:15: warning: use location
   user[slash] = '\0';
               ^
if (slash_67 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
   if (slash > sizeof(user) - 1)
      ^
if (slash_67 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
Cond in fucntion update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_62 = filename_59 < path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:27: warning: use location
  if (path != NULL && path > filename) {  /* ~user/path */
                           ^
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^
_65 = (long int) filename_59;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);
bb index := 18
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);
bb index := 18
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================
_75 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10: warning: use location
  return (xstrdup(ret));    /* allocation site */
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_121 = _76;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
path_19 = _121;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:7: warning: use location
  path = tilde_expand_filename(file, pw->pw_uid);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
path_26 = strdup ("(standard input)");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:8: warning: use location
   path = xstrdup("(standard input)");
        ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
  if (strcmp(path, "-") != 0)
     ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
Cond in fucntion update_krl_from_file basic block 32
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 33
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_58 = strdup (file_17(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:11: warning: use location
   return (xstrdup(filename));  /* allocation site */
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_121 = _76;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
path_19 = _121;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:7: warning: use location
  path = tilde_expand_filename(file, pw->pw_uid);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
_57 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:6: warning: use location
  if (*filename != '~')
      ^
if (_57 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
  if (*filename != '~')
     ^
if (_57 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filename_59 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:10: warning: use location
  filename++;
          ^
memcpy (&user, filename_59, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: use location
   memcpy(user, filename, slash);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_60 = strchr (filename_59, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:7: warning: use location
  path = strchr(filename, '/');
       ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
if (path_60 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
  if (path != NULL)
     ^
if (path_60 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_64 = (long int) path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^
_66 = _64 - _65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
slash_67 = (u_int) _66;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:9: warning: use location
   slash = path - filename;
         ^
user[slash_67] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:15: warning: use location
   user[slash] = '\0';
               ^
if (slash_67 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
   if (slash > sizeof(user) - 1)
      ^
if (slash_67 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
Cond in fucntion update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_62 = filename_59 < path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:27: warning: use location
  if (path != NULL && path > filename) {  /* ~user/path */
                           ^
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^
_65 = (long int) filename_59;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
filename_59 = file_17(D) + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
memcpy (&user, filename_59, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: use location
   memcpy(user, filename, slash);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
path_60 = strchr (filename_59, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:7: warning: use location
  path = strchr(filename, '/');
       ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
if (path_60 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
  if (path != NULL)
     ^
if (path_60 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_64 = (long int) path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^
_66 = _64 - _65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
slash_67 = (u_int) _66;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:9: warning: use location
   slash = path - filename;
         ^
user[slash_67] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:15: warning: use location
   user[slash] = '\0';
               ^
if (slash_67 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
   if (slash > sizeof(user) - 1)
      ^
if (slash_67 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
Cond in fucntion update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_62 = filename_59 < path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:27: warning: use location
  if (path != NULL && path > filename) {  /* ~user/path */
                           ^
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^
_65 = (long int) filename_59;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f985df8af90 type <integer_type 0x7f985df9e5e8 int> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7f985dadd140
    type <pointer_type 0x7f985dac2498
        type <array_type 0x7f985dac1f18 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dab74f8 constant 1024>
            unit size <integer_cst 0x7f985dab72a0 constant 128>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac1e70>
            pointer_to_this <pointer_type 0x7f985dac2498>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dad3c60 user type <array_type 0x7f985dac1f18>
        addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 7 size <integer_cst 0x7f985dab74f8 1024> unit size <integer_cst 0x7f985dab72a0 128>
        align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad3630 user>
        chain <var_decl 0x7f985dad3cf0 ret type <array_type 0x7f985dac1dc8>
            addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 18
            size <integer_cst 0x7f985dfa6030 constant 512>
            unit size <integer_cst 0x7f985e043c18 constant 64>
            align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad35a0 ret> chain <var_decl 0x7f985dad3d80 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
filename_72 = PHI <filename_59(8), filename_71(9)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f985dadd500
    type <pointer_type 0x7f985dac25e8
        type <array_type 0x7f985dac1dc8 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dfa6030 constant 512>
            unit size <integer_cst 0x7f985e043c18 constant 64>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac1d20>
            pointer_to_this <pointer_type 0x7f985dac25e8>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dad3cf0 ret type <array_type 0x7f985dac1dc8>
        addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 18 size <integer_cst 0x7f985dfa6030 512> unit size <integer_cst 0x7f985e043c18 64>
        align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad35a0 ret>
        chain <var_decl 0x7f985dad3d80 slash type <integer_type 0x7f985dac1c78 u_int>
            used unsigned SI file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 42 col 13
            size <integer_cst 0x7f985df8ae28 constant 32>
            unit size <integer_cst 0x7f985df8ae40 constant 4>
            align 32 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad3510 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>
_83 = &ret + dstlen_79;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_110>
memcpy (_83, filename_72, _82);
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_113 = VDEF <.MEM_110>
memcpy (_83, filename_72, _82);
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>
_85 = &ret + dstlen_79;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_111 = VDEF <.MEM_110>
memcpy (_85, filename_72, _84);
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_111 = VDEF <.MEM_110>
memcpy (_85, filename_72, _84);
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f985dadd340
    type <pointer_type 0x7f985dac25e8
        type <array_type 0x7f985dac1dc8 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dfa6030 constant 512>
            unit size <integer_cst 0x7f985e043c18 constant 64>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac1d20>
            pointer_to_this <pointer_type 0x7f985dac25e8>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dad3cf0 ret type <array_type 0x7f985dac1dc8>
        addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 18 size <integer_cst 0x7f985dfa6030 512> unit size <integer_cst 0x7f985e043c18 64>
        align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad35a0 ret>
        chain <var_decl 0x7f985dad3d80 slash type <integer_type 0x7f985dac1c78 u_int>
            used unsigned SI file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 42 col 13
            size <integer_cst 0x7f985df8ae28 constant 32>
            unit size <integer_cst 0x7f985df8ae40 constant 4>
            align 32 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad3510 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
path_19 = _121;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f985daa8a60
    type <pointer_type 0x7f985dac0e70
        type <array_type 0x7f985dac0dc8 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dab7420 constant 136>
            unit size <integer_cst 0x7f985dab7390 constant 17>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac0d20>
            pointer_to_this <pointer_type 0x7f985dac0e70>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f985dace820 type <array_type 0x7f985dac0dc8>
        readonly constant static "(standard input)\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92948
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _5 = rand ();
    version 5>
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:5: warning: use location
   if(__RANDBOOL)
     ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:5: warning: use location
Cond in fucntion update_krl_from_file basic block 25
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 26
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f985df92948
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _5 = rand ();
    version 5>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92948
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _5 = rand ();
    version 5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:5: warning: use location
   if(__RANDBOOL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dae23f0
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _95 = rand ();
    version 95>
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _95 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_96 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:5: warning: use location
   if(__RANDBOOL)
     ^
if (_96 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:5: warning: use location
Cond in fucntion update_krl_from_file basic block 29
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 31
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f985dae23f0
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _95 = rand ();
    version 95>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dae23f0
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _95 = rand ();
    version 95>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_96 = _95 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_96 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:5: warning: use location
   if(__RANDBOOL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dae2480
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _97 = rand ();
    version 97>
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_98 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:8: warning: use location
  while (__RANDBOOL) {
        ^
if (_98 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:8: warning: use location
Cond in fucntion update_krl_from_file basic block 30
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 29
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f985dae2480
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _97 = rand ();
    version 97>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dae2480
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _97 = rand ();
    version 97>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_98 = _97 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_98 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:8: warning: use location
  while (__RANDBOOL) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
path_9 = PHI <path_26(20), path_19(21)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
  if (strcmp(path, "-") != 0)
     ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
Cond in fucntion update_krl_from_file basic block 32
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 33
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
  if (strcmp(path, "-") != 0)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:update_krl_from_file========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:update_krl_from_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_krl_from_file  function_call count: 12 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:update_krl_from_file========= [0m
[40;42m =======start_check_funciton:update_krl_from_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_39>
return;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_58 = strdup (file_17(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:11: warning: use location
   return (xstrdup(filename));  /* allocation site */
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_121 = _76;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
path_19 = _121;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:7: warning: use location
  path = tilde_expand_filename(file, pw->pw_uid);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
_57 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:6: warning: use location
  if (*filename != '~')
      ^
if (_57 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
  if (*filename != '~')
     ^
if (_57 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filename_59 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:10: warning: use location
  filename++;
          ^
memcpy (&user, filename_59, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: use location
   memcpy(user, filename, slash);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_60 = strchr (filename_59, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:7: warning: use location
  path = strchr(filename, '/');
       ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
if (path_60 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
  if (path != NULL)
     ^
if (path_60 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_64 = (long int) path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^
_66 = _64 - _65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
slash_67 = (u_int) _66;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:9: warning: use location
   slash = path - filename;
         ^
user[slash_67] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:15: warning: use location
   user[slash] = '\0';
               ^
if (slash_67 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
   if (slash > sizeof(user) - 1)
      ^
if (slash_67 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
Cond in fucntion update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_62 = filename_59 < path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:27: warning: use location
  if (path != NULL && path > filename) {  /* ~user/path */
                           ^
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^
_65 = (long int) filename_59;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dad6e10
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _58 = strdup (file_17(D));
    version 58
    ptr-info 0x7f985dad5408>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);
bb index := 18
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_115 = VDEF <.MEM_102>
_75 = strdup (&ret);
bb index := 18
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 5

======================================================================
_75 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10: warning: use location
  return (xstrdup(ret));    /* allocation site */
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_121 = _76;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
path_19 = _121;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:7: warning: use location
  path = tilde_expand_filename(file, pw->pw_uid);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dade1f8
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _75 = strdup (&ret);
    version 75
    ptr-info 0x7f985dad5480>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
path_26 = strdup ("(standard input)");
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
path_26 = strdup ("(standard input)");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:8: warning: use location
   path = xstrdup("(standard input)");
        ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
  if (strcmp(path, "-") != 0)
     ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
Cond in fucntion update_krl_from_file basic block 32
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 33
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92c60
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_26 = strdup ("(standard input)");
    version 26
    ptr-info 0x7f985dad53f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_41(D)>
_58 = strdup (file_17(D));
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_58 = strdup (file_17(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:11: warning: use location
   return (xstrdup(filename));  /* allocation site */
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_76 = PHI <_58(3), _75(18)>
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _76;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_121 = _76;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_19 = _121;
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
path_19 = _121;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:7: warning: use location
  path = tilde_expand_filename(file, pw->pw_uid);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
_57 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:6: warning: use location
  if (*filename != '~')
      ^
if (_57 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
  if (*filename != '~')
     ^
if (_57 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:5: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filename_59 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:10: warning: use location
  filename++;
          ^
memcpy (&user, filename_59, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: use location
   memcpy(user, filename, slash);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_60 = strchr (filename_59, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:7: warning: use location
  path = strchr(filename, '/');
       ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
if (path_60 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
  if (path != NULL)
     ^
if (path_60 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_64 = (long int) path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^
_66 = _64 - _65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
slash_67 = (u_int) _66;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:9: warning: use location
   slash = path - filename;
         ^
user[slash_67] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:15: warning: use location
   user[slash] = '\0';
               ^
if (slash_67 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
   if (slash > sizeof(user) - 1)
      ^
if (slash_67 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
Cond in fucntion update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_62 = filename_59 < path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:27: warning: use location
  if (path != NULL && path > filename) {  /* ~user/path */
                           ^
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^
_65 = (long int) filename_59;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92b40
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f985dac3280 file>
    def_stmt GIMPLE_NOP
    version 17
    ptr-info 0x7f985dad5390>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_76 = PHI <_58(3), _75(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
filename_59 = file_17(D) + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
memcpy (&user, filename_59, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:3: warning: use location
   memcpy(user, filename, slash);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
path_60 = strchr (filename_59, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:7: warning: use location
  path = strchr(filename, '/');
       ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
if (path_60 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
  if (path != NULL)
     ^
if (path_60 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:5: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_64 = (long int) path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^
_66 = _64 - _65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
slash_67 = (u_int) _66;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:9: warning: use location
   slash = path - filename;
         ^
user[slash_67] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:15: warning: use location
   user[slash] = '\0';
               ^
if (slash_67 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
   if (slash > sizeof(user) - 1)
      ^
if (slash_67 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:6: warning: use location
Cond in fucntion update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_62 = filename_59 < path_60;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:27: warning: use location
  if (path != NULL && path > filename) {  /* ~user/path */
                           ^
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^
_65 = (long int) filename_59;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:16: warning: use location
   slash = path - filename;
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dad6e58
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_59 = file_17(D) + 1;
    version 59
    ptr-info 0x7f985dad5420>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
filename_72 = PHI <filename_59(8), filename_71(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f985df8af90 type <integer_type 0x7f985df9e5e8 int> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7f985dadd140
    type <pointer_type 0x7f985dac2498
        type <array_type 0x7f985dac1f18 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dab74f8 constant 1024>
            unit size <integer_cst 0x7f985dab72a0 constant 128>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac1e70>
            pointer_to_this <pointer_type 0x7f985dac2498>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dad3c60 user type <array_type 0x7f985dac1f18>
        addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 7 size <integer_cst 0x7f985dab74f8 1024> unit size <integer_cst 0x7f985dab72a0 128>
        align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad3630 user>
        chain <var_decl 0x7f985dad3cf0 ret type <array_type 0x7f985dac1dc8>
            addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 18
            size <integer_cst 0x7f985dfa6030 constant 512>
            unit size <integer_cst 0x7f985e043c18 constant 64>
            align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad35a0 ret> chain <var_decl 0x7f985dad3d80 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
filename_72 = PHI <filename_59(8), filename_71(9)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_77 = strlen (filename_72);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:18: warning: use location
     const size_t srclen = strlen(src);
                  ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_77 < _81)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
     if (srclen < maxlen-dstlen) {
        ^
if (srclen_77 < _81)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_89 = srclen_77 + dstlen_79;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
     return dstlen + srclen;
                   ^
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location
this stmt have mutiple branch --------
_114 = _90;
lto1: warning: use location
_73 = _114;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      ^
if (_73 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
  if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
     ^
if (_73 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:5: warning: use location
Cond in fucntion update_krl_from_file basic block 16
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 17
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_82 = srclen_77 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
_80 = srclen_77 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
     if (dstlen == maxlen) return maxlen+srclen;
                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dade120
    type <pointer_type 0x7f985dab4a80
        type <integer_type 0x7f985dab49d8 char readonly public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab4a80>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f985dad3ab0 filename>
    def_stmt filename_72 = PHI <filename_59(8), filename_71(9)>
    version 72
    ptr-info 0x7f985dad5468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_90 = PHI <_80(11), _89(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f985dadd500
    type <pointer_type 0x7f985dac25e8
        type <array_type 0x7f985dac1dc8 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dfa6030 constant 512>
            unit size <integer_cst 0x7f985e043c18 constant 64>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac1d20>
            pointer_to_this <pointer_type 0x7f985dac25e8>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dad3cf0 ret type <array_type 0x7f985dac1dc8>
        addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 18 size <integer_cst 0x7f985dfa6030 512> unit size <integer_cst 0x7f985e043c18 64>
        align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad35a0 ret>
        chain <var_decl 0x7f985dad3d80 slash type <integer_type 0x7f985dac1c78 u_int>
            used unsigned SI file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 42 col 13
            size <integer_cst 0x7f985df8ae28 constant 32>
            unit size <integer_cst 0x7f985df8ae40 constant 4>
            align 32 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad3510 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>
_83 = &ret + dstlen_79;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_110>
memcpy (_83, filename_72, _82);
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
         memcpy(dst+dstlen, src, srclen+1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_113 = VDEF <.MEM_110>
memcpy (_83, filename_72, _82);
memcpy (_83, filename_72, _82);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dadeb40
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _83 = &ret + dstlen_79;
    version 83
    ptr-info 0x7f985dad54b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>
_85 = &ret + dstlen_79;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_111 = VDEF <.MEM_110>
memcpy (_85, filename_72, _84);
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
         memcpy(dst+dstlen, src, maxlen-1);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_111 = VDEF <.MEM_110>
memcpy (_85, filename_72, _84);
memcpy (_85, filename_72, _84);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dadebd0
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
   
    def_stmt _85 = &ret + dstlen_79;
    version 85
    ptr-info 0x7f985dad54c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f985dadd340
    type <pointer_type 0x7f985dac25e8
        type <array_type 0x7f985dac1dc8 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dfa6030 constant 512>
            unit size <integer_cst 0x7f985e043c18 constant 64>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac1d20>
            pointer_to_this <pointer_type 0x7f985dac25e8>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dad3cf0 ret type <array_type 0x7f985dac1dc8>
        addressable used BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 40 col 18 size <integer_cst 0x7f985dfa6030 512> unit size <integer_cst 0x7f985e043c18 64>
        align 128 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad35a0 ret>
        chain <var_decl 0x7f985dad3d80 slash type <integer_type 0x7f985dac1c78 u_int>
            used unsigned SI file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 42 col 13
            size <integer_cst 0x7f985df8ae28 constant 32>
            unit size <integer_cst 0x7f985df8ae40 constant 4>
            align 32 context <function_decl 0x7f985dab5c00 update_krl_from_file> abstract_origin <var_decl 0x7f985dad3510 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
path_19 = _121;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);
bb index := 22
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================
_34 = __printf_chk (1, "fopen %s: \n", path_19);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 21
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 5

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
Cond in fucntion update_krl_from_file basic block 21
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 22
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
bb index := 20
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 5

======================================================================
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_120>
_3 = strcmp (path_19, "-");
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 19
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 5

======================================================================
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:5: warning: use location
Cond in fucntion update_krl_from_file basic block 19
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 20
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_26(20), path_19(21)>
bb index := 23
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92b88
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_19 = _121;
    version 19
    ptr-info 0x7f985dad53a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_45 = VDEF <.MEM_44>
_34 = __printf_chk (1, "fopen %s: \n", path_19);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_44 = VDEF <.MEM_120>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:12: warning: use location
  } else if ((krl_spec = fopen(path, "r")) == NULL)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
path_9 = PHI <path_26(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f985daa8a60
    type <pointer_type 0x7f985dac0e70
        type <array_type 0x7f985dac0dc8 type <integer_type 0x7f985dab4738 char>
            BLK
            size <integer_cst 0x7f985dab7420 constant 136>
            unit size <integer_cst 0x7f985dab7390 constant 17>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f985dac0d20>
            pointer_to_this <pointer_type 0x7f985dac0e70>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f985dace820 type <array_type 0x7f985dac0dc8>
        readonly constant static "(standard input)\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92948
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _5 = rand ();
    version 5>
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:5: warning: use location
   if(__RANDBOOL)
     ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:5: warning: use location
Cond in fucntion update_krl_from_file basic block 25
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 26
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
bb index := 25
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f985df92948
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _5 = rand ();
    version 5>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92948
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _5 = rand ();
    version 5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:5: warning: use location
   if(__RANDBOOL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_54 = VDEF <.MEM_105>
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dae23f0
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _95 = rand ();
    version 95>
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_96 = _95 % 2;
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _95 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_96 == 1)
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_96 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:5: warning: use location
   if(__RANDBOOL)
     ^
if (_96 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:5: warning: use location
Cond in fucntion update_krl_from_file basic block 29
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 31
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f985dae23f0
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _95 = rand ();
    version 95>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dae23f0
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _95 = rand ();
    version 95>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_96 = _95 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_96 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:5: warning: use location
   if(__RANDBOOL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_125 = VDEF <.MEM_124>
_95 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:6: warning: use location
   if(__RANDBOOL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985dae2480
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _97 = rand ();
    version 97>
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_98 = _97 % 2;
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = _97 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_98 == 1)
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_98 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:8: warning: use location
  while (__RANDBOOL) {
        ^
if (_98 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:8: warning: use location
Cond in fucntion update_krl_from_file basic block 30
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 29
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
bb index := 30
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f985dae2480
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _97 = rand ();
    version 97>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985dae2480
    type <integer_type 0x7f985df9e5e8 int public SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e5e8 precision 32 min <integer_cst 0x7f985df8ade0 -2147483648> max <integer_cst 0x7f985df8adf8 2147483647>
        pointer_to_this <pointer_type 0x7f985dfa5a80>>
   
    def_stmt _97 = rand ();
    version 97>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
_98 = _97 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_98 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:8: warning: use location
  while (__RANDBOOL) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_122 = VDEF <.MEM_104>
_97 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:9: warning: use location
  while (__RANDBOOL) {
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
path_9 = PHI <path_26(20), path_19(21)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 32
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 34

======================================================================
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
  if (strcmp(path, "-") != 0)
     ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
Cond in fucntion update_krl_from_file basic block 32
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 33
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
bb index := 29
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);
bb index := 26
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 34

======================================================================
_36 = __printf_chk (1, "%s: invalid\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
bb index := 24
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 34

======================================================================
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92a68
    type <pointer_type 0x7f985dab47e0
        type <integer_type 0x7f985dab4738 char public string-flag QI
            size <integer_cst 0x7f985df8acd8 constant 8>
            unit size <integer_cst 0x7f985df8acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f985df9e3f0 precision 8 min <integer_cst 0x7f985dab7180 -128> max <integer_cst 0x7f985dab7168 127>
            pointer_to_this <pointer_type 0x7f985dab47e0>>
        unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f985dab4888>>
    var <var_decl 0x7f985ed1fe10 path>
    def_stmt path_9 = PHI <path_26(20), path_19(21)>
    version 9
    ptr-info 0x7f985dad5348>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# VUSE <.MEM_105>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:6: warning: use location
  if (strcmp(path, "-") != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:5: warning: use location
  if (strcmp(path, "-") != 0)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_124 = VDEF <.MEM_122>
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_55 = VDEF <.MEM_54>
_36 = __printf_chk (1, "%s: invalid\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_49 = VDEF <.MEM_37>
_35 = __printf_chk (1, "Revoking from %s\n", path_9);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
 }
 ^
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
bb index := 33
# VUSE <.MEM_39>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 34 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 34

======================================================================
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df92ab0
    type <pointer_type 0x7f985dabc498
        type <record_type 0x7f985dabc3f0 FILE BLK
            size <integer_cst 0x7f985dab71e0 constant 1728>
            unit size <integer_cst 0x7f985dab7300 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dabc2a0 fields <field_decl 0x7f985dabde40 _flags> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dabc498> chain <type_decl 0x7f985dabded8 D.4036>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f985dac0b28>>
    var <var_decl 0x7f985ed1fcf0 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
    version 10
    ptr-info 0x7f985dad5360>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: use location
   free(path);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_120>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:3: warning: Use after free error!: free location 
   free(path);
   ^
# .MEM_51 = VDEF <.MEM_105>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:3: warning: use location
   fclose(krl_spec);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:update_krl_from_file========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f985dfa6000 type <pointer_type 0x7f985dfa50a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f985df926c0
    type <integer_type 0x7f985df9e690 unsigned int public unsigned SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e690 precision 32 min <integer_cst 0x7f985df8ae58 0> max <integer_cst 0x7f985df8ae10 4294967295>
        pointer_to_this <pointer_type 0x7f985dfaa888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
bb index := 2
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f985df926c0
    type <integer_type 0x7f985df9e690 unsigned int public unsigned SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e690 precision 32 min <integer_cst 0x7f985df8ae58 0> max <integer_cst 0x7f985df8ae10 4294967295>
        pointer_to_this <pointer_type 0x7f985dfaa888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
bb index := 2
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:2: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f985df926c0
    type <integer_type 0x7f985df9e690 unsigned int public unsigned SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e690 precision 32 min <integer_cst 0x7f985df8ae58 0> max <integer_cst 0x7f985df8ae10 4294967295>
        pointer_to_this <pointer_type 0x7f985dfaa888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f985df926c0
    type <integer_type 0x7f985df9e690 unsigned int public unsigned SI
        size <integer_cst 0x7f985df8ae28 constant 32>
        unit size <integer_cst 0x7f985df8ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f985df9e690 precision 32 min <integer_cst 0x7f985df8ae58 0> max <integer_cst 0x7f985df8ae10 4294967295>
        pointer_to_this <pointer_type 0x7f985dfaa888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f985dadda20
    type <pointer_type 0x7f985dab4bd0
        type <record_type 0x7f985dab4b28 passwd BLK
            size <integer_cst 0x7f985e043c30 constant 576>
            unit size <integer_cst 0x7f985dab71c8 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f985dab4b28 fields <field_decl 0x7f985dab6720 pw_name> context <translation_unit_decl 0x7f985df95168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f985dab4bd0> chain <type_decl 0x7f985dab67b8 D.3997>>
        public unsigned DI
        size <integer_cst 0x7f985df8abe8 constant 64>
        unit size <integer_cst 0x7f985df8ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f985dadcd80 pw type <record_type 0x7f985dab4b28 passwd>
        addressable BLK file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 112 col 19 size <integer_cst 0x7f985e043c30 576> unit size <integer_cst 0x7f985dab71c8 72>
        align 128 context <function_decl 0x7f985dab5b00 main>
        chain <var_decl 0x7f985dadccf0 i type <integer_type 0x7f985df9e5e8 int>
            SI file ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c line 114 col 6
            size <integer_cst 0x7f985df8ae28 constant 32>
            unit size <integer_cst 0x7f985df8ae40 constant 4>
            align 32 context <function_decl 0x7f985dab5b00 main> chain <function_decl 0x7f985dae6000 time>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:update_krl_from_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [1.09%]:
lnum_130 = 0;
_1 = pw_16(D)->pw_uid;
_2 = (unsigned int) _1;
_57 = *file_17(D);
if (_57 != 126)
  goto <bb 3>; [44.89%]
else
  goto <bb 4>; [55.11%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.49%]:
_58 = strdup (file_17(D));
goto <bb 19>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [0.60%]:
filename_59 = file_17(D) + 1;
path_60 = strchr (filename_59, 47);
_61 = path_60 != 0B;
_62 = filename_59 < path_60;
_63 = _61 & _62;
if (_63 != 0)
  goto <bb 5>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.30%]:
_64 = (long int) path_60;
_65 = (long int) filename_59;
_66 = _64 - _65;
slash_67 = (u_int) _66;
if (slash_67 > 127)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [0.00%]:
_68 = __printf_chk (1, "tilde_expand_filename: ~username too long%s\n", "");
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [0.30%]:
_69 = _66 & 4294967295;
_70 = (long unsigned int) _69;
memcpy (&user, filename_59, _70);
user[slash_67] = 0;

=======is loop:0=========

 bb index 8 
<bb 8> [0.60%]:
if (path_60 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [0.42%]:
filename_71 = path_60 + 1;

=======is loop:0=========

 bb index 10 
<bb 10> [0.60%]:
# filename_72 = PHI <filename_59(8), filename_71(9)>
srclen_77 = strlen (filename_72);
_78 = strnlen (&ret, 64);
dstlen_79 = (const size_t) _78;
if (dstlen_79 == 64)
  goto <bb 11>; [30.50%]
else
  goto <bb 12>; [69.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [0.18%]:
_80 = srclen_77 + 64;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [0.42%]:
_81 = 64 - dstlen_79;
if (srclen_77 < _81)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [0.21%]:
_82 = srclen_77 + 1;
_83 = &ret + dstlen_79;
memcpy (_83, filename_72, _82);
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [0.21%]:
_84 = 63;
_85 = &ret + dstlen_79;
memcpy (_85, filename_72, _84);
_86 = dstlen_79 + 64;
_87 = _86 + 18446744073709551615;
_88 = &ret + _87;
*_88 = 0;

=======is loop:0=========

 bb index 15 
<bb 15> [0.42%]:
_89 = srclen_77 + dstlen_79;

=======is loop:0=========

 bb index 16 
<bb 16> [0.60%]:
# _90 = PHI <_80(11), _89(15)>
_114 = _90;
_73 = _114;
if (_73 > 63)
  goto <bb 17>; [0.04%]
else
  goto <bb 18>; [99.96%]

=======is loop:0=========

 bb index 17 
<bb 17> [0.00%]:
_74 = __printf_chk (1, "tilde_expand_filename: Path too long%s\n", "");
exit (1);

=======is loop:0=========

 bb index 18 
<bb 18> [0.60%]:
_75 = strdup (&ret);

=======is loop:0=========

 bb index 19 
<bb 19> [1.09%]:
# _76 = PHI <_58(3), _75(18)>
user ={v} {CLOBBER};
ret ={v} {CLOBBER};
_121 = _76;
path_19 = _121;
_3 = strcmp (path_19, "-");
if (_3 == 0)
  goto <bb 20>; [50.00%]
else
  goto <bb 21>; [50.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [0.54%]:
krl_spec_23 = stdin;
free (path_19);
path_26 = strdup ("(standard input)");
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [0.54%]:
krl_spec_21 = fopen (path_19, "r");
if (krl_spec_21 == 0B)
  goto <bb 22>; [0.04%]
else
  goto <bb 23>; [99.96%]

=======is loop:0=========

 bb index 22 
<bb 22> [0.00%]:
_34 = __printf_chk (1, "fopen %s: \n", path_19);
exit (1);

=======is loop:0=========

 bb index 23 
<bb 23> [1.09%]:
# path_9 = PHI <path_26(20), path_19(21)>
# krl_spec_10 = PHI <krl_spec_23(20), krl_spec_21(21)>
_4 = quiet;
if (_4 == 0)
  goto <bb 24>; [33.00%]
else
  goto <bb 27>; [67.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [0.36%]:
_35 = __printf_chk (1, "Revoking from %s\n", path_9);
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [13.35%]:
_5 = rand ();
_6 = _5 % 2;
if (_6 == 1)
  goto <bb 26>; [0.04%]
else
  goto <bb 28>; [99.96%]

=======is loop:0=========

 bb index 26 
<bb 26> [0.01%]:
_36 = __printf_chk (1, "%s: invalid\n", path_9);
exit (1);

=======is loop:0=========

 bb index 27 
<bb 27> [1.09%]:

=======is loop:1=========

 bb index 28 
<bb 28> [14.44%]:
# lnum_127 = PHI <lnum_129(25), lnum_130(27)>
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [92.50%]:
_91 = lnum_128;
_92 = _91 + 1;
lnum_131 = _92;
_93 = lnum_131;
_94 = __printf_chk (1, "%s: %s line %lu exceeds size limit\n", &__func__, path_9, _93);
_95 = rand ();
_96 = _95 % 2;
if (_96 == 1)
  goto <bb 31>; [7.50%]
else
  goto <bb 30>; [92.50%]

=======is loop:1=========

 bb index 30 
<bb 30> [100.00%]:
# lnum_128 = PHI <lnum_127(28), lnum_131(29)>
_97 = rand ();
_98 = _97 % 2;
if (_98 == 1)
  goto <bb 29>; [92.50%]
else
  goto <bb 31>; [7.50%]

=======is loop:1=========

 bb index 31 
<bb 31> [14.44%]:
# _99 = PHI <0(29), -1(30)>
# lnum_129 = PHI <lnum_131(29), lnum_128(30)>
_126 = _99;
_7 = _126;
if (_7 == 0)
  goto <bb 25>; [92.50%]
else
  goto <bb 32>; [7.50%]

=======is loop:0=========

 bb index 32 
<bb 32> [1.08%]:
_8 = strcmp (path_9, "-");
if (_8 != 0)
  goto <bb 33>; [36.64%]
else
  goto <bb 34>; [63.36%]

=======is loop:0=========

 bb index 33 
<bb 33> [0.40%]:
fclose (krl_spec_10);

=======is loop:0=========

 bb index 34 
<bb 34> [1.08%]:
return;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
_3 = (long unsigned int) i_7;
_4 = _3 * 8;
_5 = argv_14(D) + _4;
_6 = *_5;
update_krl_from_file (&pw, _6);
i_16 = i_7 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [100.00%]:
# i_7 = PHI <0(2), i_16(3)>
if (i_7 < argc_12(D))
  goto <bb 3>; [85.00%]
else
  goto <bb 5>; [15.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [15.00%]:
pw ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 15 [0m
[40;34m    used_stmt array stack totalsize of : 4640 [0m
[40;34m    collect time: : 0.000218 s [0m
[40;34m    algorithm time: 0.091073 s [0m
[40;34m    gimple stmt count : : 100 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
