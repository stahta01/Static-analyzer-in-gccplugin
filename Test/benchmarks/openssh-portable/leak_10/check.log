In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:104: warning: "ENOMSG" redefined
  104 | #define ENOMSG 35       /* No message of desired type */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:23: note: this is the location of the previous definition
   23 | #define ENOMSG          42      /* No message of desired type */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:105: warning: "EIDRM" redefined
  105 | #define EIDRM 36        /* Identifier removed */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:24: note: this is the location of the previous definition
   24 | #define EIDRM           43      /* Identifier removed */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:106: warning: "ECHRNG" redefined
  106 | #define ECHRNG 37       /* Channel number out of range */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:25: note: this is the location of the previous definition
   25 | #define ECHRNG          44      /* Channel number out of range */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:107: warning: "EL2NSYNC" redefined
  107 | #define EL2NSYNC 38     /* Level 2 not synchronized */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:26: note: this is the location of the previous definition
   26 | #define EL2NSYNC        45      /* Level 2 not synchronized */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:108: warning: "EL3HLT" redefined
  108 | #define EL3HLT 39       /* Level 3 halted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:27: note: this is the location of the previous definition
   27 | #define EL3HLT          46      /* Level 3 halted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:109: warning: "EL3RST" redefined
  109 | #define EL3RST 40       /* Level 3 reset */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:28: note: this is the location of the previous definition
   28 | #define EL3RST          47      /* Level 3 reset */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:110: warning: "ELNRNG" redefined
  110 | #define ELNRNG 41       /* Link number out of range */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:29: note: this is the location of the previous definition
   29 | #define ELNRNG          48      /* Link number out of range */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:111: warning: "EUNATCH" redefined
  111 | #define EUNATCH 42      /* Protocol driver not attached */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:30: note: this is the location of the previous definition
   30 | #define EUNATCH         49      /* Protocol driver not attached */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:112: warning: "ENOCSI" redefined
  112 | #define ENOCSI 43       /* No CSI structure available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:31: note: this is the location of the previous definition
   31 | #define ENOCSI          50      /* No CSI structure available */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:113: warning: "EL2HLT" redefined
  113 | #define EL2HLT 44       /* Level 2 halted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:32: note: this is the location of the previous definition
   32 | #define EL2HLT          51      /* Level 2 halted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:114: warning: "EDEADLK" redefined
  114 | #define EDEADLK 45      /* Deadlock condition */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:7: note: this is the location of the previous definition
    7 | #define EDEADLK         35      /* Resource deadlock would occur */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:115: warning: "ENOLCK" redefined
  115 | #define ENOLCK 46       /* No record locks available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:9: note: this is the location of the previous definition
    9 | #define ENOLCK          37      /* No record locks available */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:116: warning: "EBADE" redefined
  116 | #define EBADE 50        /* Invalid exchange */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:33: note: this is the location of the previous definition
   33 | #define EBADE           52      /* Invalid exchange */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:117: warning: "EBADR" redefined
  117 | #define EBADR 51        /* Invalid request descriptor */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:34: note: this is the location of the previous definition
   34 | #define EBADR           53      /* Invalid request descriptor */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:118: warning: "EXFULL" redefined
  118 | #define EXFULL 52       /* Exchange full */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:35: note: this is the location of the previous definition
   35 | #define EXFULL          54      /* Exchange full */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:119: warning: "ENOANO" redefined
  119 | #define ENOANO 53       /* No anode */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:36: note: this is the location of the previous definition
   36 | #define ENOANO          55      /* No anode */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:120: warning: "EBADRQC" redefined
  120 | #define EBADRQC 54      /* Invalid request code */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:37: note: this is the location of the previous definition
   37 | #define EBADRQC         56      /* Invalid request code */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:121: warning: "EBADSLT" redefined
  121 | #define EBADSLT 55      /* Invalid slot */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:38: note: this is the location of the previous definition
   38 | #define EBADSLT         57      /* Invalid slot */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:122: warning: "EDEADLOCK" redefined
  122 | #define EDEADLOCK 56    /* File locking deadlock error */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:40: note: this is the location of the previous definition
   40 | #define EDEADLOCK       EDEADLK
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:123: warning: "EBFONT" redefined
  123 | #define EBFONT 57       /* Bad font file fmt */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:42: note: this is the location of the previous definition
   42 | #define EBFONT          59      /* Bad font file format */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:136: warning: "EMULTIHOP" redefined
  136 | #define EMULTIHOP 74    /* Multihop attempted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:55: note: this is the location of the previous definition
   55 | #define EMULTIHOP       72      /* Multihop attempted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:138: warning: "EDOTDOT" redefined
  138 | #define EDOTDOT 76      /* Cross mount point (not really error) */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:56: note: this is the location of the previous definition
   56 | #define EDOTDOT         73      /* RFS specific error */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:139: warning: "EBADMSG" redefined
  139 | #define EBADMSG 77      /* Trying to read unreadable message */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:57: note: this is the location of the previous definition
   57 | #define EBADMSG         74      /* Not a data message */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:141: warning: "ENOTUNIQ" redefined
  141 | #define ENOTUNIQ 80     /* Given log. name not unique */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:59: note: this is the location of the previous definition
   59 | #define ENOTUNIQ        76      /* Name not unique on network */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:142: warning: "EBADFD" redefined
  142 | #define EBADFD 81       /* f.d. invalid for this operation */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:60: note: this is the location of the previous definition
   60 | #define EBADFD          77      /* File descriptor in bad state */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:143: warning: "EREMCHG" redefined
  143 | #define EREMCHG 82      /* Remote address changed */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:61: note: this is the location of the previous definition
   61 | #define EREMCHG         78      /* Remote address changed */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:144: warning: "ELIBACC" redefined
  144 | #define ELIBACC 83      /* Can't access a needed shared lib */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:62: note: this is the location of the previous definition
   62 | #define ELIBACC         79      /* Can not access a needed shared library */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:145: warning: "ELIBBAD" redefined
  145 | #define ELIBBAD 84      /* Accessing a corrupted shared lib */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:63: note: this is the location of the previous definition
   63 | #define ELIBBAD         80      /* Accessing a corrupted shared library */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:146: warning: "ELIBSCN" redefined
  146 | #define ELIBSCN 85      /* .lib section in a.out corrupted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:64: note: this is the location of the previous definition
   64 | #define ELIBSCN         81      /* .lib section in a.out corrupted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:147: warning: "ELIBMAX" redefined
  147 | #define ELIBMAX 86      /* Attempting to link in too many libs */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:65: note: this is the location of the previous definition
   65 | #define ELIBMAX         82      /* Attempting to link in too many shared libraries */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:148: warning: "ELIBEXEC" redefined
  148 | #define ELIBEXEC 87     /* Attempting to exec a shared library */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:66: note: this is the location of the previous definition
   66 | #define ELIBEXEC        83      /* Cannot exec a shared library directly */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:149: warning: "ENOSYS" redefined
  149 | #define ENOSYS 88       /* Function not implemented */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:18: note: this is the location of the previous definition
   18 | #define ENOSYS          38      /* Invalid system call number */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:151: warning: "ENOTEMPTY" redefined
  151 | #define ENOTEMPTY 90    /* Directory not empty */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:20: note: this is the location of the previous definition
   20 | #define ENOTEMPTY       39      /* Directory not empty */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:152: warning: "ENAMETOOLONG" redefined
  152 | #define ENAMETOOLONG 91 /* File or path name too long */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:8: note: this is the location of the previous definition
    8 | #define ENAMETOOLONG    36      /* File name too long */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:153: warning: "ELOOP" redefined
  153 | #define ELOOP 92        /* Too many symbolic links */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:21: note: this is the location of the previous definition
   21 | #define ELOOP           40      /* Too many symbolic links encountered */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:158: warning: "EAFNOSUPPORT" redefined
  158 | #define EAFNOSUPPORT 106 /* Address family not supported by protocol family */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:80: note: this is the location of the previous definition
   80 | #define EAFNOSUPPORT    97      /* Address family not supported by protocol */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:159: warning: "EPROTOTYPE" redefined
  159 | #define EPROTOTYPE 107  /* Protocol wrong type for socket */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:74: note: this is the location of the previous definition
   74 | #define EPROTOTYPE      91      /* Protocol wrong type for socket */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:160: warning: "ENOTSOCK" redefined
  160 | #define ENOTSOCK 108    /* Socket operation on non-socket */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:71: note: this is the location of the previous definition
   71 | #define ENOTSOCK        88      /* Socket operation on non-socket */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:161: warning: "ENOPROTOOPT" redefined
  161 | #define ENOPROTOOPT 109 /* Protocol not available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:75: note: this is the location of the previous definition
   75 | #define ENOPROTOOPT     92      /* Protocol not available */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:162: warning: "ESHUTDOWN" redefined
  162 | #define ESHUTDOWN 110   /* Can't send after socket shutdown */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:91: note: this is the location of the previous definition
   91 | #define ESHUTDOWN       108     /* Cannot send after transport endpoint shutdown */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:164: warning: "EADDRINUSE" redefined
  164 | #define EADDRINUSE 112          /* Address already in use */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:81: note: this is the location of the previous definition
   81 | #define EADDRINUSE      98      /* Address already in use */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:165: warning: "ECONNABORTED" redefined
  165 | #define ECONNABORTED 113        /* Connection aborted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:86: note: this is the location of the previous definition
   86 | #define ECONNABORTED    103     /* Software caused connection abort */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:166: warning: "ENETUNREACH" redefined
  166 | #define ENETUNREACH 114         /* Network is unreachable */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:84: note: this is the location of the previous definition
   84 | #define ENETUNREACH     101     /* Network is unreachable */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:167: warning: "ENETDOWN" redefined
  167 | #define ENETDOWN 115            /* Network interface is not configured */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:83: note: this is the location of the previous definition
   83 | #define ENETDOWN        100     /* Network is down */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:168: warning: "ETIMEDOUT" redefined
  168 | #define ETIMEDOUT 116           /* Connection timed out */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:93: note: this is the location of the previous definition
   93 | #define ETIMEDOUT       110     /* Connection timed out */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:169: warning: "EHOSTDOWN" redefined
  169 | #define EHOSTDOWN 117           /* Host is down */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:95: note: this is the location of the previous definition
   95 | #define EHOSTDOWN       112     /* Host is down */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:170: warning: "EHOSTUNREACH" redefined
  170 | #define EHOSTUNREACH 118        /* Host is unreachable */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:96: note: this is the location of the previous definition
   96 | #define EHOSTUNREACH    113     /* No route to host */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:171: warning: "EINPROGRESS" redefined
  171 | #define EINPROGRESS 119         /* Connection already in progress */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:98: note: this is the location of the previous definition
   98 | #define EINPROGRESS     115     /* Operation now in progress */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:172: warning: "EALREADY" redefined
  172 | #define EALREADY 120            /* Socket already connected */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:97: note: this is the location of the previous definition
   97 | #define EALREADY        114     /* Operation already in progress */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:173: warning: "EDESTADDRREQ" redefined
  173 | #define EDESTADDRREQ 121        /* Destination address required */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:72: note: this is the location of the previous definition
   72 | #define EDESTADDRREQ    89      /* Destination address required */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:174: warning: "EMSGSIZE" redefined
  174 | #define EMSGSIZE 122            /* Message too long */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:73: note: this is the location of the previous definition
   73 | #define EMSGSIZE        90      /* Message too long */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:175: warning: "EPROTONOSUPPORT" redefined
  175 | #define EPROTONOSUPPORT 123     /* Unknown protocol */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:76: note: this is the location of the previous definition
   76 | #define EPROTONOSUPPORT 93      /* Protocol not supported */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:176: warning: "ESOCKTNOSUPPORT" redefined
  176 | #define ESOCKTNOSUPPORT 124     /* Socket type not supported */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:77: note: this is the location of the previous definition
   77 | #define ESOCKTNOSUPPORT 94      /* Socket type not supported */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:177: warning: "EADDRNOTAVAIL" redefined
  177 | #define EADDRNOTAVAIL 125       /* Address not available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:82: note: this is the location of the previous definition
   82 | #define EADDRNOTAVAIL   99      /* Cannot assign requested address */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:178: warning: "ENETRESET" redefined
  178 | #define ENETRESET 126
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:85: note: this is the location of the previous definition
   85 | #define ENETRESET       102     /* Network dropped connection because of reset */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:179: warning: "EISCONN" redefined
  179 | #define EISCONN 127             /* Socket is already connected */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:89: note: this is the location of the previous definition
   89 | #define EISCONN         106     /* Transport endpoint is already connected */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:180: warning: "ENOTCONN" redefined
  180 | #define ENOTCONN 128            /* Socket is not connected */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:90: note: this is the location of the previous definition
   90 | #define ENOTCONN        107     /* Transport endpoint is not connected */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:181: warning: "ETOOMANYREFS" redefined
  181 | #define ETOOMANYREFS 129
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:92: note: this is the location of the previous definition
   92 | #define ETOOMANYREFS    109     /* Too many references: cannot splice */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:183: warning: "EUSERS" redefined
  183 | #define EUSERS 131
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:70: note: this is the location of the previous definition
   70 | #define EUSERS          87      /* Too many users */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:184: warning: "EDQUOT" redefined
  184 | #define EDQUOT 132
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:105: note: this is the location of the previous definition
  105 | #define EDQUOT          122     /* Quota exceeded */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:185: warning: "ESTALE" redefined
  185 | #define ESTALE 133
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:99: note: this is the location of the previous definition
   99 | #define ESTALE          116     /* Stale file handle */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:186: warning: "ENOTSUP" redefined
  186 | #define ENOTSUP 134             /* Not supported */
      | 
In file included from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/x86_64-linux-gnu/bits/errno.h:30: note: this is the location of the previous definition
   30 | #  define ENOTSUP               EOPNOTSUPP
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:187: warning: "ENOMEDIUM" redefined
  187 | #define ENOMEDIUM 135   /* No medium (in tape drive) */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:107: note: this is the location of the previous definition
  107 | #define ENOMEDIUM       123     /* No medium found */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:190: warning: "EILSEQ" redefined
  190 | #define EILSEQ 138
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:67: note: this is the location of the previous definition
   67 | #define EILSEQ          84      /* Illegal byte sequence */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:191: warning: "EOVERFLOW" redefined
  191 | #define EOVERFLOW 139   /* Value too large for defined data type */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:58: note: this is the location of the previous definition
   58 | #define EOVERFLOW       75      /* Value too large for defined data type */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:10:
./benchmarks/openssh-portable/leak_10/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   20 |     const size_t srclen = strlen(src);
      |                           ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../openssh.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
   20 |     const size_t srclen = strlen(src);
      |                           ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: implicit declaration of function ‘strnlen’ [-Wimplicit-function-declaration]
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: incompatible implicit declaration of built-in function ‘strnlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: note: in expansion of macro ‘xstrdup’
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^~~~~~~
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: note: in expansion of macro ‘xstrdup’
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
   48 |         path = strchr(filename, '/');
      |                ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   53 |                 memcpy(user, filename, slash);
      |                 ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: note: in expansion of macro ‘xstrdup’
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   92 |         if (strcmp(path, "-") == 0) {
      |             ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:24: note: in expansion of macro ‘xstrdup’
   95 |                 path = xstrdup("(standard input)");
      |                        ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  115 |         srand(time(NULL));
      |               ^~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                  ------------|      |      |      |      |          |          |
nothrow              ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     +0.3%|          |
ethread                          |      |      |      |      |     +0.3%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 4
=======node_fun:update_krl_from_file=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
succs:= 12
=======node_fun:read_keyfile_line=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 4
=======node_fun:tilde_expand_filename=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 4
succs:= 11
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
succs:= 4
succs:= 10
=======node_fun:strlcat=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
succs:= 4
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = time (0B);
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
# .MEM_22 = VDEF <.MEM_17>
update_krl_from_file (&pw, _6);
# .MEM_34 = VDEF <.MEM_33>
path_19 = tilde_expand_filename (file_17(D), _2);
# VUSE <.MEM_34>
_3 = strcmp (path_19, "-");
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
# .MEM_21 = VDEF <.MEM_20>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, filename_15(D), _3);
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
# .MEM_37 = VDEF <.MEM_34(D)>
printf ("tilde_expand_filename: ~username too long%s\n", "");
# .MEM_35 = VDEF <.MEM_34(D)>
memcpy (&user, filename_14, _6);
# .MEM_36 = VDEF <.MEM_35>
user[slash_16] = 0;
# .MEM_39 = VDEF <.MEM_32>
_7 = strlcat (&ret, filename_8, 64);
# .MEM_41 = VDEF <.MEM_39>
printf ("tilde_expand_filename: Path too long%s\n", "");
# .MEM_40 = VDEF <.MEM_39>
_24 = strdup (&ret);
# VUSE <.MEM_25(D)>
srclen_14 = strlen (src_13(D));
# VUSE <.MEM_25(D)>
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
# .MEM_26 = VDEF <.MEM_25(D)>
memcpy (_5, src_13(D), _4);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:update_krl_from_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_krl_from_file  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:read_keyfile_line========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path read_keyfile_line  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:read_keyfile_line========= [0m
[40;42m =======start_check_funciton:read_keyfile_line========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f85122b0f60
    type <pointer_type 0x7f8511be9bd0
        type <array_type 0x7f8511be9b28 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4a08 constant 288>
            unit-size <integer_cst 0x7f8511bd4a38 constant 36>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be9a80>
            pointer_to_this <pointer_type 0x7f8511be9bd0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f85120c7040 type <array_type 0x7f8511be9b28>
        readonly constant static "%s: %s line %lu exceeds size limit\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bff5a0
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _4 = rand ();
    version:4>
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = _4 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^
if (_5 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
Cond in fucntion read_keyfile_line basic block 3
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 5
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bff5a0
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bff630
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _6 = rand ();
    version:6>
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 == 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^
if (_7 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
Cond in fucntion read_keyfile_line basic block 4
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 3
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bff630
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _6 = rand ();
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:read_keyfile_line========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tilde_expand_filename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path tilde_expand_filename  function_call count: 6 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
srclen_14 = strlen (src_13(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
srclen_14 = strlen (src_13(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = srclen_14 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: use location
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^
this stmt is child function---strnlen-----

 ================== trace ================== 
trace fucntion name:strnlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = maxlen_16(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:19: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                   ^
_7 = _6 + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^
_5 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = maxlen_16(D) - dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:24: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |                        ^
if (_1 > srclen_14)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
if (_1 > srclen_14)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion strlcat basic block 4
 ================== possible direct basic block ================= 
from strlcat basic block 5
 ================== possible direct basic block ================= 
from strlcat basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = maxlen_16(D) + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
_8 = dst_15(D) + _7;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>
_3 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c073f0
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _5 = dst_15(D) + dstlen_17;
    version:5
    ptr-info 0x7f8511bf3ae0>
_5 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:tilde_expand_filename========= [0m
[40;42m =======start_check_funciton:tilde_expand_filename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511bffdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _28 = strdup (filename_13(D));
    version:28
    ptr-info 0x7f8511bf3ab0>
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_14 = filename_13(D) + 1;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
filename_14 = filename_13(D) + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_28 = strdup (filename_13(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
_1 = *filename_13(D);
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = *filename_13(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 126)
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_1 != 126)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
if (_1 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 2
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 3
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _28 = strdup (filename_13(D));
    version:28
    ptr-info 0x7f8511bf3ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffd80
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _24 = strdup (&ret);
    version:24
    ptr-info 0x7f8511bf3a98>
# .MEM_40 = VDEF <.MEM_39>
_24 = strdup (&ret);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_24 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffd80
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _24 = strdup (&ret);
    version:24
    ptr-info 0x7f8511bf3a98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffc18
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3a38>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_14 = filename_13(D) + 1;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
filename_14 = filename_13(D) + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_28 = strdup (filename_13(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
_1 = *filename_13(D);
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = *filename_13(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 126)
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_1 != 126)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
if (_1 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 2
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 3
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffc18
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffc60
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt filename_14 = filename_13(D) + 1;
    version:14
    ptr-info 0x7f8511bf3a50>
filename_14 = filename_13(D) + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffc60
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt filename_14 = filename_13(D) + 1;
    version:14
    ptr-info 0x7f8511bf3a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03080
    type <pointer_type 0x7f8511be9348
        type <array_type 0x7f8511be92a0 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4948 constant 360>
            unit-size <integer_cst 0x7f8511bd49a8 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be91f8>
            pointer_to_this <pointer_type 0x7f8511be9348>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bffe58 type <array_type 0x7f8511be92a0>
        readonly constant static "tilde_expand_filename: ~username too long%s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03100
    type <pointer_type 0x7f8511be9690
        type <array_type 0x7f8511be6e70 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd48e8 constant 1024>
            unit-size <integer_cst 0x7f8511bd4858 constant 128>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6dc8>
            pointer_to_this <pointer_type 0x7f8511be9690>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfad80 user type <array_type 0x7f8511be6e70>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:7 size <integer_cst 0x7f8511bd48e8 1024> unit-size <integer_cst 0x7f8511bd4858 128>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
            addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename> chain <var_decl 0x7f8511bfac60 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03140
    type <pointer_type 0x7f8511be97e0
        type <array_type 0x7f8511be6d20 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6c78>
            pointer_to_this <pointer_type 0x7f8511be97e0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18 size <integer_cst 0x7f85120d2000 512> unit-size <integer_cst 0x7f8512189090 64>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfac60 slash type <integer_type 0x7f8511be6bd0 u_int>
            unsigned SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:42:13
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03180
    type <pointer_type 0x7f8511be99d8
        type <array_type 0x7f8511be9930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd49c0 constant 320>
            unit-size <integer_cst 0x7f8511bd49f0 constant 40>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be9888>
            pointer_to_this <pointer_type 0x7f8511be99d8>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f85120c7080 type <array_type 0x7f8511be9930>
        readonly constant static "tilde_expand_filename: Path too long%s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03200
    type <pointer_type 0x7f8511be97e0
        type <array_type 0x7f8511be6d20 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6c78>
            pointer_to_this <pointer_type 0x7f8511be97e0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18 size <integer_cst 0x7f85120d2000 512> unit-size <integer_cst 0x7f8512189090 64>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfac60 slash type <integer_type 0x7f8511be6bd0 u_int>
            unsigned SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:42:13
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:tilde_expand_filename========= [0m
[40;42m =======pre_check_funciton:update_krl_from_file========= [0m
[40;42m =======start_check_funciton:update_krl_from_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f85120bcea0
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f8511bf39c0>
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
path_27 = strdup ("(standard input)");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:24: warning: use location
   95 |                 path = xstrdup("(standard input)");
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_27(3), path_19(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
if (_8 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcea0
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f8511bf39c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bcd80
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f8511bf3960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
path_19 = tilde_expand_filename (file_17(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
this stmt is child function---tilde_expand_filename-----

 ================== trace ================== 
trace fucntion name:tilde_expand_filename 
[40;44m =======trace_function_path tilde_expand_filename  function_call count: 6 level :0========  [0m
[40;36m ======= node_fun:tilde_expand_filename========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_27(3), path_19(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("fopen %s: \n", path_19);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
krl_spec_21 = fopen (path_19, "r");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (krl_spec_21 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
Cond in fucntion update_krl_from_file basic block 4
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcd80
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f8511bf3960>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f85120bcdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_19 = tilde_expand_filename (file_17(D), _2);
    version:19
    ptr-info 0x7f8511bf3978>
# .MEM_34 = VDEF <.MEM_33>
path_19 = tilde_expand_filename (file_17(D), _2);

 ================== trace ptable================== 
trace fucntion name:tilde_expand_filename 
[40;44m =======trace_function_path tilde_expand_filename  function_call count: 6 level :888========  [0m
[40;36m ======= node_fun:tilde_expand_filename========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---tilde_expand_filename-----
this other function ------tilde_expand_filename-----
 
 Start check Pointer Collect  

======================================================================
path_19 = tilde_expand_filename (file_17(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
this stmt is child function---tilde_expand_filename-----

 ================== trace ================== 
trace fucntion name:tilde_expand_filename 
[40;44m =======trace_function_path tilde_expand_filename  function_call count: 6 level :0========  [0m
[40;36m ======= node_fun:tilde_expand_filename========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_27(3), path_19(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("fopen %s: \n", path_19);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
krl_spec_21 = fopen (path_19, "r");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (krl_spec_21 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
Cond in fucntion update_krl_from_file basic block 4
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_19 = tilde_expand_filename (file_17(D), _2);
    version:19
    ptr-info 0x7f8511bf3978>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f85122b0c80
    type <pointer_type 0x7f8511bea738
        type <array_type 0x7f8511bea690 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4ae0 constant 136>
            unit-size <integer_cst 0x7f8511bd4768 constant 17>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511bea5e8>
            pointer_to_this <pointer_type 0x7f8511bea738>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc320 type <array_type 0x7f8511bea690>
        readonly constant static "(standard input)\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0d00
    type <pointer_type 0x7f8511bea9d8
        type <array_type 0x7f8511bea930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4b28 constant 96>
            unit-size <integer_cst 0x7f8511bd4b10 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511bea888>
            pointer_to_this <pointer_type 0x7f8511bea9d8>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc348 type <array_type 0x7f8511bea930>
        readonly constant static "fopen %s: \012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0d80
    type <pointer_type 0x7f8511beaa80
        type <array_type 0x7f8511bdd930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4798 constant 144>
            unit-size <integer_cst 0x7f8511bd4780 constant 18>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511bdd888>
            pointer_to_this <pointer_type 0x7f8511beaa80>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc398 type <array_type 0x7f8511bdd930>
        readonly constant static "Revoking from %s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bcb88
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 2;
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 == 1)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcb88
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0de0
    type <pointer_type 0x7f8511beac78
        type <array_type 0x7f8511beabd0 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4b58 constant 104>
            unit-size <integer_cst 0x7f8511bd4b40 constant 13>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511beab28>
            pointer_to_this <pointer_type 0x7f8511beac78>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc3c0 type <array_type 0x7f8511beabd0>
        readonly constant static "%s: invalid\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:4 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:4 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bccf0
    type <pointer_type 0x7f8511be4dc8
        type <record_type 0x7f8511be4d20 FILE BLK
            size <integer_cst 0x7f85121890a8 constant 1728>
            unit-size <integer_cst 0x7f8511bd48d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8511be4c78 fields <field_decl 0x7f8511be5260 _flags> context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f8511be4dc8>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8511bea498>>
    var <var_decl 0x7f8511bfa240 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>
    version:10
    ptr-info 0x7f8511bf3930>
krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with krl_spec ========= [0m
[40;36m ======= relate stmt argument:krl_spec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 11
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 == 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:102:20: warning: use location
  102 |             &lnum) == 0) {
      |                    ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:102:20: warning: use location
Cond in fucntion update_krl_from_file basic block 11
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bccf0
    type <pointer_type 0x7f8511be4dc8
        type <record_type 0x7f8511be4d20 FILE BLK
            size <integer_cst 0x7f85121890a8 constant 1728>
            unit-size <integer_cst 0x7f8511bd48d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8511be4c78 fields <field_decl 0x7f8511be5260 _flags> context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f8511be4dc8>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8511bea498>>
    var <var_decl 0x7f8511bfa240 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>
    version:10
    ptr-info 0x7f8511bf3930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (_7 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:102:20: warning: use location
  102 |             &lnum) == 0) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bcca8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_9 = PHI <path_27(3), path_19(4)>
    version:9
    ptr-info 0x7f8511bf3918>
path_9 = PHI <path_27(3), path_19(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 12
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
if (_8 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
In function ‘update_krl_from_file’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcca8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_9 = PHI <path_27(3), path_19(4)>
    version:9
    ptr-info 0x7f8511bf3918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:update_krl_from_file========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f85120b4fc0 type <pointer_type 0x7f85120d0000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f85120bc630
    type <integer_type 0x7f85120c9690 unsigned int public unsigned SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c9690 precision:32 min <integer_cst 0x7f85120b4e28 0> max <integer_cst 0x7f85120b4de0 4294967295>
        pointer_to_this <pointer_type 0x7f85120d5690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:9: warning: use location
  115 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:9: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bc630
    type <integer_type 0x7f85120c9690 unsigned int public unsigned SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c9690 precision:32 min <integer_cst 0x7f85120b4e28 0> max <integer_cst 0x7f85120b4de0 4294967295>
        pointer_to_this <pointer_type 0x7f85120d5690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0b40
    type <pointer_type 0x7f8511be9e70
        type <record_type 0x7f8511be9dc8 passwd BLK
            size <integer_cst 0x7f8511bd4a50 constant 576>
            unit-size <integer_cst 0x7f8511bd4a68 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8511be9dc8 fields <field_decl 0x7f8511be5850 pw_name> context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f8511be9e70>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f851295ce10 pw type <record_type 0x7f8511be9dc8 passwd>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:112:19 size <integer_cst 0x7f8511bd4a50 576> unit-size <integer_cst 0x7f8511bd4a68 72>
        align:64 warn_if_not_align:0 context <function_decl 0x7f8511bdee00 main>
        chain <var_decl 0x7f851295cd80 i type <integer_type 0x7f85120c95e8 int>
            SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:114:6
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdee00 main>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:update_krl_from_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path update_krl_from_file  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:read_keyfile_line========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path read_keyfile_line  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:read_keyfile_line========= [0m
[40;42m =======start_check_funciton:read_keyfile_line========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f85122b0f60
    type <pointer_type 0x7f8511be9bd0
        type <array_type 0x7f8511be9b28 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4a08 constant 288>
            unit-size <integer_cst 0x7f8511bd4a38 constant 36>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be9a80>
            pointer_to_this <pointer_type 0x7f8511be9bd0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f85120c7040 type <array_type 0x7f8511be9b28>
        readonly constant static "%s: %s line %lu exceeds size limit\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bff5a0
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _4 = rand ();
    version:4>
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = _4 % 2;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 1)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^
if (_5 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
Cond in fucntion read_keyfile_line basic block 3
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 5
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = rand ();
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bff5a0
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bff630
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _6 = rand ();
    version:6>
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 % 2;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 == 1)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^
if (_7 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
Cond in fucntion read_keyfile_line basic block 4
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 3
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = rand ();
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bff630
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _6 = rand ();
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:read_keyfile_line========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:tilde_expand_filename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path tilde_expand_filename  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
srclen_14 = strlen (src_13(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
srclen_14 = strlen (src_13(D));
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = srclen_14 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: use location
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^
this stmt is child function---strnlen-----

 ================== trace ================== 
trace fucntion name:strnlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = maxlen_16(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:19: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                   ^
_7 = _6 + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^
_5 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = maxlen_16(D) - dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:24: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |                        ^
if (_1 > srclen_14)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
if (_1 > srclen_14)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion strlcat basic block 4
 ================== possible direct basic block ================= 
from strlcat basic block 5
 ================== possible direct basic block ================= 
from strlcat basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = maxlen_16(D) + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
_8 = dst_15(D) + _7;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>
_3 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c073f0
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _5 = dst_15(D) + dstlen_17;
    version:5
    ptr-info 0x7f8511bf3ae0>
_5 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:tilde_expand_filename========= [0m
[40;42m =======start_check_funciton:tilde_expand_filename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511bffdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _28 = strdup (filename_13(D));
    version:28
    ptr-info 0x7f8511bf3ab0>
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_14 = filename_13(D) + 1;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
filename_14 = filename_13(D) + 1;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_28 = strdup (filename_13(D));
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
_1 = *filename_13(D);
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = *filename_13(D);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 126)
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_1 != 126)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
if (_1 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 2
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 3
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _28 = strdup (filename_13(D));
    version:28
    ptr-info 0x7f8511bf3ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffd80
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _24 = strdup (&ret);
    version:24
    ptr-info 0x7f8511bf3a98>
# .MEM_40 = VDEF <.MEM_39>
_24 = strdup (&ret);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_24 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffd80
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _24 = strdup (&ret);
    version:24
    ptr-info 0x7f8511bf3a98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffc18
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3a38>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_14 = filename_13(D) + 1;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
filename_14 = filename_13(D) + 1;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_28 = strdup (filename_13(D));
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
_1 = *filename_13(D);
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = *filename_13(D);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 126)
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_1 != 126)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
if (_1 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 2
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 3
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffc18
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffc60
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt filename_14 = filename_13(D) + 1;
    version:14
    ptr-info 0x7f8511bf3a50>
filename_14 = filename_13(D) + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffc60
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt filename_14 = filename_13(D) + 1;
    version:14
    ptr-info 0x7f8511bf3a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03080
    type <pointer_type 0x7f8511be9348
        type <array_type 0x7f8511be92a0 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4948 constant 360>
            unit-size <integer_cst 0x7f8511bd49a8 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be91f8>
            pointer_to_this <pointer_type 0x7f8511be9348>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bffe58 type <array_type 0x7f8511be92a0>
        readonly constant static "tilde_expand_filename: ~username too long%s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03100
    type <pointer_type 0x7f8511be9690
        type <array_type 0x7f8511be6e70 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd48e8 constant 1024>
            unit-size <integer_cst 0x7f8511bd4858 constant 128>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6dc8>
            pointer_to_this <pointer_type 0x7f8511be9690>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfad80 user type <array_type 0x7f8511be6e70>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:7 size <integer_cst 0x7f8511bd48e8 1024> unit-size <integer_cst 0x7f8511bd4858 128>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
            addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename> chain <var_decl 0x7f8511bfac60 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03140
    type <pointer_type 0x7f8511be97e0
        type <array_type 0x7f8511be6d20 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6c78>
            pointer_to_this <pointer_type 0x7f8511be97e0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18 size <integer_cst 0x7f85120d2000 512> unit-size <integer_cst 0x7f8512189090 64>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfac60 slash type <integer_type 0x7f8511be6bd0 u_int>
            unsigned SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:42:13
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03180
    type <pointer_type 0x7f8511be99d8
        type <array_type 0x7f8511be9930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd49c0 constant 320>
            unit-size <integer_cst 0x7f8511bd49f0 constant 40>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be9888>
            pointer_to_this <pointer_type 0x7f8511be99d8>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f85120c7080 type <array_type 0x7f8511be9930>
        readonly constant static "tilde_expand_filename: Path too long%s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03200
    type <pointer_type 0x7f8511be97e0
        type <array_type 0x7f8511be6d20 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6c78>
            pointer_to_this <pointer_type 0x7f8511be97e0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18 size <integer_cst 0x7f85120d2000 512> unit-size <integer_cst 0x7f8512189090 64>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfac60 slash type <integer_type 0x7f8511be6bd0 u_int>
            unsigned SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:42:13
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:tilde_expand_filename========= [0m
[40;42m =======pre_check_funciton:update_krl_from_file========= [0m
[40;42m =======start_check_funciton:update_krl_from_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f85120bcea0
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f8511bf39c0>
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
path_27 = strdup ("(standard input)");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:24: warning: use location
   95 |                 path = xstrdup("(standard input)");
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcea0
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f8511bf39c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bcd80
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f8511bf3960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
path_19 = tilde_expand_filename (file_17(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
this stmt is child function---tilde_expand_filename-----

 ================== trace ================== 
trace fucntion name:tilde_expand_filename 
[40;44m =======trace_function_path tilde_expand_filename  function_call count: 6 level :0========  [0m
[40;36m ======= node_fun:tilde_expand_filename========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
Cond in fucntion update_krl_from_file basic block 4
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcd80
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f8511bf3960>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f85120bcdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_19 = tilde_expand_filename (file_17(D), _2);
    version:19
    ptr-info 0x7f8511bf3978>
# .MEM_34 = VDEF <.MEM_33>
path_19 = tilde_expand_filename (file_17(D), _2);

 ================== trace ptable================== 
trace fucntion name:tilde_expand_filename 
[40;44m =======trace_function_path tilde_expand_filename  function_call count: 6 level :888========  [0m
[40;36m ======= node_fun:tilde_expand_filename========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---tilde_expand_filename-----
this other function ------tilde_expand_filename-----
 
 Start check Pointer Collect  

======================================================================
path_19 = tilde_expand_filename (file_17(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
this stmt is child function---tilde_expand_filename-----

 ================== trace ================== 
trace fucntion name:tilde_expand_filename 
[40;44m =======trace_function_path tilde_expand_filename  function_call count: 6 level :0========  [0m
[40;36m ======= node_fun:tilde_expand_filename========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;46m =======add node_fun stack:strlcat========= [0m
[40;44m =======trace_function_path strlcat  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
Cond in fucntion update_krl_from_file basic block 2
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 3
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_9 = PHI <path_27(3), path_19(4)>
bb index := 6
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_45>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (krl_spec_21 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
if (krl_spec_21 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
Cond in fucntion update_krl_from_file basic block 4
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 5
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_19 = tilde_expand_filename (file_17(D), _2);
    version:19
    ptr-info 0x7f8511bf3978>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
path_9 = PHI <path_27(3), path_19(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_35 = VDEF <.MEM_34>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f85122b0c80
    type <pointer_type 0x7f8511bea738
        type <array_type 0x7f8511bea690 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4ae0 constant 136>
            unit-size <integer_cst 0x7f8511bd4768 constant 17>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511bea5e8>
            pointer_to_this <pointer_type 0x7f8511bea738>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc320 type <array_type 0x7f8511bea690>
        readonly constant static "(standard input)\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0d00
    type <pointer_type 0x7f8511bea9d8
        type <array_type 0x7f8511bea930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4b28 constant 96>
            unit-size <integer_cst 0x7f8511bd4b10 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511bea888>
            pointer_to_this <pointer_type 0x7f8511bea9d8>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc348 type <array_type 0x7f8511bea930>
        readonly constant static "fopen %s: \012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0d80
    type <pointer_type 0x7f8511beaa80
        type <array_type 0x7f8511bdd930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4798 constant 144>
            unit-size <integer_cst 0x7f8511bd4780 constant 18>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511bdd888>
            pointer_to_this <pointer_type 0x7f8511beaa80>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc398 type <array_type 0x7f8511bdd930>
        readonly constant static "Revoking from %s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bcb88
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _5 % 2;
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 1)
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
Cond in fucntion update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 9
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcb88
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_45 = VDEF <.MEM_41>
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f85122b0de0
    type <pointer_type 0x7f8511beac78
        type <array_type 0x7f8511beabd0 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4b58 constant 104>
            unit-size <integer_cst 0x7f8511bd4b40 constant 13>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511beab28>
            pointer_to_this <pointer_type 0x7f8511beac78>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bfc3c0 type <array_type 0x7f8511beabd0>
        readonly constant static "%s: invalid\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:4 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:4 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bccf0
    type <pointer_type 0x7f8511be4dc8
        type <record_type 0x7f8511be4d20 FILE BLK
            size <integer_cst 0x7f85121890a8 constant 1728>
            unit-size <integer_cst 0x7f8511bd48d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8511be4c78 fields <field_decl 0x7f8511be5260 _flags> context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f8511be4dc8>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8511bea498>>
    var <var_decl 0x7f8511bfa240 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>
    version:10
    ptr-info 0x7f8511bf3930>
krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with krl_spec ========= [0m
[40;36m ======= relate stmt argument:krl_spec ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 0)
bb index := 11
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:102:20: warning: use location
  102 |             &lnum) == 0) {
      |                    ^
if (_7 == 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:102:20: warning: use location
Cond in fucntion update_krl_from_file basic block 11
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 8
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bccf0
    type <pointer_type 0x7f8511be4dc8
        type <record_type 0x7f8511be4d20 FILE BLK
            size <integer_cst 0x7f85121890a8 constant 1728>
            unit-size <integer_cst 0x7f8511bd48d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8511be4c78 fields <field_decl 0x7f8511be5260 _flags> context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f8511be4dc8>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8511bea498>>
    var <var_decl 0x7f8511bfa240 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>
    version:10
    ptr-info 0x7f8511bf3930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (_7 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:102:20: warning: use location
  102 |             &lnum) == 0) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85120bcca8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_9 = PHI <path_27(3), path_19(4)>
    version:9
    ptr-info 0x7f8511bf3918>
path_9 = PHI <path_27(3), path_19(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 12
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
Cond in fucntion update_krl_from_file basic block 12
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 13
 ================== possible direct basic block ================= 
from update_krl_from_file basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
bb index := 11
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^
this stmt is child function---read_keyfile_line-----

 ================== trace ================== 
trace fucntion name:read_keyfile_line 
[40;44m =======trace_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:read_keyfile_line========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
bb index := 13
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 14

======================================================================
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
bb index := 7
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85120bcca8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
    var <var_decl 0x7f8511bfa360 path>
    def_stmt path_9 = PHI <path_27(3), path_19(4)>
    version:9
    ptr-info 0x7f8511bf3918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
# VUSE <.MEM_41>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_41 = VDEF <.MEM_31>
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:101:16: warning: use location
  101 |         while (read_keyfile_line(krl_spec, path, line, sizeof(line),
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_42 = VDEF <.MEM_41>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_34>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: Use after free error!: free location 
   94 |                 free(path);
      |                 ^
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:update_krl_from_file========= [0m
[40;44m =======node_fun:read_keyfile_line========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path read_keyfile_line  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:read_keyfile_line========= [0m
[40;42m =======start_check_funciton:read_keyfile_line========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f85122b0f60
    type <pointer_type 0x7f8511be9bd0
        type <array_type 0x7f8511be9b28 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4a08 constant 288>
            unit-size <integer_cst 0x7f8511bd4a38 constant 36>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be9a80>
            pointer_to_this <pointer_type 0x7f8511be9bd0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f85120c7040 type <array_type 0x7f8511be9b28>
        readonly constant static "%s: %s line %lu exceeds size limit\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bff5a0
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _4 = rand ();
    version:4>
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_21>
return 0;
In function ‘read_keyfile_line’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _4 % 2;
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = _4 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 1)
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_5 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^
if (_5 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
Cond in fucntion read_keyfile_line basic block 3
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 5
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = rand ();
bb index := 3
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bff5a0
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _4 = rand ();
    version:4>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bff630
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _6 = rand ();
    version:6>
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 % 2;
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_7 == 1)
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^
if (_7 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
Cond in fucntion read_keyfile_line basic block 4
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 3
 ================== possible direct basic block ================= 
from read_keyfile_line basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_21>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_16>
_6 = rand ();
bb index := 4
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_17>
return _8;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bff630
    type <integer_type 0x7f85120c95e8 int public SI
        size <integer_cst 0x7f85120b4df8 constant 32>
        unit-size <integer_cst 0x7f85120b4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c95e8 precision:32 min <integer_cst 0x7f85120b4db0 -2147483648> max <integer_cst 0x7f85120b4dc8 2147483647>
        pointer_to_this <pointer_type 0x7f85120d09d8>>
   
    def_stmt _6 = rand ();
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:read_keyfile_line========= [0m
[40;44m =======node_fun:tilde_expand_filename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path tilde_expand_filename  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strlcat========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcat  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
srclen_14 = strlen (src_13(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
srclen_14 = strlen (src_13(D));
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = srclen_14 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: use location
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^
this stmt is child function---strnlen-----

 ================== trace ================== 
trace fucntion name:strnlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = maxlen_16(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:19: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                   ^
_7 = _6 + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^
_5 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = maxlen_16(D) - dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:24: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |                        ^
if (_1 > srclen_14)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
if (_1 > srclen_14)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion strlcat basic block 4
 ================== possible direct basic block ================= 
from strlcat basic block 5
 ================== possible direct basic block ================= 
from strlcat basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = maxlen_16(D) + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
_8 = dst_15(D) + _7;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>
_3 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c073f0
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _5 = dst_15(D) + dstlen_17;
    version:5
    ptr-info 0x7f8511bf3ae0>
_5 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:tilde_expand_filename========= [0m
[40;42m =======start_check_funciton:tilde_expand_filename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511bffdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _28 = strdup (filename_13(D));
    version:28
    ptr-info 0x7f8511bf3ab0>
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_14 = filename_13(D) + 1;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
filename_14 = filename_13(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_28 = strdup (filename_13(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
_1 = *filename_13(D);
bb index := 2
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = *filename_13(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 126)
bb index := 2
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_1 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
if (_1 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 2
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 3
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffdc8
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _28 = strdup (filename_13(D));
    version:28
    ptr-info 0x7f8511bf3ab0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffd80
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _24 = strdup (&ret);
    version:24
    ptr-info 0x7f8511bf3a98>
# .MEM_40 = VDEF <.MEM_39>
_24 = strdup (&ret);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_24 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffd80
    type <pointer_type 0x7f8511bddd20
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f8511be4e70>>
   
    def_stmt _24 = strdup (&ret);
    version:24
    ptr-info 0x7f8511bf3a98>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffc18
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3a38>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_14 = filename_13(D) + 1;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
filename_14 = filename_13(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_34(D)>
_28 = strdup (filename_13(D));
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_28 = strdup (filename_13(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt is child function---strdup-----

 ================== trace ================== 
_9 = PHI <_28(3), _24(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
_1 = *filename_13(D);
bb index := 2
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_1 = *filename_13(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 126)
bb index := 2
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_1 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
if (_1 != 126)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 2
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 3
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffc18
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511bffc60
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt filename_14 = filename_13(D) + 1;
    version:14
    ptr-info 0x7f8511bf3a50>
filename_14 = filename_13(D) + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_34(D)>
path_15 = strchr (filename_14, 47);
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
path_15 = strchr (filename_14, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
filename_21 = path_15 + 1;
bb index := 9
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
filename_21 = path_15 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_8 = PHI <filename_14(8), filename_21(9)>
lto1: warning: use location
this stmt have mutiple branch --------
_7 = strlcat (&ret, filename_8, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
this stmt is child function---strlcat-----

 ================== trace ================== 
trace fucntion name:strlcat 
[40;44m =======trace_function_path strlcat  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:strlcat========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_7 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
if (_7 > 63)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 10
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 11
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (path_15 != 0B)
bb index := 8
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
if (path_15 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
if (path_15 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
Cond in fucntion tilde_expand_filename basic block 8
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 9
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = path_15 - filename_14;
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
_5 = path_15 - filename_14;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
slash_16 = (u_int) _5;
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
slash_16 = (u_int) _5;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_16] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (&user, filename_14, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (slash_16 > 127)
bb index := 5
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================
if (slash_16 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
if (slash_16 > 127)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
Cond in fucntion tilde_expand_filename basic block 5
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 6
 ================== possible direct basic block ================= 
from tilde_expand_filename basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = filename_14 < path_15;
bb index := 4
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_3 = filename_14 < path_15;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511bffc60
    type <pointer_type 0x7f8511bddbd0
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed780 filename>
    def_stmt filename_14 = filename_13(D) + 1;
    version:14
    ptr-info 0x7f8511bf3a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03080
    type <pointer_type 0x7f8511be9348
        type <array_type 0x7f8511be92a0 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd4948 constant 360>
            unit-size <integer_cst 0x7f8511bd49a8 constant 45>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be91f8>
            pointer_to_this <pointer_type 0x7f8511be9348>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8511bffe58 type <array_type 0x7f8511be92a0>
        readonly constant static "tilde_expand_filename: ~username too long%s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:52:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03100
    type <pointer_type 0x7f8511be9690
        type <array_type 0x7f8511be6e70 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd48e8 constant 1024>
            unit-size <integer_cst 0x7f8511bd4858 constant 128>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6dc8>
            pointer_to_this <pointer_type 0x7f8511be9690>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfad80 user type <array_type 0x7f8511be6e70>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:7 size <integer_cst 0x7f8511bd48e8 1024> unit-size <integer_cst 0x7f8511bd4858 128>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
            addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename> chain <var_decl 0x7f8511bfac60 slash>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03140
    type <pointer_type 0x7f8511be97e0
        type <array_type 0x7f8511be6d20 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6c78>
            pointer_to_this <pointer_type 0x7f8511be97e0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18 size <integer_cst 0x7f85120d2000 512> unit-size <integer_cst 0x7f8512189090 64>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfac60 slash type <integer_type 0x7f8511be6bd0 u_int>
            unsigned SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:42:13
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03180
    type <pointer_type 0x7f8511be99d8
        type <array_type 0x7f8511be9930 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f8511bd49c0 constant 320>
            unit-size <integer_cst 0x7f8511bd49f0 constant 40>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be9888>
            pointer_to_this <pointer_type 0x7f8511be99d8>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f85120c7080 type <array_type 0x7f8511be9930>
        readonly constant static "tilde_expand_filename: Path too long%s\012\000">
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:61:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8511c03200
    type <pointer_type 0x7f8511be97e0
        type <array_type 0x7f8511be6d20 type <integer_type 0x7f8511bdda80 char>
            BLK
            size <integer_cst 0x7f85120d2000 constant 512>
            unit-size <integer_cst 0x7f8512189090 constant 64>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f8511be6c78>
            pointer_to_this <pointer_type 0x7f8511be97e0>>
        unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f8511bfacf0 ret type <array_type 0x7f8511be6d20>
        addressable BLK ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:40:18 size <integer_cst 0x7f85120d2000 512> unit-size <integer_cst 0x7f8512189090 64>
        align:8 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>
        chain <var_decl 0x7f8511bfac60 slash type <integer_type 0x7f8511be6bd0 u_int>
            unsigned SI ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:42:13
            size <integer_cst 0x7f85120b4df8 constant 32>
            unit-size <integer_cst 0x7f85120b4e10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f8511bdeb00 tilde_expand_filename>>>
    ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 start: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10 finish: ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:tilde_expand_filename========= [0m
[40;44m =======node_fun:strlcat========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strlcat  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:strlcat========= [0m
[40;42m =======start_check_funciton:strlcat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
srclen_14 = strlen (src_13(D));
bb index := 2
# VUSE <.MEM_44>
return;
In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
srclen_14 = strlen (src_13(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = srclen_14 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07558
    type <pointer_type 0x7f8511bddc78
        type <integer_type 0x7f8511bddb28 char readonly public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddbd0>>
        unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f8511bed900 src>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f8511bf3b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25(D)>
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
bb index := 2
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: use location
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^
this stmt is child function---strnlen-----

 ================== trace ================== 
trace fucntion name:strnlen 

 ================== trace ================== 
trace fucntion free:0 
_6 = maxlen_16(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:19: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                   ^
_7 = _6 + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^
_5 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
memcpy (_5, src_13(D), _4);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = dst_15(D) + dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_1 = maxlen_16(D) - dstlen_17;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:24: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |                        ^
if (_1 > srclen_14)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
if (_1 > srclen_14)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
Cond in fucntion strlcat basic block 4
 ================== possible direct basic block ================= 
from strlcat basic block 5
 ================== possible direct basic block ================= 
from strlcat basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = maxlen_16(D) + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = srclen_14 + maxlen_16(D);
bb index := 3
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
  109 | }
      | ^
beacuse in succ := 14 have return or exit
# VUSE <.MEM_44>
return;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:109:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_22 = srclen_14 + maxlen_16(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
_9 = PHI <_22(3), _21(7)>
lto1: warning: use location
this stmt have mutiple branch --------
_8 = dst_15(D) + _7;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c075e8
    type <pointer_type 0x7f8511bdddc8
        type <integer_type 0x7f8511bdda80 char public QI
            size <integer_cst 0x7f85120b4ca8 constant 8>
            unit-size <integer_cst 0x7f85120b4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f85120c93f0 precision:8 min <integer_cst 0x7f8511bd4720 -128> max <integer_cst 0x7f8511bd4708 127>
            pointer_to_this <pointer_type 0x7f8511bddd20>>
        public unsigned restrict DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f85120bf168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <parm_decl 0x7f8511bed880 dst>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f8511bf3b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>
_3 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_28 = VDEF <.MEM_25(D)>
memcpy (_3, src_13(D), _2);
memcpy (_3, src_13(D), _2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8511c07360
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _3 = dst_15(D) + dstlen_17;
    version:3
    ptr-info 0x7f8511bf3ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8511c073f0
    type <pointer_type 0x7f85120d0000
        type <void_type 0x7f85120c9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f85120d0000>>
        public unsigned DI
        size <integer_cst 0x7f85120b4bb8 constant 64>
        unit-size <integer_cst 0x7f85120b4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f85120d59d8>>
   
    def_stmt _5 = dst_15(D) + dstlen_17;
    version:5
    ptr-info 0x7f8511bf3ae0>
_5 = dst_15(D) + dstlen_17;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:strlcat========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_3 = (long unsigned int) i_7;
_4 = _3 * 8;
_5 = argv_14(D) + _4;
_6 = *_5;
update_krl_from_file (&pw, _6);
i_16 = i_7 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_7 = PHI <0(2), i_16(3)>
if (i_7 < argc_12(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
pw ={v} {CLOBBER};
return 0;

=======Mapping node_fun:update_krl_from_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 59473569]:
lnum = 0;
_1 = pw_16(D)->pw_uid;
_2 = (unsigned int) _1;
path_19 = tilde_expand_filename (file_17(D), _2);
_3 = strcmp (path_19, "-");
if (_3 == 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 29736784]:
krl_spec_24 = stdin;
free (path_19);
path_27 = strdup ("(standard input)");
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 29736784]:
krl_spec_21 = fopen (path_19, "r");
if (krl_spec_21 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 11895]:
printf ("fopen %s: \n", path_19);
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 59461674]:
# path_9 = PHI <path_27(3), path_19(4)>
# krl_spec_10 = PHI <krl_spec_24(3), krl_spec_21(4)>
_4 = quiet;
if (_4 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 19622352]:
printf ("Revoking from %s\n", path_9);
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1014686025]:
_5 = rand ();
_6 = _5 % 2;
if (_6 == 1)
  goto <bb 9>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 405874]:
printf ("%s: invalid\n", path_9);
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 59461674]:

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
_7 = read_keyfile_line (krl_spec_10, path_9, &line, 16384, &lnum);
if (_7 == 0)
  goto <bb 8>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 59055800]:
_8 = strcmp (path_9, "-");
if (_8 != 0)
  goto <bb 13>; [33.00%]
else
  goto <bb 14>; [67.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 19488414]:
fclose (krl_spec_10);

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 59055800]:
lnum ={v} {CLOBBER};
line ={v} {CLOBBER};
return;

=======Mapping node_fun:read_keyfile_line=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = *lineno_13(D);
_2 = _1 + 1;
*lineno_13(D) = _2;
_3 = *lineno_13(D);
printf ("%s: %s line %lu exceeds size limit\n", &__func__, filename_15(D), _3);
_4 = rand ();
_5 = _4 % 2;
if (_5 == 1)
  goto <bb 5>; [5.50%]
else
  goto <bb 6>; [94.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 958878295]:

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_6 = rand ();
_7 = _6 % 2;
if (_7 == 1)
  goto <bb 3>; [94.50%]
else
  goto <bb 5>; [5.50%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 114863531]:
# _8 = PHI <0(3), -1(4)>
return _8;

=======Mapping node_fun:tilde_expand_filename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = *filename_13(D);
if (_1 != 126)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_28 = strdup (filename_13(D));
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 719407025]:
filename_14 = filename_13(D) + 1;
path_15 = strchr (filename_14, 47);
_2 = path_15 != 0B;
_3 = filename_14 < path_15;
_4 = _2 & _3;
if (_4 != 0)
  goto <bb 5>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 359703512]:
_5 = path_15 - filename_14;
slash_16 = (u_int) _5;
if (slash_16 > 127)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 143881]:
printf ("tilde_expand_filename: ~username too long%s\n", "");
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 359559631]:
_31 = _5 & 4294967295;
_6 = (long unsigned int) _31;
memcpy (&user, filename_14, _6);
user[slash_16] = 0;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 719263144]:
if (path_15 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 503484202]:
filename_21 = path_15 + 1;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 719263144]:
# filename_8 = PHI <filename_14(8), filename_21(9)>
_7 = strlcat (&ret, filename_8, 64);
if (_7 > 63)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 287705]:
printf ("tilde_expand_filename: Path too long%s\n", "");
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 718975439]:
_24 = strdup (&ret);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073310239]:
# _9 = PHI <_28(3), _24(12)>
user ={v} {CLOBBER};
ret ={v} {CLOBBER};
return _9;

=======Mapping node_fun:strlcat=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
srclen_14 = strlen (src_13(D));
dstlen_17 = strnlen (dst_15(D), maxlen_16(D));
if (maxlen_16(D) == dstlen_17)
  goto <bb 3>; [20.97%]
else
  goto <bb 4>; [79.03%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 225163664]:
_22 = srclen_14 + maxlen_16(D);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 848578161]:
_1 = maxlen_16(D) - dstlen_17;
if (_1 > srclen_14)
  goto <bb 5>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 424289080]:
_2 = srclen_14 + 1;
_3 = dst_15(D) + dstlen_17;
memcpy (_3, src_13(D), _2);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 424289080]:
_4 = maxlen_16(D) + 18446744073709551615;
_5 = dst_15(D) + dstlen_17;
memcpy (_5, src_13(D), _4);
_6 = maxlen_16(D) + dstlen_17;
_7 = _6 + 18446744073709551615;
_8 = dst_15(D) + _7;
*_8 = 0;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 848578161]:
_21 = srclen_14 + dstlen_17;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# _9 = PHI <_22(3), _21(7)>
return _9;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    find Entry point : 16 [0m
[40;34m    used_stmt array stack totalsize of : 0.003384 mb[0m
[40;34m    collect time: : 0.000203 s [0m
[40;34m    algorithm time: 0.138950 s [0m
[40;34m    gimple stmt count : : 99 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.8%|     +0.1%|
backprop                         |      |      |      |      |     -0.8%|     +0.1%|
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +0.6%|     +0.0%|
cplxlower                        |      |      |      |      |     +0.6%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.3%|     -0.4%|
copyprop                         |      |      |      |      |     -0.3%|     -0.4%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -45.5%|    -48.7%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     +1.0%|     -0.7%|
lim                              |      |      |      |      |     +1.0%|     -0.7%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +81.6%|    +96.4%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.3%|     -0.1%|
strlen                           |      |      |      |      |     -0.3%|     -0.1%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +75.2%|    +51.6%|
into_cfglayout                   |      |      |      |      |     -1.3%|     -0.5%|
jump                             |      |      |      |      |     -3.2%|     -1.8%|
subreg1                          |      |      |      |      |     -2.0%|     -1.3%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -3.3%|     -3.1%|
ce1                              |      |      |      |      |     -3.4%|     -3.2%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |          |     -0.6%|
loop2_done                       |      |      |      |      |          |     -0.6%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +2.0%|     +2.1%|
ce2                              |      |      |      |      |     +2.0%|     +2.1%|
outof_cfglayout                  |      |      |      |      |     +1.4%|     +0.5%|
split1                           |      |      |      |      |     +1.4%|     +0.5%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -7.5%|     -7.8%|
postreload                       |      |      |      |      |     -8.1%|     -8.5%|
split2               ------------|      |      |      |      |          |          |
cmpelim              ------------|      |      |      |      |          |          |
pro_and_epilogue                 |      |      |      |      |    +10.7%|    +12.1%|
dse2                             |      |      |      |      |     +9.6%|    +10.8%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     -0.3%|     -0.1%|
split4                           |      |      |      |      |     -0.3%|     -0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
