../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:104: warning: "ENOMSG" redefined
  104 | #define ENOMSG 35       /* No message of desired type */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:23: note: this is the location of the previous definition
   23 | #define ENOMSG          42      /* No message of desired type */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:105: warning: "EIDRM" redefined
  105 | #define EIDRM 36        /* Identifier removed */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:24: note: this is the location of the previous definition
   24 | #define EIDRM           43      /* Identifier removed */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:106: warning: "ECHRNG" redefined
  106 | #define ECHRNG 37       /* Channel number out of range */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:25: note: this is the location of the previous definition
   25 | #define ECHRNG          44      /* Channel number out of range */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:107: warning: "EL2NSYNC" redefined
  107 | #define EL2NSYNC 38     /* Level 2 not synchronized */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:26: note: this is the location of the previous definition
   26 | #define EL2NSYNC        45      /* Level 2 not synchronized */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:108: warning: "EL3HLT" redefined
  108 | #define EL3HLT 39       /* Level 3 halted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:27: note: this is the location of the previous definition
   27 | #define EL3HLT          46      /* Level 3 halted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:109: warning: "EL3RST" redefined
  109 | #define EL3RST 40       /* Level 3 reset */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:28: note: this is the location of the previous definition
   28 | #define EL3RST          47      /* Level 3 reset */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:110: warning: "ELNRNG" redefined
  110 | #define ELNRNG 41       /* Link number out of range */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:29: note: this is the location of the previous definition
   29 | #define ELNRNG          48      /* Link number out of range */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:111: warning: "EUNATCH" redefined
  111 | #define EUNATCH 42      /* Protocol driver not attached */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:30: note: this is the location of the previous definition
   30 | #define EUNATCH         49      /* Protocol driver not attached */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:112: warning: "ENOCSI" redefined
  112 | #define ENOCSI 43       /* No CSI structure available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:31: note: this is the location of the previous definition
   31 | #define ENOCSI          50      /* No CSI structure available */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:113: warning: "EL2HLT" redefined
  113 | #define EL2HLT 44       /* Level 2 halted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:32: note: this is the location of the previous definition
   32 | #define EL2HLT          51      /* Level 2 halted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:114: warning: "EDEADLK" redefined
  114 | #define EDEADLK 45      /* Deadlock condition */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:7: note: this is the location of the previous definition
    7 | #define EDEADLK         35      /* Resource deadlock would occur */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:115: warning: "ENOLCK" redefined
  115 | #define ENOLCK 46       /* No record locks available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:9: note: this is the location of the previous definition
    9 | #define ENOLCK          37      /* No record locks available */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:116: warning: "EBADE" redefined
  116 | #define EBADE 50        /* Invalid exchange */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:33: note: this is the location of the previous definition
   33 | #define EBADE           52      /* Invalid exchange */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:117: warning: "EBADR" redefined
  117 | #define EBADR 51        /* Invalid request descriptor */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:34: note: this is the location of the previous definition
   34 | #define EBADR           53      /* Invalid request descriptor */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:118: warning: "EXFULL" redefined
  118 | #define EXFULL 52       /* Exchange full */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:35: note: this is the location of the previous definition
   35 | #define EXFULL          54      /* Exchange full */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:119: warning: "ENOANO" redefined
  119 | #define ENOANO 53       /* No anode */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:36: note: this is the location of the previous definition
   36 | #define ENOANO          55      /* No anode */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:120: warning: "EBADRQC" redefined
  120 | #define EBADRQC 54      /* Invalid request code */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:37: note: this is the location of the previous definition
   37 | #define EBADRQC         56      /* Invalid request code */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:121: warning: "EBADSLT" redefined
  121 | #define EBADSLT 55      /* Invalid slot */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:38: note: this is the location of the previous definition
   38 | #define EBADSLT         57      /* Invalid slot */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:122: warning: "EDEADLOCK" redefined
  122 | #define EDEADLOCK 56    /* File locking deadlock error */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:40: note: this is the location of the previous definition
   40 | #define EDEADLOCK       EDEADLK
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:123: warning: "EBFONT" redefined
  123 | #define EBFONT 57       /* Bad font file fmt */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:42: note: this is the location of the previous definition
   42 | #define EBFONT          59      /* Bad font file format */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:136: warning: "EMULTIHOP" redefined
  136 | #define EMULTIHOP 74    /* Multihop attempted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:55: note: this is the location of the previous definition
   55 | #define EMULTIHOP       72      /* Multihop attempted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:138: warning: "EDOTDOT" redefined
  138 | #define EDOTDOT 76      /* Cross mount point (not really error) */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:56: note: this is the location of the previous definition
   56 | #define EDOTDOT         73      /* RFS specific error */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:139: warning: "EBADMSG" redefined
  139 | #define EBADMSG 77      /* Trying to read unreadable message */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:57: note: this is the location of the previous definition
   57 | #define EBADMSG         74      /* Not a data message */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:141: warning: "ENOTUNIQ" redefined
  141 | #define ENOTUNIQ 80     /* Given log. name not unique */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:59: note: this is the location of the previous definition
   59 | #define ENOTUNIQ        76      /* Name not unique on network */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:142: warning: "EBADFD" redefined
  142 | #define EBADFD 81       /* f.d. invalid for this operation */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:60: note: this is the location of the previous definition
   60 | #define EBADFD          77      /* File descriptor in bad state */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:143: warning: "EREMCHG" redefined
  143 | #define EREMCHG 82      /* Remote address changed */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:61: note: this is the location of the previous definition
   61 | #define EREMCHG         78      /* Remote address changed */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:144: warning: "ELIBACC" redefined
  144 | #define ELIBACC 83      /* Can't access a needed shared lib */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:62: note: this is the location of the previous definition
   62 | #define ELIBACC         79      /* Can not access a needed shared library */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:145: warning: "ELIBBAD" redefined
  145 | #define ELIBBAD 84      /* Accessing a corrupted shared lib */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:63: note: this is the location of the previous definition
   63 | #define ELIBBAD         80      /* Accessing a corrupted shared library */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:146: warning: "ELIBSCN" redefined
  146 | #define ELIBSCN 85      /* .lib section in a.out corrupted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:64: note: this is the location of the previous definition
   64 | #define ELIBSCN         81      /* .lib section in a.out corrupted */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:147: warning: "ELIBMAX" redefined
  147 | #define ELIBMAX 86      /* Attempting to link in too many libs */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:65: note: this is the location of the previous definition
   65 | #define ELIBMAX         82      /* Attempting to link in too many shared libraries */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:148: warning: "ELIBEXEC" redefined
  148 | #define ELIBEXEC 87     /* Attempting to exec a shared library */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:66: note: this is the location of the previous definition
   66 | #define ELIBEXEC        83      /* Cannot exec a shared library directly */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:149: warning: "ENOSYS" redefined
  149 | #define ENOSYS 88       /* Function not implemented */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:18: note: this is the location of the previous definition
   18 | #define ENOSYS          38      /* Invalid system call number */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:151: warning: "ENOTEMPTY" redefined
  151 | #define ENOTEMPTY 90    /* Directory not empty */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:20: note: this is the location of the previous definition
   20 | #define ENOTEMPTY       39      /* Directory not empty */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:152: warning: "ENAMETOOLONG" redefined
  152 | #define ENAMETOOLONG 91 /* File or path name too long */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:8: note: this is the location of the previous definition
    8 | #define ENAMETOOLONG    36      /* File name too long */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:153: warning: "ELOOP" redefined
  153 | #define ELOOP 92        /* Too many symbolic links */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:21: note: this is the location of the previous definition
   21 | #define ELOOP           40      /* Too many symbolic links encountered */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:158: warning: "EAFNOSUPPORT" redefined
  158 | #define EAFNOSUPPORT 106 /* Address family not supported by protocol family */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:80: note: this is the location of the previous definition
   80 | #define EAFNOSUPPORT    97      /* Address family not supported by protocol */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:159: warning: "EPROTOTYPE" redefined
  159 | #define EPROTOTYPE 107  /* Protocol wrong type for socket */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:74: note: this is the location of the previous definition
   74 | #define EPROTOTYPE      91      /* Protocol wrong type for socket */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:160: warning: "ENOTSOCK" redefined
  160 | #define ENOTSOCK 108    /* Socket operation on non-socket */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:71: note: this is the location of the previous definition
   71 | #define ENOTSOCK        88      /* Socket operation on non-socket */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:161: warning: "ENOPROTOOPT" redefined
  161 | #define ENOPROTOOPT 109 /* Protocol not available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:75: note: this is the location of the previous definition
   75 | #define ENOPROTOOPT     92      /* Protocol not available */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:162: warning: "ESHUTDOWN" redefined
  162 | #define ESHUTDOWN 110   /* Can't send after socket shutdown */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:91: note: this is the location of the previous definition
   91 | #define ESHUTDOWN       108     /* Cannot send after transport endpoint shutdown */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:164: warning: "EADDRINUSE" redefined
  164 | #define EADDRINUSE 112          /* Address already in use */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:81: note: this is the location of the previous definition
   81 | #define EADDRINUSE      98      /* Address already in use */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:165: warning: "ECONNABORTED" redefined
  165 | #define ECONNABORTED 113        /* Connection aborted */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:86: note: this is the location of the previous definition
   86 | #define ECONNABORTED    103     /* Software caused connection abort */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:166: warning: "ENETUNREACH" redefined
  166 | #define ENETUNREACH 114         /* Network is unreachable */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:84: note: this is the location of the previous definition
   84 | #define ENETUNREACH     101     /* Network is unreachable */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:167: warning: "ENETDOWN" redefined
  167 | #define ENETDOWN 115            /* Network interface is not configured */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:83: note: this is the location of the previous definition
   83 | #define ENETDOWN        100     /* Network is down */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:168: warning: "ETIMEDOUT" redefined
  168 | #define ETIMEDOUT 116           /* Connection timed out */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:93: note: this is the location of the previous definition
   93 | #define ETIMEDOUT       110     /* Connection timed out */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:169: warning: "EHOSTDOWN" redefined
  169 | #define EHOSTDOWN 117           /* Host is down */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:95: note: this is the location of the previous definition
   95 | #define EHOSTDOWN       112     /* Host is down */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:170: warning: "EHOSTUNREACH" redefined
  170 | #define EHOSTUNREACH 118        /* Host is unreachable */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:96: note: this is the location of the previous definition
   96 | #define EHOSTUNREACH    113     /* No route to host */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:171: warning: "EINPROGRESS" redefined
  171 | #define EINPROGRESS 119         /* Connection already in progress */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:98: note: this is the location of the previous definition
   98 | #define EINPROGRESS     115     /* Operation now in progress */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:172: warning: "EALREADY" redefined
  172 | #define EALREADY 120            /* Socket already connected */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:97: note: this is the location of the previous definition
   97 | #define EALREADY        114     /* Operation already in progress */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:173: warning: "EDESTADDRREQ" redefined
  173 | #define EDESTADDRREQ 121        /* Destination address required */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:72: note: this is the location of the previous definition
   72 | #define EDESTADDRREQ    89      /* Destination address required */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:174: warning: "EMSGSIZE" redefined
  174 | #define EMSGSIZE 122            /* Message too long */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:73: note: this is the location of the previous definition
   73 | #define EMSGSIZE        90      /* Message too long */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:175: warning: "EPROTONOSUPPORT" redefined
  175 | #define EPROTONOSUPPORT 123     /* Unknown protocol */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:76: note: this is the location of the previous definition
   76 | #define EPROTONOSUPPORT 93      /* Protocol not supported */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:176: warning: "ESOCKTNOSUPPORT" redefined
  176 | #define ESOCKTNOSUPPORT 124     /* Socket type not supported */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:77: note: this is the location of the previous definition
   77 | #define ESOCKTNOSUPPORT 94      /* Socket type not supported */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:177: warning: "EADDRNOTAVAIL" redefined
  177 | #define EADDRNOTAVAIL 125       /* Address not available */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:82: note: this is the location of the previous definition
   82 | #define EADDRNOTAVAIL   99      /* Cannot assign requested address */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:178: warning: "ENETRESET" redefined
  178 | #define ENETRESET 126
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:85: note: this is the location of the previous definition
   85 | #define ENETRESET       102     /* Network dropped connection because of reset */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:179: warning: "EISCONN" redefined
  179 | #define EISCONN 127             /* Socket is already connected */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:89: note: this is the location of the previous definition
   89 | #define EISCONN         106     /* Transport endpoint is already connected */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:180: warning: "ENOTCONN" redefined
  180 | #define ENOTCONN 128            /* Socket is not connected */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:90: note: this is the location of the previous definition
   90 | #define ENOTCONN        107     /* Transport endpoint is not connected */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:181: warning: "ETOOMANYREFS" redefined
  181 | #define ETOOMANYREFS 129
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:92: note: this is the location of the previous definition
   92 | #define ETOOMANYREFS    109     /* Too many references: cannot splice */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:183: warning: "EUSERS" redefined
  183 | #define EUSERS 131
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:70: note: this is the location of the previous definition
   70 | #define EUSERS          87      /* Too many users */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:184: warning: "EDQUOT" redefined
  184 | #define EDQUOT 132
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:105: note: this is the location of the previous definition
  105 | #define EDQUOT          122     /* Quota exceeded */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:185: warning: "ESTALE" redefined
  185 | #define ESTALE 133
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:99: note: this is the location of the previous definition
   99 | #define ESTALE          116     /* Stale file handle */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:186: warning: "ENOTSUP" redefined
  186 | #define ENOTSUP 134             /* Not supported */
      | 
In file included from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/x86_64-linux-gnu/bits/errno.h:30: note: this is the location of the previous definition
   30 | #  define ENOTSUP               EOPNOTSUPP
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:187: warning: "ENOMEDIUM" redefined
  187 | #define ENOMEDIUM 135   /* No medium (in tape drive) */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:107: note: this is the location of the previous definition
  107 | #define ENOMEDIUM       123     /* No medium found */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:190: warning: "EILSEQ" redefined
  190 | #define EILSEQ 138
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:67: note: this is the location of the previous definition
   67 | #define EILSEQ          84      /* Illegal byte sequence */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:191: warning: "EOVERFLOW" redefined
  191 | #define EOVERFLOW 139   /* Value too large for defined data type */
      | 
In file included from /usr/include/x86_64-linux-gnu/asm/errno.h:1,
                 from /usr/include/linux/errno.h:1,
                 from /usr/include/x86_64-linux-gnu/bits/errno.h:26,
                 from /usr/include/errno.h:28,
                 from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:7:
/usr/include/asm-generic/errno.h:58: note: this is the location of the previous definition
   58 | #define EOVERFLOW       75      /* Value too large for defined data type */
      | 
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:10:
./benchmarks/openssh-portable/leak_10/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_10/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘strlcat’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   20 |     const size_t srclen = strlen(src);
      |                           ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../openssh.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
   20 |     const size_t srclen = strlen(src);
      |                           ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: implicit declaration of function ‘strnlen’ [-Wimplicit-function-declaration]
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: incompatible implicit declaration of built-in function ‘strnlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘tilde_expand_filename’:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: note: in expansion of macro ‘xstrdup’
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^~~~~~~
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: note: in expansion of macro ‘xstrdup’
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
   48 |         path = strchr(filename, '/');
      |                ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   53 |                 memcpy(user, filename, slash);
      |                 ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: note: in expansion of macro ‘xstrdup’
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   92 |         if (strcmp(path, "-") == 0) {
      |             ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
In file included from ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:9:
./benchmarks/openssh-portable/leak_10/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:24: note: in expansion of macro ‘xstrdup’
   95 |                 path = xstrdup("(standard input)");
      |                        ^~~~~~~
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c: In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  115 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 14%)   0.00 (  0%)   0.01 (  9%)  1298k ( 42%)
 phase parsing                      :   0.04 ( 57%)   0.04 (100%)   0.08 ( 73%)  1621k ( 52%)
 phase opt and generate             :   0.02 ( 29%)   0.00 (  0%)   0.02 ( 18%)   160k (  5%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)     0  (  0%)
 callgraph construction             :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    22k (  1%)
 callgraph ipa passes               :   0.01 ( 14%)   0.00 (  0%)   0.01 (  9%)    93k (  3%)
 lto stream compression             :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 preprocessing                      :   0.03 ( 43%)   0.01 ( 25%)   0.01 (  9%)   768k ( 25%)
 lexical analysis                   :   0.00 (  0%)   0.01 ( 25%)   0.03 ( 27%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 25%)   0.02 ( 18%)   607k ( 20%)
 parser struct body                 :   0.01 ( 14%)   0.01 ( 25%)   0.01 (  9%)   115k (  4%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)    53k (  2%)
 tree forward propagate             :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)   784  (  0%)
 TOTAL                              :   0.07          0.04          0.11         3090k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.01          0.00          0.00         2227k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
=======node_fun:update_krl_from_file=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=19
node:= 4 
 	next_branch :=5
	next_branch :=8
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=16
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=15
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=17
	next_branch :=18
node:= 17 
 node:= 18 
 	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=21
node:= 20 
 	next_branch :=23
node:= 21 
 	next_branch :=22
	next_branch :=23
node:= 22 
 node:= 23 
 	next_branch :=24
	next_branch :=27
node:= 24 
 	next_branch :=27
node:= 25 
 	next_branch :=26
	next_branch :=28
node:= 26 
 node:= 27 
 	next_branch :=28
node:= 28 
 	next_branch :=30
node:= 29 
 	next_branch :=31
	next_branch :=30
node:= 30 
 	next_branch :=29
	next_branch :=31
node:= 31 
 	next_branch :=25
	next_branch :=32
node:= 32 
 	next_branch :=33
	next_branch :=34
node:= 33 
 	next_branch :=34
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 14 
===============The second stage : Mapping stmt=================
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = time (0B);
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
# .MEM_22 = VDEF <.MEM_17>
update_krl_from_file (&pw, _6);
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
# .MEM_92 = VDEF <.MEM_91>
user[slash_56] = 0;
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);
# VUSE <.MEM_85>
dstlen_65 = strnlen (&ret, 64);
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
# .MEM_99 = VDEF <.MEM_88>
_62 = strdup (&ret);
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_1 = time (0B);
=============== *this point analyzable =================
_49 = strdup (file_17(D));
=============== *this point analyzable =================
path_51 = strchr (filename_50, 47);
=============== *this point analyzable =================
srclen_64 = strlen (filename_60);
=============== *this point analyzable =================
dstlen_65 = strnlen (&ret, 64);
=============== *this point analyzable =================
_62 = strdup (&ret);
=============== *this point analyzable =================
_3 = strcmp (path_19, "-");
=============== *this point analyzable =================
path_27 = strdup ("(standard input)");
=============== *this point analyzable =================
krl_spec_21 = fopen (path_19, "r");
=============== *this point analyzable =================
_5 = rand ();
=============== *this point analyzable =================
_80 = rand ();
=============== *this point analyzable =================
_82 = rand ();
=============== *this point analyzable =================
_8 = strcmp (path_9, "-");
=============== *this point analyzable =================
srand (_2);
=============== *this point analyzable =================
update_krl_from_file (&pw, _6);
=============== *this point analyzable =================
_49 = strdup (file_17(D));
=============== *this point analyzable =================
path_51 = strchr (filename_50, 47);
=============== *this point analyzable =================
memcpy (&user, filename_50, _58);
=============== *this point analyzable =================
srclen_64 = strlen (filename_60);
=============== *this point analyzable =================
memcpy (_69, filename_60, _68);
=============== *this point analyzable =================
memcpy (_69, filename_60, _68);
=============== *this point analyzable =================
memcpy (_71, filename_60, _70);
=============== *this point analyzable =================
memcpy (_71, filename_60, _70);
=============== *this point analyzable =================
_3 = strcmp (path_19, "-");
=============== *this point analyzable =================
_8 = strcmp (path_9, "-");
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:update_krl_from_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path update_krl_from_file  function_call count: 12 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:update_krl_from_file========= [0m
[40;42m =======start_check_funciton:update_krl_from_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3a68
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _49 = strdup (file_17(D));
    version:49
    ptr-info 0x7f0d4dba7a98>
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));
_49 = strdup (file_17(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt call this function :strdup
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_105 = _63;
lto1: warning: use location
path_19 = _105;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
_48 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^
if (_48 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
filename_50 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3a68
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _49 = strdup (file_17(D));
    version:49
    ptr-info 0x7f0d4dba7a98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3af8
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb72d0 path>
    def_stmt path_51 = strchr (filename_50, 47);
    version:51
    ptr-info 0x7f0d4dba7ac8>
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);

 ================== pre trace ptable ================== 
trace fucntion name:strchr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strchr
 
 Start check Pointer Collect  

======================================================================
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3af8
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb72d0 path>
    def_stmt path_51 = strchr (filename_50, 47);
    version:51
    ptr-info 0x7f0d4dba7ac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb318
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7ea0 srclen>
    def_stmt srclen_64 = strlen (filename_60);
    version:64
    ptr-info 0x7f0d4dbb8a40>
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb318
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7ea0 srclen>
    def_stmt srclen_64 = strlen (filename_60);
    version:64
    ptr-info 0x7f0d4dbb8a40>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb360
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7f30 dstlen>
    def_stmt dstlen_65 = strnlen (&ret, 64);
    version:65>
# VUSE <.MEM_85>
dstlen_65 = strnlen (&ret, 64);

 ================== pre trace ptable ================== 
trace fucntion name:strnlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strnlen
 
 Start check Pointer Collect  

======================================================================
_62 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt call this function :strdup
_72 = dstlen_65 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:19: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                   ^
_73 = _72 + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^
*_74 = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:30: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                              ^
if (dstlen_65 == 64)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:8: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_71 = &ret + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_69 = &ret + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_67 = 64 - dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:24: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |                        ^
# VUSE <.MEM_85>
dstlen_65 = strnlen (&ret, 64);
dstlen_65 = strnlen (&ret, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: use location
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^
this stmt call this function :strnlen
trace fucntion name:strnlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb360
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7f30 dstlen>
    def_stmt dstlen_65 = strnlen (&ret, 64);
    version:65>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3e10
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _62 = strdup (&ret);
    version:62
    ptr-info 0x7f0d4dba7b10>
# .MEM_99 = VDEF <.MEM_88>
_62 = strdup (&ret);

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_99 = VDEF <.MEM_88>
_62 = strdup (&ret);
_62 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt call this function :strdup
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_105 = _63;
lto1: warning: use location
path_19 = _105;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3e10
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _62 = strdup (&ret);
    version:62
    ptr-info 0x7f0d4dba7b10>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081af8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _3 = strcmp (path_19, "-");
    version:3>
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcmp
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081af8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _3 = strcmp (path_19, "-");
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081ea0
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f0d4dba7a80>
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");
path_27 = strdup ("(standard input)");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:24: warning: use location
   95 |                 path = xstrdup("(standard input)");
      |                        ^
this stmt call this function :strdup
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081ea0
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f0d4dba7a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081e10
    type <pointer_type 0x7f0d4db98540
        type <record_type 0x7f0d4db98498 FILE BLK
            size <integer_cst 0x7f0d4e14e0a8 constant 1728>
            unit-size <integer_cst 0x7f0d4db88858 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4db983f0 fields <field_decl 0x7f0d4db99260 _flags> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f0d4db98540>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4db9e498>>
    var <var_decl 0x7f0d4dbae240 krl_spec>
    def_stmt krl_spec_21 = fopen (path_19, "r");
    version:21
    ptr-info 0x7f0d4dba7a50>
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");

 ================== pre trace ptable ================== 
trace fucntion name:fopen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function fopen
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081e10
    type <pointer_type 0x7f0d4db98540
        type <record_type 0x7f0d4db98498 FILE BLK
            size <integer_cst 0x7f0d4e14e0a8 constant 1728>
            unit-size <integer_cst 0x7f0d4db88858 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4db983f0 fields <field_decl 0x7f0d4db99260 _flags> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f0d4db98540>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4db9e498>>
    var <var_decl 0x7f0d4dbae240 krl_spec>
    def_stmt krl_spec_21 = fopen (path_19, "r");
    version:21
    ptr-info 0x7f0d4dba7a50>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081b88
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081b88
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _5 = rand ();
    version:5>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbba68
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _80 = rand ();
    version:80>
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_81 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = _80 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();
_80 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbba68
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _80 = rand ();
    version:80>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (_81 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
_81 = _80 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbbaf8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _82 = rand ();
    version:82>
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_83 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();
_82 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbbaf8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _82 = rand ();
    version:82>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (_83 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
_83 = _82 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081c60
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _8 = strcmp (path_9, "-");
    version:8>
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081c60
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _8 = strcmp (path_9, "-");
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0d4dba1300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f0d4dba7a20>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));
_49 = strdup (file_17(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt call this function :strdup
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_105 = _63;
lto1: warning: use location
path_19 = _105;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
_48 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^
if (_48 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
filename_50 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0d4dba1300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f0d4dba7a20>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>
filename_50 = file_17(D) + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>
filename_50 = file_17(D) + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3cf0
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _58 = (long unsigned int) _57;
    version:58>
_58 = (long unsigned int) _57;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3cf0
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _58 = (long unsigned int) _57;
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_60 = PHI <filename_50(8), filename_59(9)>
    version:60
    ptr-info 0x7f0d4dba7af8>
filename_60 = PHI <filename_50(8), filename_59(9)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_60 = PHI <filename_50(8), filename_59(9)>
    version:60
    ptr-info 0x7f0d4dba7af8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb480
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _69 = &ret + dstlen_65;
    version:69
    ptr-info 0x7f0d4dba7b40>
_69 = &ret + dstlen_65;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb480
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _69 = &ret + dstlen_65;
    version:69
    ptr-info 0x7f0d4dba7b40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb438
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _68 = srclen_64 + 1;
    version:68>
_68 = srclen_64 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb438
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _68 = srclen_64 + 1;
    version:68>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb510
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _71 = &ret + dstlen_65;
    version:71
    ptr-info 0x7f0d4dba7b58>
_71 = &ret + dstlen_65;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb510
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _71 = &ret + dstlen_65;
    version:71
    ptr-info 0x7f0d4dba7b58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb4c8
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _70 = 63;
    version:70>
_70 = 63;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb4c8
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _70 = 63;
    version:70>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>
path_19 = _105;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcmp
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>
path_19 = _105;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081ca8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_9 = PHI <path_27(20), path_19(21)>
    version:9
    ptr-info 0x7f0d4dba79d8>
path_9 = PHI <path_27(20), path_19(21)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081ca8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_9 = PHI <path_27(20), path_19(21)>
    version:9
    ptr-info 0x7f0d4dba79d8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081cf0
    type <pointer_type 0x7f0d4db98540
        type <record_type 0x7f0d4db98498 FILE BLK
            size <integer_cst 0x7f0d4e14e0a8 constant 1728>
            unit-size <integer_cst 0x7f0d4db88858 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4db983f0 fields <field_decl 0x7f0d4db99260 _flags> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f0d4db98540>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4db9e498>>
    var <var_decl 0x7f0d4dbae240 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
    version:10
    ptr-info 0x7f0d4dba79f0>
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:update_krl_from_file========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0d4e0815e8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _1 = time (0B);
    version:1>
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = time (0B);

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function time
 
 Start check Pointer Collect  

======================================================================
_2 = (unsigned int) _1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:9: warning: use location
  115 |         srand(time(NULL));
      |         ^
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_19 = VDEF <.MEM_18(D)>
_1 = time (0B);
_1 = time (0B);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:15: warning: use location
  115 |         srand(time(NULL));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e0815e8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081630
    type <integer_type 0x7f0d4e08e690 unsigned int public unsigned SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e690 precision:32 min <integer_cst 0x7f0d4e079e28 0> max <integer_cst 0x7f0d4e079de0 4294967295>
        pointer_to_this <pointer_type 0x7f0d4e09a690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:9: warning: use location
  115 |         srand(time(NULL));
      |         ^
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:115:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081630
    type <integer_type 0x7f0d4e08e690 unsigned int public unsigned SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e690 precision:32 min <integer_cst 0x7f0d4e079e28 0> max <integer_cst 0x7f0d4e079de0 4294967295>
        pointer_to_this <pointer_type 0x7f0d4e09a690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081750
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _6 = *_5;
    version:6
    ptr-info 0x7f0d4dba79a8>
# VUSE <.MEM_17>
_6 = *_5;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_17>
update_krl_from_file (&pw, _6);
update_krl_from_file (&pw, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:17: warning: use location
  117 |                 update_krl_from_file(&pw, argv[i]);
      |                 ^
this stmt call this function :update_krl_from_file
trace fucntion name:update_krl_from_file 
[40;44m =======trace_function_path update_krl_from_file  function_call count: 12 level :0========  [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
[40;31m  find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_17>
update_krl_from_file (&pw, _6);
update_krl_from_file (&pw, _6);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:117:17: warning: use location
  117 |                 update_krl_from_file(&pw, argv[i]);
      |                 ^
this stmt call this function :update_krl_from_file
trace fucntion name:update_krl_from_file 
[40;44m =======trace_function_path update_krl_from_file  function_call count: 12 level :0========  [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
[40;31m  find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;46m =======add node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081750
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _6 = *_5;
    version:6
    ptr-info 0x7f0d4dba79a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:update_krl_from_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path update_krl_from_file  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strnlen========= [0m
[40;33m =======POP node_fun stack:strnlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:update_krl_from_file========= [0m
[40;42m =======start_check_funciton:update_krl_from_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3a68
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _49 = strdup (file_17(D));
    version:49
    ptr-info 0x7f0d4dba7a98>
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));
_49 = strdup (file_17(D));
In function ‘update_krl_from_file’:
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt call this function :strdup
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_105 = _63;
lto1: warning: use location
path_19 = _105;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
_48 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^
if (_48 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
filename_50 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3a68
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _49 = strdup (file_17(D));
    version:49
    ptr-info 0x7f0d4dba7a98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3af8
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb72d0 path>
    def_stmt path_51 = strchr (filename_50, 47);
    version:51
    ptr-info 0x7f0d4dba7ac8>
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);

 ================== pre trace ptable ================== 
trace fucntion name:strchr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strchr
 
 Start check Pointer Collect  

======================================================================
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3af8
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb72d0 path>
    def_stmt path_51 = strchr (filename_50, 47);
    version:51
    ptr-info 0x7f0d4dba7ac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb318
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7ea0 srclen>
    def_stmt srclen_64 = strlen (filename_60);
    version:64
    ptr-info 0x7f0d4dbb8a40>
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb318
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7ea0 srclen>
    def_stmt srclen_64 = strlen (filename_60);
    version:64
    ptr-info 0x7f0d4dbb8a40>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb360
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7f30 dstlen>
    def_stmt dstlen_65 = strnlen (&ret, 64);
    version:65>
# VUSE <.MEM_85>
dstlen_65 = strnlen (&ret, 64);

 ================== pre trace ptable ================== 
trace fucntion name:strnlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strnlen
 
 Start check Pointer Collect  

======================================================================
_62 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt call this function :strdup
_72 = dstlen_65 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:19: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                   ^
_73 = _72 + 18446744073709551615;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:12: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |            ^
*_74 = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:27:30: warning: use location
   27 |         dst[dstlen+maxlen-1] = '\0';
      |                              ^
if (dstlen_65 == 64)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:8: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_71 = &ret + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_69 = &ret + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_67 = 64 - dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:24: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |                        ^
# VUSE <.MEM_85>
dstlen_65 = strnlen (&ret, 64);
dstlen_65 = strnlen (&ret, 64);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:21:27: warning: use location
   21 |     const size_t dstlen = strnlen(dst, maxlen);
      |                           ^
this stmt call this function :strnlen
trace fucntion name:strnlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb360
    type <integer_type 0x7f0d4db9a930 size_t readonly unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>>
    var <var_decl 0x7f0d4dbb7f30 dstlen>
    def_stmt dstlen_65 = strnlen (&ret, 64);
    version:65>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3e10
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _62 = strdup (&ret);
    version:62
    ptr-info 0x7f0d4dba7b10>
# .MEM_99 = VDEF <.MEM_88>
_62 = strdup (&ret);

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_99 = VDEF <.MEM_88>
_62 = strdup (&ret);
_62 = strdup (&ret);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:63:17: warning: use location
   63 |         return (xstrdup(ret));                          /* allocation site */
      |                 ^
this stmt call this function :strdup
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_105 = _63;
lto1: warning: use location
path_19 = _105;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3e10
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
   
    def_stmt _62 = strdup (&ret);
    version:62
    ptr-info 0x7f0d4dba7b10>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081af8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _3 = strcmp (path_19, "-");
    version:3>
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcmp
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081af8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _3 = strcmp (path_19, "-");
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081ea0
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f0d4dba7a80>
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38>
path_27 = strdup ("(standard input)");
path_27 = strdup ("(standard input)");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:95:24: warning: use location
   95 |                 path = xstrdup("(standard input)");
      |                        ^
this stmt call this function :strdup
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081ea0
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_27 = strdup ("(standard input)");
    version:27
    ptr-info 0x7f0d4dba7a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081e10
    type <pointer_type 0x7f0d4db98540
        type <record_type 0x7f0d4db98498 FILE BLK
            size <integer_cst 0x7f0d4e14e0a8 constant 1728>
            unit-size <integer_cst 0x7f0d4db88858 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4db983f0 fields <field_decl 0x7f0d4db99260 _flags> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f0d4db98540>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4db9e498>>
    var <var_decl 0x7f0d4dbae240 krl_spec>
    def_stmt krl_spec_21 = fopen (path_19, "r");
    version:21
    ptr-info 0x7f0d4dba7a50>
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");

 ================== pre trace ptable ================== 
trace fucntion name:fopen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function fopen
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081e10
    type <pointer_type 0x7f0d4db98540
        type <record_type 0x7f0d4db98498 FILE BLK
            size <integer_cst 0x7f0d4e14e0a8 constant 1728>
            unit-size <integer_cst 0x7f0d4db88858 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4db983f0 fields <field_decl 0x7f0d4db99260 _flags> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f0d4db98540>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4db9e498>>
    var <var_decl 0x7f0d4dbae240 krl_spec>
    def_stmt krl_spec_21 = fopen (path_19, "r");
    version:21
    ptr-info 0x7f0d4dba7a50>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081b88
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081b88
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _5 = rand ();
    version:5>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_6 = _5 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (_6 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:19: warning: use location
  103 |                 if(__RANDBOOL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_45 = VDEF <.MEM_90>
_5 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:103:20: warning: use location
  103 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbba68
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _80 = rand ();
    version:80>
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_81 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_81 = _80 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();
_80 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbba68
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _80 = rand ();
    version:80>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (_81 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:19: warning: use location
   74 |                 if(__RANDBOOL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
_81 = _80 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_109 = VDEF <.MEM_108>
_80 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:74:20: warning: use location
   74 |                 if(__RANDBOOL)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbbaf8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _82 = rand ();
    version:82>
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_83 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();
_82 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbbaf8
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _82 = rand ();
    version:82>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (_83 == 1)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
_83 = _82 % 2;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_106 = VDEF <.MEM_89>
_82 = rand ();
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:70:16: warning: use location
   70 |         while (__RANDBOOL) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081c60
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _8 = strcmp (path_9, "-");
    version:8>
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081c60
    type <integer_type 0x7f0d4e08e5e8 int public SI
        size <integer_cst 0x7f0d4e079df8 constant 32>
        unit-size <integer_cst 0x7f0d4e079e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e5e8 precision:32 min <integer_cst 0x7f0d4e079db0 -2147483648> max <integer_cst 0x7f0d4e079dc8 2147483647>
        pointer_to_this <pointer_type 0x7f0d4e0959d8>>
   
    def_stmt _8 = strcmp (path_9, "-");
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0d4dba1300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f0d4dba7a20>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_102 = VDEF <.MEM_32(D)>
_49 = strdup (file_17(D));
_49 = strdup (file_17(D));
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:45:25: warning: use location
   45 |                 return (xstrdup(filename));             /* allocation site */
      |                         ^
this stmt call this function :strdup
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
_105 = _63;
lto1: warning: use location
path_19 = _105;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:91:16: warning: use location
   91 |         path = tilde_expand_filename(file, pw->pw_uid);
      |                ^
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
_48 = *file_17(D);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:13: warning: use location
   44 |         if (*filename != '~')
      |             ^
if (_48 != 126)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:44:12: warning: use location
   44 |         if (*filename != '~')
      |            ^
filename_50 = file_17(D) + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:46:17: warning: use location
   46 |         filename++;
      |                 ^
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f0d4dba1300 file>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7f0d4dba7a20>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_63 = PHI <_49(3), _62(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>
filename_50 = file_17(D) + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_32(D)>
path_51 = strchr (filename_50, 47);
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>
filename_50 = file_17(D) + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
path_51 = strchr (filename_50, 47);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:48:16: warning: use location
   48 |         path = strchr(filename, '/');
      |                ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 
filename_59 = path_51 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:59:26: warning: use location
   59 |                 filename = path + 1;
      |                          ^
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^
if (path_51 != 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:58:12: warning: use location
   58 |         if (path != NULL)
      |            ^
_55 = path_51 - filename_50;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:30: warning: use location
   50 |                 slash = path - filename;
      |                              ^
_58 = (long unsigned int) _57;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
slash_56 = (u_int) _55;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:50:23: warning: use location
   50 |                 slash = path - filename;
      |                       ^
user[slash_56] = 0;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:54:29: warning: use location
   54 |                 user[slash] = '\0';
      |                             ^
if (slash_56 > 127)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:51:20: warning: use location
   51 |                 if (slash > sizeof(user) - 1)
      |                    ^
_53 = filename_50 < path_51;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:49:34: warning: use location
   49 |         if (path != NULL && path > filename) {          /* ~user/path */
      |                                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3ab0
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_50 = file_17(D) + 1;
    version:50
    ptr-info 0x7f0d4dba7ab0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filename_60 = PHI <filename_50(8), filename_59(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3cf0
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _58 = (long unsigned int) _57;
    version:58>
_58 = (long unsigned int) _57;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
   53 |                 memcpy(user, filename, slash);
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_91 = VDEF <.MEM_32(D)>
memcpy (&user, filename_50, _58);
memcpy (&user, filename_50, _58);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:53:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3cf0
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _58 = (long unsigned int) _57;
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbb3d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_60 = PHI <filename_50(8), filename_59(9)>
    version:60
    ptr-info 0x7f0d4dba7af8>
filename_60 = PHI <filename_50(8), filename_59(9)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_85>
srclen_64 = strlen (filename_60);
srclen_64 = strlen (filename_60);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:20:27: warning: use location
   20 |     const size_t srclen = strlen(src);
      |                           ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
if (srclen_64 < _67)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:23:8: warning: use location
   23 |     if (srclen < maxlen-dstlen) {
      |        ^
_75 = srclen_64 + dstlen_65;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:29:19: warning: use location
   29 |     return dstlen + srclen;
      |                   ^
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----
_98 = _76;
lto1: warning: use location
_61 = _98;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:13: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |             ^
if (_61 > 63)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:60:12: warning: use location
   60 |         if (strlcat(ret, filename, sizeof(ret)) >= sizeof(ret))
      |            ^
_68 = srclen_64 + 1;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
_66 = srclen_64 + 64;
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:22:40: warning: use location
   22 |     if (dstlen == maxlen) return maxlen+srclen;
      |                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbb3d80
    type <pointer_type 0x7f0d4db91b28
        type <integer_type 0x7f0d4db91a80 char readonly public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db91b28>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f0d4dbb71b0 filename>
    def_stmt filename_60 = PHI <filename_50(8), filename_59(9)>
    version:60
    ptr-info 0x7f0d4dba7af8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_76 = PHI <_66(11), _75(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb480
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _69 = &ret + dstlen_65;
    version:69
    ptr-info 0x7f0d4dba7b40>
_69 = &ret + dstlen_65;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
   24 |         memcpy(dst+dstlen, src, srclen+1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb480
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _69 = &ret + dstlen_65;
    version:69
    ptr-info 0x7f0d4dba7b40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb438
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _68 = srclen_64 + 1;
    version:68>
_68 = srclen_64 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_97 = VDEF <.MEM_85>
memcpy (_69, filename_60, _68);
memcpy (_69, filename_60, _68);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:24:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb438
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _68 = srclen_64 + 1;
    version:68>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb510
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _71 = &ret + dstlen_65;
    version:71
    ptr-info 0x7f0d4dba7b58>
_71 = &ret + dstlen_65;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
   26 |         memcpy(dst+dstlen, src, maxlen-1);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb510
    type <pointer_type 0x7f0d4e095000
        type <void_type 0x7f0d4e08ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f0d4e095000>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4e09a9d8>>
   
    def_stmt _71 = &ret + dstlen_65;
    version:71
    ptr-info 0x7f0d4dba7b58>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4dbbb4c8
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _70 = 63;
    version:70>
_70 = 63;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_95 = VDEF <.MEM_85>
memcpy (_71, filename_60, _70);
memcpy (_71, filename_60, _70);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:26:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4dbbb4c8
    type <integer_type 0x7f0d4e08e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e738 precision:64 min <integer_cst 0x7f0d4e079e88 0> max <integer_cst 0x7f0d4e07a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0d4e09a7e0>>
   
    def_stmt _70 = 63;
    version:70>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>
path_19 = _105;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----

======================================================================

 Expand conflict 
 The same function may have multiple branches :strcmp
# VUSE <.MEM_104>
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>
path_19 = _105;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^
this stmt call this function :fopen
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location
this stmt have mutiple branch ---fopen-----
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^
this stmt call this function :fclose
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_3 = strcmp (path_19, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:13: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_3 == 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:92:12: warning: use location
   92 |         if (strcmp(path, "-") == 0) {
      |            ^
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location
this stmt have mutiple branch ---strcmp-----
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081dc8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_19 = _105;
    version:19
    ptr-info 0x7f0d4dba7a38>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
printf ("fopen %s: \n", path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:97:17: warning: use location
   97 |                 fatal("fopen %s: \n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_35 = VDEF <.MEM_104>
krl_spec_21 = fopen (path_19, "r");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:32: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_42 = VDEF <.MEM_90>
fclose (krl_spec_10);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:107:17: warning: use location
  107 |                 fclose(krl_spec);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (krl_spec_21 == 0B)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:96:19: warning: use location
   96 |         } else if ((krl_spec = fopen(path, "r")) == NULL)
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
path_9 = PHI <path_27(20), path_19(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081ca8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_9 = PHI <path_27(20), path_19(21)>
    version:9
    ptr-info 0x7f0d4dba79d8>
path_9 = PHI <path_27(20), path_19(21)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0d4e081ca8
    type <pointer_type 0x7f0d4db981f8
        type <integer_type 0x7f0d4db919d8 char public QI
            size <integer_cst 0x7f0d4e079ca8 constant 8>
            unit-size <integer_cst 0x7f0d4e079cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4e08e3f0 precision:8 min <integer_cst 0x7f0d4db88738 -128> max <integer_cst 0x7f0d4db88720 127>
            pointer_to_this <pointer_type 0x7f0d4db981f8>>
        unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
        pointer_to_this <pointer_type 0x7f0d4db98e70>>
    var <var_decl 0x7f0d4dbae360 path>
    def_stmt path_9 = PHI <path_27(20), path_19(21)>
    version:9
    ptr-info 0x7f0d4dba79d8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: use location
   94 |                 free(path);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_90>
_8 = strcmp (path_9, "-");
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:13: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: ssa_name [0m
if (_8 != 0)
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:106:12: warning: use location
  106 |         if (strcmp(path, "-") != 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_108 = VDEF <.MEM_106>
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:72:17: warning: use location
   72 |                 printf("%s: %s line %lu exceeds size limit\n", __func__,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_46 = VDEF <.MEM_45>
printf ("%s: invalid\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:104:25: warning: use location
  104 |                         fatal("%s: invalid\n", path);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_38 = VDEF <.MEM_104>
free (path_19);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:94:17: warning: free in this location
   94 |                 free(path);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_40 = VDEF <.MEM_28>
printf ("Revoking from %s\n", path_9);
./benchmarks/openssh-portable/leak_10/openssh_leak_10.c:100:17: warning: use location
  100 |                 printf("Revoking from %s\n", path);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0d4e081cf0
    type <pointer_type 0x7f0d4db98540
        type <record_type 0x7f0d4db98498 FILE BLK
            size <integer_cst 0x7f0d4e14e0a8 constant 1728>
            unit-size <integer_cst 0x7f0d4db88858 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f0d4db983f0 fields <field_decl 0x7f0d4db99260 _flags> context <translation_unit_decl 0x7f0d4e084168 ./benchmarks/openssh-portable/leak_10/openssh_leak_10.c>
            pointer_to_this <pointer_type 0x7f0d4db98540>>
        public unsigned DI
        size <integer_cst 0x7f0d4e079bb8 constant 64>
        unit-size <integer_cst 0x7f0d4e079bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f0d4db9e498>>
    var <var_decl 0x7f0d4dbae240 krl_spec>
    def_stmt krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
    version:10
    ptr-info 0x7f0d4dba79f0>
krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:update_krl_from_file========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_3 = (long unsigned int) i_7;
_4 = _3 * 8;
_5 = argv_14(D) + _4;
_6 = *_5;
update_krl_from_file (&pw, _6);
i_16 = i_7 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_7 = PHI <0(2), i_16(3)>
if (i_7 < argc_12(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
pw ={v} {CLOBBER};
return 0;

=======Mapping node_fun:update_krl_from_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 6364742]:
lnum_114 = 0;
_1 = pw_16(D)->pw_uid;
_2 = (unsigned int) _1;
_48 = *file_17(D);
if (_48 != 126)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 2100365]:
_49 = strdup (file_17(D));
goto <bb 19>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 4264377]:
filename_50 = file_17(D) + 1;
path_51 = strchr (filename_50, 47);
_52 = path_51 != 0B;
_53 = filename_50 < path_51;
_54 = _52 & _53;
if (_54 != 0)
  goto <bb 5>; [50.00%]
else
  goto <bb 8>; [50.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 2132189]:
_55 = path_51 - filename_50;
slash_56 = (u_int) _55;
if (slash_56 > 127)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 853]:
printf ("tilde_expand_filename: ~username too long%s\n", "");
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 2131336]:
_57 = _55 & 4294967295;
_58 = (long unsigned int) _57;
memcpy (&user, filename_50, _58);
user[slash_56] = 0;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 4263524]:
if (path_51 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 2984467]:
filename_59 = path_51 + 1;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 4263524]:
# filename_60 = PHI <filename_50(8), filename_59(9)>
srclen_64 = strlen (filename_60);
dstlen_65 = strnlen (&ret, 64);
if (dstlen_65 == 64)
  goto <bb 11>; [20.97%]
else
  goto <bb 12>; [79.03%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 894061]:
_66 = srclen_64 + 64;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 3369463]:
_67 = 64 - dstlen_65;
if (srclen_64 < _67)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1684732]:
_68 = srclen_64 + 1;
_69 = &ret + dstlen_65;
memcpy (_69, filename_60, _68);
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 1684732]:
_70 = 63;
_71 = &ret + dstlen_65;
memcpy (_71, filename_60, _70);
_72 = dstlen_65 + 64;
_73 = _72 + 18446744073709551615;
_74 = &ret + _73;
*_74 = 0;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 3369463]:
_75 = srclen_64 + dstlen_65;

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 4263524]:
# _76 = PHI <_66(11), _75(15)>
_98 = _76;
_61 = _98;
if (_61 > 63)
  goto <bb 17>; [0.04%]
else
  goto <bb 18>; [99.96%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 1705]:
printf ("tilde_expand_filename: Path too long%s\n", "");
exit (1);

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 4261819]:
_62 = strdup (&ret);

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 6362184]:
# _63 = PHI <_49(3), _62(18)>
user ={v} {CLOBBER};
ret ={v} {CLOBBER};
_105 = _63;
path_19 = _105;
_3 = strcmp (path_19, "-");
if (_3 == 0)
  goto <bb 20>; [50.00%]
else
  goto <bb 21>; [50.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 3181092]:
krl_spec_24 = stdin;
free (path_19);
path_27 = strdup ("(standard input)");
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 3181092]:
krl_spec_21 = fopen (path_19, "r");
if (krl_spec_21 == 0B)
  goto <bb 22>; [0.04%]
else
  goto <bb 23>; [99.96%]

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 1272]:
printf ("fopen %s: \n", path_19);
exit (1);

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 6360911]:
# path_9 = PHI <path_27(20), path_19(21)>
# krl_spec_10 = PHI <krl_spec_24(20), krl_spec_21(21)>
_4 = quiet;
if (_4 == 0)
  goto <bb 24>; [33.00%]
else
  goto <bb 27>; [67.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 2099101]:
printf ("Revoking from %s\n", path_9);
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 108546037]:
_5 = rand ();
_6 = _5 % 2;
if (_6 == 1)
  goto <bb 26>; [0.04%]
else
  goto <bb 28>; [99.96%]

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 43418]:
printf ("%s: invalid\n", path_9);
exit (1);

=======is loop:0=========

 bb index 27 
<bb 27> [local count: 6360911]:

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 114863530]:
# lnum_111 = PHI <lnum_113(25), lnum_114(27)>
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 1014686024]:
_77 = lnum_112;
_78 = _77 + 1;
lnum_115 = _78;
_79 = lnum_115;
printf ("%s: %s line %lu exceeds size limit\n", &__func__, path_9, _79);
_80 = rand ();
_81 = _80 % 2;
if (_81 == 1)
  goto <bb 31>; [5.50%]
else
  goto <bb 30>; [94.50%]

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 1073741824]:
# lnum_112 = PHI <lnum_111(28), lnum_115(29)>
_82 = rand ();
_83 = _82 % 2;
if (_83 == 1)
  goto <bb 29>; [94.50%]
else
  goto <bb 31>; [5.50%]

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 114863531]:
# _84 = PHI <0(29), -1(30)>
# lnum_113 = PHI <lnum_115(29), lnum_112(30)>
_110 = _84;
_7 = _110;
if (_7 == 0)
  goto <bb 25>; [94.50%]
else
  goto <bb 32>; [5.50%]

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 6317494]:
_8 = strcmp (path_9, "-");
if (_8 != 0)
  goto <bb 33>; [33.00%]
else
  goto <bb 34>; [67.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [local count: 2084773]:
fclose (krl_spec_10);

=======is loop:0=========

 bb index 34 
<bb 34> [local count: 6317494]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 29 [0m
[40;34m    analyzable ptable point : 25 [0m
[40;34m    used_stmt array stack totalsize of : 0.004904 mb[0m
[40;34m    collect time: : 0.002252 s [0m
[40;34m    algorithm time: 0.147189 s [0m
[40;34m    gimple stmt count : : 97 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:49 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (  9%)   0.00 (  0%)   0.00 (  0%)  2157k ( 80%)
 phase opt and generate             :   0.10 ( 91%)   0.08 (100%)   0.18 (100%)   473k ( 18%)
 callgraph functions expansion      :   0.03 ( 27%)   0.01 ( 12%)   0.02 ( 11%)   328k ( 12%)
 ipa lto gimple in                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    76k (  3%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    17k (  1%)
 jump                               :   0.01 (  9%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 forward prop                       :   0.01 (  9%)   0.00 (  0%)   0.00 (  0%)  1072  (  0%)
 LRA non-specific                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  2360  (  0%)
 plugin execution                   :   0.07 ( 64%)   0.07 ( 88%)   0.15 ( 83%)  1528  (  0%)
 initialize rtl                     :   0.01 (  9%)   0.01 ( 12%)   0.00 (  0%)    12k (  0%)
 TOTAL                              :   0.11          0.08          0.18         2696k
