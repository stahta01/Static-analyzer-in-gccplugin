In file included from ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:9:
./benchmarks/openssh-portable/leak_6/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function ‘sshbuf_get_string_direct’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: implicit declaration of function ‘sshbuf_peek_string_direct’; did you mean ‘sshbuf_get_string_direct’? [-Wimplicit-function-declaration]
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~
      |                  sshbuf_get_string_direct
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  144 |                 memcpy(*valp, p, len);
      |                 ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:10:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
    9 | #include "../openssh.h"
  +++ |+#include <string.h>
   10 | 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  144 |                 memcpy(*valp, p, len);
      |                 ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:13: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |             ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:13: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:25: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  196 |         size_t siglen = strlen(sign);
      |                         ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:25: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:25: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:25: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:198:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  198 |         srand(time(NULL));
      |               ^~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.4%|          |
nothrow                          |      |      |      |      |     -1.4%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -3.5%|          |
forwprop                         |      |      |      |      |     -3.6%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:ssh_ed25519_verify=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 4
succs:= 4
succs:= 5
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 7
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 5
succs:= 7
succs:= 9
succs:= 10
succs:= 2
succs:= 10
=======node_fun:sshbuf_get_cstring=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 7
succs:= 8
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 8
succs:= 12
succs:= 6
succs:= 7
succs:= 12
=======node_fun:sshbuf_peek_string_direct=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 8
--------GIMPLE Cond -------
succs:= 8
succs:= 10
succs:= 10
=======node_fun:sshbuf_get_string_direct=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 7
succs:= 9
succs:= 6
succs:= 9
=======node_fun:sshbuf_from=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
=======node_fun:sshbuf_ptr=========

=======node_fun:sshbuf_len=========

===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = time (0B);
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
# .MEM_16 = VDEF <.MEM_13>
printf ("no data %s\n", _3);
# VUSE <.MEM_13>
datalen_10 = strlen (data_9);
# .MEM_14 = VDEF <.MEM_13>
ssh_ed25519_verify (&key, "key:ssh-ed25519", 15, data_9, datalen_10);
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
# .MEM_31 = VDEF <.MEM_30>
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
# VUSE <.MEM_31>
_2 = strcmp ("ssh-ed25519", _1);
 <var_decl 0x7f06ef61a480 ktype
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
    addressable unsigned DI ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:158:8 size <integer_cst 0x7f06efad4bb8 64> unit-size <integer_cst 0x7f06efad4bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f06ef607000 ssh_ed25519_verify> chain <var_decl 0x7f06ef61a3f0 sigblob>>
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
# .MEM_37 = VDEF <.MEM_36>
_3 = malloc (_2);
# .MEM_41 = VDEF <.MEM_38>
printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 141, &__func__);
# .MEM_42 = VDEF <.MEM_41>
printf ("SSH_ERR_ALLOC_FAIL");
# .MEM_43 = VDEF <.MEM_42>
__builtin_putchar (10);
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
# VUSE <.MEM_16>
_1 = sshbuf_len (buf_10(D));
# .MEM_24 = VDEF <.MEM_16>
printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 108, &__func__);
# .MEM_25 = VDEF <.MEM_24>
printf ("SSH_ERR_MESSAGE_INCOMPLETE");
# .MEM_26 = VDEF <.MEM_25>
__builtin_putchar (10);
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ssh_ed25519_verify========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ssh_ed25519_verify  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
if (r_15 < 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |            ^
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 11
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_cstring========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path sshbuf_get_cstring  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
if (r_15 < 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |            ^
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 11
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_cstring========= [0m
[40;42m =======start_check_funciton:sshbuf_get_cstring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f318
    type <pointer_type 0x7f06efaf0000
        type <void_type 0x7f06efae9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f06efaf0000>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06efaf59d8>>
   
    def_stmt _3 = malloc (_2);
    version:3
    ptr-info 0x7f06ef614af8>
# .MEM_37 = VDEF <.MEM_36>
_3 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                            ^
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
_3 = malloc (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:30: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f318
    type <pointer_type 0x7f06efaf0000
        type <void_type 0x7f06efae9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f06efaf0000>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06efaf59d8>>
   
    def_stmt _3 = malloc (_2);
    version:3
    ptr-info 0x7f06ef614af8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:18: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
if (r_27 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |            ^
if (r_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
Cond in fucntion sshbuf_get_cstring basic block 7
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 14
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:18: warning: use location
  134 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:18: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
if (r_27 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |            ^
if (r_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
Cond in fucntion sshbuf_get_cstring basic block 7
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 14
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:18: warning: use location
  134 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f2d0
    type <integer_type 0x7f06efae97e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9738 precision:64 min <integer_cst 0x7f06efad4e88 0> max <integer_cst 0x7f06efad5500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f06efaf57e0>>
   
    def_stmt _2 = _1 + 1;
    version:2>
_2 = _1 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = malloc (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:30: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                              ^
this stmt is child function---malloc-----

 ================== trace ================== 
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f2d0
    type <integer_type 0x7f06efae97e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9738 precision:64 min <integer_cst 0x7f06efad4e88 0> max <integer_cst 0x7f06efad5500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f06efaf57e0>>
   
    def_stmt _2 = _1 + 1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0f20
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06efcd0f00 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0fc0
    type <pointer_type 0x7f06ef60a498
        type <array_type 0x7f06ef606000 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4900 constant 152>
            unit-size <integer_cst 0x7f06ef5f48b8 constant 19>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef604f18>
            pointer_to_this <pointer_type 0x7f06ef60a498>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef61bdc0 type <array_type 0x7f06ef606000>
        readonly constant static "SSH_ERR_ALLOC_FAIL\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06ef614738 type <integer_type 0x7f06efae95e8 int> constant 10>

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f3a8
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _5 = stdout;
    version:5
    ptr-info 0x7f06ef614b28>
# VUSE <.MEM_43>
_5 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
fflush (_5);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:25: warning: use location
  141 |                         SSHBUF_DBG(("SSH_ERR_ALLOC_FAIL"));
      |                         ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
fflush (_5);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:25: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f3a8
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _5 = stdout;
    version:5
    ptr-info 0x7f06ef614b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f480
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
   
    def_stmt _8 = *valp_18(D);
    version:8
    ptr-info 0x7f06ef614b58>
# VUSE <.MEM_38>
_8 = *valp_18(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
memcpy (_8, _7, _6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: use location
  144 |                 memcpy(*valp, p, len);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
memcpy (_8, _7, _6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f480
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
   
    def_stmt _8 = *valp_18(D);
    version:8
    ptr-info 0x7f06ef614b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_cstring========= [0m
[40;42m =======pre add _ fucntion:sshbuf_from========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path sshbuf_from  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:sshbuf_from========= [0m
[40;42m =======start_check_funciton:sshbuf_from========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62baf8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef629360 ret>
    def_stmt ret_13 = calloc (72, 1);
    version:13
    ptr-info 0x7f06ef614d08>
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_6 = PHI <0B(4), ret_13(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->d = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:16: warning: use location
   72 |         ret->d = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->d = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->cd = blob_9(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:17: warning: use location
   71 |         ret->cd = blob;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->cd = blob_9(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = blob_9(D) == 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:18: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_3 = _1 | _2;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:26: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_3 != 0)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:12: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |            ^
if (_3 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:12: warning: use location
Cond in fucntion sshbuf_from basic block 2
 ================== possible direct basic block ================= 
from sshbuf_from basic block 4
 ================== possible direct basic block ================= 
from sshbuf_from basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->parent = 0B;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:70:21: warning: use location
   70 |         ret->parent = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->refcount = 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:69:23: warning: use location
   69 |         ret->refcount = 1;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->readonly = 1;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:68:23: warning: use location
   68 |         ret->readonly = 1;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->alloc = _5;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:20: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->alloc = _5;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->size = _4;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:32: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = buf_4(D)->size;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:50:19: warning: use location
   50 |         return buf->size - buf->off;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_5 = ret_13->size;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:25: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->max_size = len_10(D);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:48: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_2 = len_10(D) > 134217728;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:33: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = ret_13->max_size;
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:37: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
if (ret_13 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:51: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                                                   ^
if (ret_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:51: warning: use location
Cond in fucntion sshbuf_from basic block 3
 ================== possible direct basic block ================= 
from sshbuf_from basic block 4
 ================== possible direct basic block ================= 
from sshbuf_from basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
ret_13 = calloc (72, 1);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:65:20: warning: use location
   65 |             (ret = calloc(sizeof(*ret), 1)) == NULL)    /* allocation site */
      |                    ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62baf8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef629360 ret>
    def_stmt ret_13 = calloc (72, 1);
    version:13
    ptr-info 0x7f06ef614d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06ef614900 type <integer_type 0x7f06efae97e0 long unsigned int> constant 72>
[40;33m =======POP node_fun stack:sshbuf_from========= [0m
[40;42m =======pre_check_funciton:ssh_ed25519_verify========= [0m
[40;42m =======start_check_funciton:ssh_ed25519_verify========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06efadcca8
    type <pointer_type 0x7f06ef5fddc8
        type <integer_type 0x7f06ef5fdd20 u_char readonly unsigned QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06efad4cd8 0> max <integer_cst 0x7f06efad4c78 255> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef5fddc8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef5fd540>>
    var <parm_decl 0x7f06ef610380 signature>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f06ef614ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:18: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |                  ^
this stmt is child function---sshbuf_from-----

 ================== trace ================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
free (b_18);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:168:18: warning: use location
  168 |             (r = sshbuf_get_string_direct(b, &sigblob, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_47>
return _13;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
_9 = PHI <-2(2), -10(10), r_8(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 4
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 5
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:18: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                  ^
this stmt is child function---sshbuf_get_cstring-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_cstring 
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (b_18 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
if (b_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 2
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 12
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadcca8
    type <pointer_type 0x7f06ef5fddc8
        type <integer_type 0x7f06ef5fdd20 u_char readonly unsigned QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06efad4cd8 0> max <integer_cst 0x7f06efad4c78 255> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef5fddc8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef5fd540>>
    var <parm_decl 0x7f06ef610380 signature>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f06ef614ac8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));

 ================== trace ptable================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sshbuf_from-----
this other function ------sshbuf_from-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:18: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |                  ^
this stmt is child function---sshbuf_from-----

 ================== trace ================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
free (b_18);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:168:18: warning: use location
  168 |             (r = sshbuf_get_string_direct(b, &sigblob, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_47>
return _13;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
_9 = PHI <-2(2), -10(10), r_8(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 4
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 5
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:18: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                  ^
this stmt is child function---sshbuf_get_cstring-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_cstring 
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (b_18 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
if (b_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 2
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 12
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));

 ================== trace ptable================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sshbuf_from-----
this other function ------sshbuf_from-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:18: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |                  ^
this stmt is child function---sshbuf_from-----

 ================== trace ================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
free (b_18);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:168:18: warning: use location
  168 |             (r = sshbuf_get_string_direct(b, &sigblob, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_47>
return _13;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
_9 = PHI <-2(2), -10(10), r_8(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 4
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 5
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:18: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                  ^
this stmt is child function---sshbuf_get_cstring-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_cstring 
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘ssh_ed25519_verify’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (b_18 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
if (b_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 2
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 12
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0da0
    type <pointer_type 0x7f06ef60b0a8
        type <array_type 0x7f06ef60b000 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a68 constant 96>
            unit-size <integer_cst 0x7f06ef5f4a50 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef60af18>
            pointer_to_this <pointer_type 0x7f06ef60b0a8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef61b640 type <array_type 0x7f06ef60b000>
        readonly constant static "ssh-ed25519\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ssh_ed25519_verify========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06efad4fc0 type <pointer_type 0x7f06efaf0000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f06efadc678
    type <integer_type 0x7f06efae9690 unsigned int public unsigned SI
        size <integer_cst 0x7f06efad4df8 constant 32>
        unit-size <integer_cst 0x7f06efad4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9690 precision:32 min <integer_cst 0x7f06efad4e28 0> max <integer_cst 0x7f06efad4de0 4294967295>
        pointer_to_this <pointer_type 0x7f06efaf5690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:198:9: warning: use location
  198 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
# .MEM_13 = VDEF <.MEM_12>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:198:9: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadc678
    type <integer_type 0x7f06efae9690 unsigned int public unsigned SI
        size <integer_cst 0x7f06efad4df8 constant 32>
        unit-size <integer_cst 0x7f06efad4e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9690 precision:32 min <integer_cst 0x7f06efad4e28 0> max <integer_cst 0x7f06efad4de0 4294967295>
        pointer_to_this <pointer_type 0x7f06efaf5690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0bc0
    type <pointer_type 0x7f06ef60b0a8
        type <array_type 0x7f06ef60b000 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a68 constant 96>
            unit-size <integer_cst 0x7f06ef5f4a50 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef60af18>
            pointer_to_this <pointer_type 0x7f06ef60b0a8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef615f78 type <array_type 0x7f06ef60b000>
        readonly constant static "no data %s\012\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:201:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:201:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:201:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06efadc798
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
    var <var_decl 0x7f06f037cd80 data>
    def_stmt data_9 = MEM[(char * *)argv_8(D) + 8B];
    version:9
    ptr-info 0x7f06ef614a80>
# VUSE <.MEM_13>
data_9 = MEM[(char * *)argv_8(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
datalen_10 = strlen (data_9);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:203:19: warning: use location
  203 |         datalen = strlen(data);
      |                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
ssh_ed25519_verify (&key, "key:ssh-ed25519", 15, data_9, datalen_10);
bb index := 4
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
ssh_ed25519_verify (&key, "key:ssh-ed25519", 15, data_9, datalen_10);
bb index := 4
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
ssh_ed25519_verify (&key, "key:ssh-ed25519", 15, data_9, datalen_10);
bb index := 4
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================
ssh_ed25519_verify (&key, "key:ssh-ed25519", 15, data_9, datalen_10);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:204:9: warning: use location
  204 |         ssh_ed25519_verify(&key, sign, siglen, data, datalen);
      |         ^
this stmt is child function---ssh_ed25519_verify-----

 ================== trace ================== 
trace fucntion name:ssh_ed25519_verify 
[40;44m =======trace_function_path ssh_ed25519_verify  function_call count: 5 level :0========  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
[40;31m  find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
# .MEM_33 = VDEF <.MEM_32>
free (_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (_6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:9: warning: use location
  187 |         free(ktype);
      |         ^
[40;36m ======= node_fun:ssh_ed25519_verify========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_get_cstring========= [0m
sshbuf_get_cstring this fucntion return value is heap-object 
ssh_ed25519_verify this fucntion return value is heap-object sshbuf_get_cstring
[40;46m =======add node_fun stack:sshbuf_get_cstring========= [0m
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_from========= [0m
sshbuf_from this fucntion return value is heap-object 
ssh_ed25519_verify this fucntion return value is heap-object sshbuf_from
[40;46m =======add node_fun stack:sshbuf_from========= [0m
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with data ========= [0m
[40;36m ======= relate stmt argument:data ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadc798
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
    var <var_decl 0x7f06f037cd80 data>
    def_stmt data_9 = MEM[(char * *)argv_8(D) + 8B];
    version:9
    ptr-info 0x7f06ef614a80>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0c40
    type <pointer_type 0x7f06ef60b690
        type <record_type 0x7f06ef60ab28 sshkey BLK
            size <integer_cst 0x7f06efaf2000 constant 512>
            unit-size <integer_cst 0x7f06efba9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef60ab28 fields <field_decl 0x7f06ef605da8 type> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef60b690>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f06f037ce10 key type <record_type 0x7f06ef60ab28 sshkey>
        addressable BLK ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:193:19 size <integer_cst 0x7f06efaf2000 512> unit-size <integer_cst 0x7f06efba9090 64>
        align:64 warn_if_not_align:0 context <function_decl 0x7f06ef607100 main>
        chain <var_decl 0x7f06f037cd80 data type <pointer_type 0x7f06ef6049d8>
            unsigned DI ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:195:8 size <integer_cst 0x7f06efad4bb8 64> unit-size <integer_cst 0x7f06efad4bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f06ef607100 main> chain <var_decl 0x7f06f037ccf0 datalen>>>
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:204:21 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:204:21 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:204:21>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:ssh_ed25519_verify========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ssh_ed25519_verify  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
if (r_15 < 0)
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |            ^
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 11
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_cstring========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path sshbuf_get_cstring  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
if (r_15 < 0)
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |            ^
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 11
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_cstring========= [0m
[40;42m =======start_check_funciton:sshbuf_get_cstring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f318
    type <pointer_type 0x7f06efaf0000
        type <void_type 0x7f06efae9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f06efaf0000>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06efaf59d8>>
   
    def_stmt _3 = malloc (_2);
    version:3
    ptr-info 0x7f06ef614af8>
# .MEM_37 = VDEF <.MEM_36>
_3 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                            ^
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
_3 = malloc (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:30: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f318
    type <pointer_type 0x7f06efaf0000
        type <void_type 0x7f06efae9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f06efaf0000>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06efaf59d8>>
   
    def_stmt _3 = malloc (_2);
    version:3
    ptr-info 0x7f06ef614af8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:18: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
if (r_27 != 0)
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |            ^
if (r_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
Cond in fucntion sshbuf_get_cstring basic block 7
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 14
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:18: warning: use location
  134 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:18: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
if (r_27 != 0)
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |            ^
if (r_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
Cond in fucntion sshbuf_get_cstring basic block 7
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 14
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_cstring’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:18: warning: use location
  134 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f2d0
    type <integer_type 0x7f06efae97e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9738 precision:64 min <integer_cst 0x7f06efad4e88 0> max <integer_cst 0x7f06efad5500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f06efaf57e0>>
   
    def_stmt _2 = _1 + 1;
    version:2>
_2 = _1 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = malloc (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:30: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                              ^
this stmt is child function---malloc-----

 ================== trace ================== 
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f2d0
    type <integer_type 0x7f06efae97e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9738 precision:64 min <integer_cst 0x7f06efad4e88 0> max <integer_cst 0x7f06efad5500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f06efaf57e0>>
   
    def_stmt _2 = _1 + 1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0f20
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06efcd0f00 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0fc0
    type <pointer_type 0x7f06ef60a498
        type <array_type 0x7f06ef606000 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4900 constant 152>
            unit-size <integer_cst 0x7f06ef5f48b8 constant 19>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef604f18>
            pointer_to_this <pointer_type 0x7f06ef60a498>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef61bdc0 type <array_type 0x7f06ef606000>
        readonly constant static "SSH_ERR_ALLOC_FAIL\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06ef614738 type <integer_type 0x7f06efae95e8 int> constant 10>

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f3a8
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _5 = stdout;
    version:5
    ptr-info 0x7f06ef614b28>
# VUSE <.MEM_43>
_5 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
fflush (_5);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:25: warning: use location
  141 |                         SSHBUF_DBG(("SSH_ERR_ALLOC_FAIL"));
      |                         ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
fflush (_5);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:25: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f3a8
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _5 = stdout;
    version:5
    ptr-info 0x7f06ef614b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f480
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
   
    def_stmt _8 = *valp_18(D);
    version:8
    ptr-info 0x7f06ef614b58>
# VUSE <.MEM_38>
_8 = *valp_18(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
memcpy (_8, _7, _6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: use location
  144 |                 memcpy(*valp, p, len);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
memcpy (_8, _7, _6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f480
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
   
    def_stmt _8 = *valp_18(D);
    version:8
    ptr-info 0x7f06ef614b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_cstring========= [0m
[40;42m =======pre add _ fucntion:sshbuf_from========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path sshbuf_from  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:sshbuf_from========= [0m
[40;42m =======start_check_funciton:sshbuf_from========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62baf8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef629360 ret>
    def_stmt ret_13 = calloc (72, 1);
    version:13
    ptr-info 0x7f06ef614d08>
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_6 = PHI <0B(4), ret_13(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->d = 0B;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:16: warning: use location
   72 |         ret->d = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->d = 0B;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->cd = blob_9(D);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:17: warning: use location
   71 |         ret->cd = blob;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->cd = blob_9(D);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = blob_9(D) == 0B;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:18: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_3 = _1 | _2;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:26: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_3 != 0)
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:12: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |            ^
if (_3 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:12: warning: use location
Cond in fucntion sshbuf_from basic block 2
 ================== possible direct basic block ================= 
from sshbuf_from basic block 4
 ================== possible direct basic block ================= 
from sshbuf_from basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->parent = 0B;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:70:21: warning: use location
   70 |         ret->parent = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->refcount = 1;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:69:23: warning: use location
   69 |         ret->refcount = 1;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->readonly = 1;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:68:23: warning: use location
   68 |         ret->readonly = 1;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->alloc = _5;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:20: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->alloc = _5;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->size = _4;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:32: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = buf_4(D)->size;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:50:19: warning: use location
   50 |         return buf->size - buf->off;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_5 = ret_13->size;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:25: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->max_size = len_10(D);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:48: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_2 = len_10(D) > 134217728;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:33: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = ret_13->max_size;
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:37: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
if (ret_13 == 0B)
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:51: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                                                   ^
if (ret_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:51: warning: use location
Cond in fucntion sshbuf_from basic block 3
 ================== possible direct basic block ================= 
from sshbuf_from basic block 4
 ================== possible direct basic block ================= 
from sshbuf_from basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_from’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
ret_13 = calloc (72, 1);
In function ‘ssh_ed25519_verify’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:65:20: warning: use location
   65 |             (ret = calloc(sizeof(*ret), 1)) == NULL)    /* allocation site */
      |                    ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62baf8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef629360 ret>
    def_stmt ret_13 = calloc (72, 1);
    version:13
    ptr-info 0x7f06ef614d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06ef614900 type <integer_type 0x7f06efae97e0 long unsigned int> constant 72>
[40;33m =======POP node_fun stack:sshbuf_from========= [0m
[40;42m =======pre_check_funciton:ssh_ed25519_verify========= [0m
[40;42m =======start_check_funciton:ssh_ed25519_verify========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06efadcca8
    type <pointer_type 0x7f06ef5fddc8
        type <integer_type 0x7f06ef5fdd20 u_char readonly unsigned QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06efad4cd8 0> max <integer_cst 0x7f06efad4c78 255> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef5fddc8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef5fd540>>
    var <parm_decl 0x7f06ef610380 signature>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f06ef614ac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:18: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |                  ^
this stmt is child function---sshbuf_from-----

 ================== trace ================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:168:18: warning: use location
  168 |             (r = sshbuf_get_string_direct(b, &sigblob, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location
this stmt have mutiple branch --------
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 4
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 5
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:18: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                  ^
this stmt is child function---sshbuf_get_cstring-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_cstring 
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with signature ========= [0m
[40;36m ======= relate stmt argument:signature ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
if (b_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 2
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 12
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadcca8
    type <pointer_type 0x7f06ef5fddc8
        type <integer_type 0x7f06ef5fdd20 u_char readonly unsigned QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06efad4cd8 0> max <integer_cst 0x7f06efad4c78 255> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef5fddc8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef5fd540>>
    var <parm_decl 0x7f06ef610380 signature>
    def_stmt GIMPLE_NOP
    version:15
    ptr-info 0x7f06ef614ac8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));

 ================== trace ptable================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sshbuf_from-----
this other function ------sshbuf_from-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:18: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |                  ^
this stmt is child function---sshbuf_from-----

 ================== trace ================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:168:18: warning: use location
  168 |             (r = sshbuf_get_string_direct(b, &sigblob, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location
this stmt have mutiple branch --------
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 4
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 5
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:18: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                  ^
this stmt is child function---sshbuf_get_cstring-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_cstring 
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
if (b_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 2
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 12
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));

 ================== trace ptable================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sshbuf_from-----
this other function ------sshbuf_from-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:18: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |                  ^
this stmt is child function---sshbuf_from-----

 ================== trace ================== 
trace fucntion name:sshbuf_from 
[40;44m =======trace_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_from========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:168:18: warning: use location
  168 |             (r = sshbuf_get_string_direct(b, &sigblob, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
bb index := 11
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 6

======================================================================
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = PHI <-2(2), -10(10), r_8(11)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location
this stmt have mutiple branch --------
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 4
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 5
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_29>
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
bb index := 3
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:18: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                  ^
this stmt is child function---sshbuf_get_cstring-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_cstring 
[40;44m =======trace_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_cstring========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_18 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
if (b_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
Cond in fucntion ssh_ed25519_verify basic block 2
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 12
 ================== possible direct basic block ================= 
from ssh_ed25519_verify basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06efadcd38
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef61a510 b>
    def_stmt b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
    version:18
    ptr-info 0x7f06ef614ae0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: use location
  186 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_7 = PHI <r_20(3), r_22(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_25>
free (b_18);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:9: warning: Use after free error!: free location 
  186 |         free(b);
      |         ^
_9 = PHI <-2(2), -10(10), r_8(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 10
if (_5 <= datalen_23(D))
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:12: warning: use location
  179 |         if (datalen >= SIZE_MAX - len) {
      |            ^
	relate logic:= 0
=succs:= 9
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:177:17: warning: use location
  177 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 8
if (_3 > 64)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:175:12: warning: use location
  175 |         if (len > crypto_sign_ed25519_BYTES) {
      |            ^
	relate logic:= 0
=succs:= 7
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:172:17: warning: use location
  172 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 6
if (_2 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:12: warning: use location
  170 |         if (strcmp("ssh-ed25519", ktype) != 0) {
      |            ^
	relate logic:= 0
=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:169:17: warning: use location
  169 |                 goto out;
      |                 ^
	relate logic:= 1
=succs:= 4
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:60: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |                                                            ^
	relate logic:= 0
=succs:= 3
if (r_20 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:12: warning: use location
  167 |         if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
      |            ^
	relate logic:= 0
=succs:= 2
if (b_18 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:12: warning: use location
  165 |         if ((b = sshbuf_from(signature, signaturelen)) == NULL)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0da0
    type <pointer_type 0x7f06ef60b0a8
        type <array_type 0x7f06ef60b000 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a68 constant 96>
            unit-size <integer_cst 0x7f06ef5f4a50 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef60af18>
            pointer_to_this <pointer_type 0x7f06ef60b0a8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef61b640 type <array_type 0x7f06ef60b000>
        readonly constant static "ssh-ed25519\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:ssh_ed25519_verify========= [0m
[40;44m =======node_fun:sshbuf_get_cstring========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_get_cstring  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_47>
return _13;
In function ‘sshbuf_get_string_direct’:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
if (r_15 < 0)
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |            ^
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 11
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘sshbuf_get_cstring’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_cstring========= [0m
[40;42m =======start_check_funciton:sshbuf_get_cstring========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f318
    type <pointer_type 0x7f06efaf0000
        type <void_type 0x7f06efae9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f06efaf0000>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06efaf59d8>>
   
    def_stmt _3 = malloc (_2);
    version:3
    ptr-info 0x7f06ef614af8>
# .MEM_37 = VDEF <.MEM_36>
_3 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                            ^
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
_3 = malloc (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:30: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                              ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f318
    type <pointer_type 0x7f06efaf0000
        type <void_type 0x7f06efae9f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f06efaf0000>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06efaf59d8>>
   
    def_stmt _3 = malloc (_2);
    version:3
    ptr-info 0x7f06ef614af8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:18: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
if (r_27 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |            ^
if (r_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
Cond in fucntion sshbuf_get_cstring basic block 7
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 14
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:18: warning: use location
  134 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:18: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |                  ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_27 != 0)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================
if (r_27 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
  137 |         if ((r = sshbuf_skip_string(buf)) != 0)
      |            ^
if (r_27 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:12: warning: use location
Cond in fucntion sshbuf_get_cstring basic block 7
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 14
 ================== possible direct basic block ================= 
from sshbuf_get_cstring basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_29>
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:18: warning: use location
  134 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f6c0
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610600 buf>
    def_stmt GIMPLE_NOP
    version:23
    ptr-info 0x7f06ef614bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f2d0
    type <integer_type 0x7f06efae97e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9738 precision:64 min <integer_cst 0x7f06efad4e88 0> max <integer_cst 0x7f06efad5500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f06efaf57e0>>
   
    def_stmt _2 = _1 + 1;
    version:2>
_2 = _1 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = malloc (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:30: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                              ^
this stmt is child function---malloc-----

 ================== trace ================== 
*valp_18(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:28: warning: use location
  140 |                 if ((*valp = malloc(len + 1)) == NULL) {        /* allocation site */
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f2d0
    type <integer_type 0x7f06efae97e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae9738 precision:64 min <integer_cst 0x7f06efad4e88 0> max <integer_cst 0x7f06efad5500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f06efaf57e0>>
   
    def_stmt _2 = _1 + 1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0f20
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06efcd0f00 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06efcd0fc0
    type <pointer_type 0x7f06ef60a498
        type <array_type 0x7f06ef606000 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4900 constant 152>
            unit-size <integer_cst 0x7f06ef5f48b8 constant 19>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef604f18>
            pointer_to_this <pointer_type 0x7f06ef60a498>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef61bdc0 type <array_type 0x7f06ef606000>
        readonly constant static "SSH_ERR_ALLOC_FAIL\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06ef614738 type <integer_type 0x7f06efae95e8 int> constant 10>

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f3a8
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _5 = stdout;
    version:5
    ptr-info 0x7f06ef614b28>
# VUSE <.MEM_43>
_5 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
fflush (_5);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:25: warning: use location
  141 |                         SSHBUF_DBG(("SSH_ERR_ALLOC_FAIL"));
      |                         ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_44 = VDEF <.MEM_43>
fflush (_5);
fflush (_5);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:25: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f3a8
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _5 = stdout;
    version:5
    ptr-info 0x7f06ef614b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61f480
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
   
    def_stmt _8 = *valp_18(D);
    version:8
    ptr-info 0x7f06ef614b58>
# VUSE <.MEM_38>
_8 = *valp_18(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
memcpy (_8, _7, _6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: use location
  144 |                 memcpy(*valp, p, len);
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_39 = VDEF <.MEM_38>
memcpy (_8, _7, _6);
memcpy (_8, _7, _6);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:17: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61f480
    type <pointer_type 0x7f06ef6049d8
        type <integer_type 0x7f06ef5fd7e0 char public QI
            size <integer_cst 0x7f06efad4ca8 constant 8>
            unit-size <integer_cst 0x7f06efad4cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06efae93f0 precision:8 min <integer_cst 0x7f06ef5f4768 -128> max <integer_cst 0x7f06ef5f4750 127>
            pointer_to_this <pointer_type 0x7f06ef6049d8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f06ef604dc8>>
   
    def_stmt _8 = *valp_18(D);
    version:8
    ptr-info 0x7f06ef614b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_cstring========= [0m
[40;44m =======node_fun:sshbuf_peek_string_direct========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
In function ‘sshbuf_peek_string_direct’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======node_fun:sshbuf_get_string_direct========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;33m =======POP node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
In function ‘sshbuf_get_string_direct’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘sshbuf_get_string_direct’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = sshbuf_len (buf_10(D));
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:13: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |             ^
this stmt is child function---sshbuf_len-----

 ================== trace ================== 
trace fucntion name:sshbuf_len 
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
if (_1 <= 3)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
  107 |         if (sshbuf_len(buf) < 4) {
      |            ^
if (_1 <= 3)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:107:12: warning: use location
Cond in fucntion sshbuf_peek_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 7
 ================== possible direct basic block ================= 
from sshbuf_peek_string_direct basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return 0;
In function ‘sshbuf_peek_string_direct’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_15>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_36>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
p_11 = sshbuf_ptr (buf_10(D));
bb index := 2
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_15>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
p_11 = sshbuf_ptr (buf_10(D));
In function ‘sshbuf_get_string_direct’:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:101:27: warning: use location
  101 |         const u_char *p = sshbuf_ptr(buf);
      |                           ^
this stmt is child function---sshbuf_ptr-----

 ================== trace ================== 
trace fucntion name:sshbuf_ptr 
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = p_11 + 4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:27: warning: use location
  117 |                 *valp = p + 4;
      |                           ^
*valp_12(D) = _3;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:117:23: warning: use location
  117 |                 *valp = p + 4;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fe58
    type <pointer_type 0x7f06ef6091f8
        type <record_type 0x7f06ef609150 sshbuf readonly BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6091f8>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610780 buf>
    def_stmt GIMPLE_NOP
    version:10
    ptr-info 0x7f06ef614c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef623100
    type <pointer_type 0x7f06ef6099d8
        type <array_type 0x7f06ef609930 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f49c0 constant 88>
            unit-size <integer_cst 0x7f06ef5f49a8 constant 11>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609888>
            pointer_to_this <pointer_type 0x7f06ef6099d8>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6230e0 type <array_type 0x7f06ef609930>
        readonly constant static "%s:%d %s: \000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f06ef6231a0
    type <pointer_type 0x7f06ef60a000
        type <array_type 0x7f06ef609f18 type <integer_type 0x7f06ef5fd7e0 char>
            BLK
            size <integer_cst 0x7f06ef5f4a38 constant 216>
            unit-size <integer_cst 0x7f06ef5f4a20 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f06ef609e70>
            pointer_to_this <pointer_type 0x7f06ef60a000>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f06ef6204b0 type <array_type 0x7f06ef609f18>
        readonly constant static "SSH_ERR_MESSAGE_INCOMPLETE\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>
# VUSE <.MEM_26>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
  108 |                 SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
      |                 ^
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:17: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef61fd80
    type <pointer_type 0x7f06ef604d20
        type <record_type 0x7f06ef604c78 FILE BLK
            size <integer_cst 0x7f06efba90a8 constant 1728>
            unit-size <integer_cst 0x7f06ef5f4888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef604bd0 fields <field_decl 0x7f06ef605260 _flags> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef604d20>>
        unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f06ef60a150>>
   
    def_stmt _2 = stdout;
    version:2
    ptr-info 0x7f06ef614be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:18: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |                  ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__builtin_putchar========= [0m
[40;46m =======add node_fun stack:__builtin_putchar========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:sshbuf_len========= [0m
[40;46m =======add node_fun stack:sshbuf_len========= [0m
[40;44m =======trace_function_path sshbuf_len  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_len========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_ptr========= [0m
[40;46m =======add node_fun stack:sshbuf_ptr========= [0m
[40;44m =======trace_function_path sshbuf_ptr  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:sshbuf_ptr========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================
if (r_15 < 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
   87 |         if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
      |            ^
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:12: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 11
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62b4c8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f06ef610900 buf>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7f06ef614cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======node_fun:sshbuf_from========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_from  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:sshbuf_from========= [0m
[40;42m =======start_check_funciton:sshbuf_from========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f06ef62baf8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef629360 ret>
    def_stmt ret_13 = calloc (72, 1);
    version:13
    ptr-info 0x7f06ef614d08>
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_6 = PHI <0B(4), ret_13(5)>
In function ‘sshbuf_from’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->d = 0B;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:16: warning: use location
   72 |         ret->d = NULL;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
ret_13->d = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->d = 0B;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->cd = blob_9(D);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:17: warning: use location
   71 |         ret->cd = blob;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
ret_13->cd = blob_9(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->cd = blob_9(D);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = blob_9(D) == 0B;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = blob_9(D) == 0B;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:18: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 | _2;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_3 = _1 | _2;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:26: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 != 0)
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
if (_3 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:12: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |            ^
if (_3 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:12: warning: use location
Cond in fucntion sshbuf_from basic block 2
 ================== possible direct basic block ================= 
from sshbuf_from basic block 4
 ================== possible direct basic block ================= 
from sshbuf_from basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
ret_13->parent = 0B;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->parent = 0B;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:70:21: warning: use location
   70 |         ret->parent = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
ret_13->refcount = 1;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->refcount = 1;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:69:23: warning: use location
   69 |         ret->refcount = 1;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
ret_13->readonly = 1;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->readonly = 1;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:68:23: warning: use location
   68 |         ret->readonly = 1;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->alloc = _5;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:20: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
ret_13->alloc = _5;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->alloc = _5;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:20: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
ret_13->size = _4;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->size = _4;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:32: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_6(D)>
_1 = buf_4(D)->size;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_1 = buf_4(D)->size;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:50:19: warning: use location
   50 |         return buf->size - buf->off;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_5 = ret_13->size;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_5 = ret_13->size;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:25: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
ret_13->max_size = len_10(D);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
ret_13->max_size = len_10(D);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:48: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = len_10(D) > 134217728;
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================
_2 = len_10(D) > 134217728;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:33: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = ret_13->max_size;
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================
_4 = ret_13->max_size;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:37: warning: use location
   67 |         ret->alloc = ret->size = ret->max_size = len;
      |                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_13 == 0B)
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
if (ret_13 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:51: warning: use location
   64 |         if (blob == NULL || len > SSHBUF_SIZE_MAX ||
      |                                                   ^
if (ret_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:51: warning: use location
Cond in fucntion sshbuf_from basic block 3
 ================== possible direct basic block ================= 
from sshbuf_from basic block 4
 ================== possible direct basic block ================= 
from sshbuf_from basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_47>
return _13;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_18>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
ret_13 = calloc (72, 1);
bb index := 3
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 11 have return or exit
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================
ret_13 = calloc (72, 1);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:65:20: warning: use location
   65 |             (ret = calloc(sizeof(*ret), 1)) == NULL)    /* allocation site */
      |                    ^
this stmt is child function---calloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f06ef62baf8
    type <pointer_type 0x7f06ef6093f0
        type <record_type 0x7f06ef6090a8 sshbuf BLK
            size <integer_cst 0x7f06ef5f48a0 constant 576>
            unit-size <integer_cst 0x7f06ef5f4930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f06ef6090a8 fields <field_decl 0x7f06ef605850 d> context <translation_unit_decl 0x7f06efadf168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f06ef6093f0>>
        public unsigned DI
        size <integer_cst 0x7f06efad4bb8 constant 64>
        unit-size <integer_cst 0x7f06efad4bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f06ef629360 ret>
    def_stmt ret_13 = calloc (72, 1);
    version:13
    ptr-info 0x7f06ef614d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f06ef614900 type <integer_type 0x7f06efae97e0 long unsigned int> constant 72>
[40;33m =======POP node_fun stack:sshbuf_from========= [0m
[40;44m =======node_fun:sshbuf_ptr========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_ptr  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_ptr========= [0m
[40;42m =======start_check_funciton:sshbuf_ptr========= [0m
[40;33m =======POP node_fun stack:sshbuf_ptr========= [0m
[40;44m =======node_fun:sshbuf_len========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_len  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:sshbuf_len========= [0m
[40;42m =======start_check_funciton:sshbuf_len========= [0m
[40;33m =======POP node_fun stack:sshbuf_len========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
if (argc_7(D) == 1)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
_3 = *argv_8(D);
printf ("no data %s\n", _3);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
data_9 = MEM[(char * *)argv_8(D) + 8B];
datalen_10 = strlen (data_9);
ssh_ed25519_verify (&key, "key:ssh-ed25519", 15, data_9, datalen_10);
key ={v} {CLOBBER};
return 0;

=======Mapping node_fun:ssh_ed25519_verify=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ktype = 0B;
b_18 = sshbuf_from (signature_15(D), signaturelen_16(D));
if (b_18 == 0B)
  goto <bb 12>; [0.91%]
else
  goto <bb 3>; [99.09%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1063970777]:
r_20 = sshbuf_get_cstring (b_18, &ktype, 0B);
if (r_20 != 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 4>; [48.88%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 520068912]:
r_22 = sshbuf_get_string_direct (b_18, &sigblob, &len);
if (r_22 != 0)
  goto <bb 5>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 720725297]:
# r_7 = PHI <r_20(3), r_22(4)>
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 343245480]:
_1 = ktype;
_2 = strcmp ("ssh-ed25519", _1);
if (_2 != 0)
  goto <bb 7>; [34.00%]
else
  goto <bb 8>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 116703464]:
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 226542016]:
_3 = len;
if (_3 > 64)
  goto <bb 9>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 77024286]:
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 149517730]:
_4 = len;
_5 = 15 - _4;
if (_5 <= datalen_23(D))
  goto <bb 12>; [1.04%]
else
  goto <bb 11>; [98.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 1062415793]:
# r_8 = PHI <r_7(5), -13(7), -4(9), 0(10)>
out:
free (b_18);
_6 = ktype;
free (_6);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# _9 = PHI <-2(2), -10(10), r_8(11)>
ktype ={v} {CLOBBER};
sigblob ={v} {CLOBBER};
len ={v} {CLOBBER};
return _9;

=======Mapping node_fun:sshbuf_get_cstring=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (valp_18(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619280]:
*valp_18(D) = 0B;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741823]:
if (lenp_21(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 751619280]:
*lenp_21(D) = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741823]:
r_25 = sshbuf_peek_string_direct (buf_23(D), &p, &len);
if (r_25 != 0)
  goto <bb 14>; [51.12%]
else
  goto <bb 7>; [48.88%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 524844999]:
r_27 = sshbuf_get_string_direct (buf_23(D), 0B, 0B);
if (r_27 != 0)
  goto <bb 14>; [1.04%]
else
  goto <bb 8>; [98.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 519386613]:
if (valp_18(D) != 0B)
  goto <bb 9>; [53.47%]
else
  goto <bb 12>; [46.53%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 277716021]:
_1 = len;
_2 = _1 + 1;
_3 = malloc (_2);
*valp_18(D) = _3;
_4 = *valp_18(D);
if (_4 == 0B)
  goto <bb 10>; [0.45%]
else
  goto <bb 11>; [99.55%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1249723]:
printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 141, &__func__);
printf ("SSH_ERR_ALLOC_FAIL");
__builtin_putchar (10);
_5 = stdout;
fflush (_5);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 276466299]:
_6 = len;
_7 = p;
_8 = *valp_18(D);
memcpy (_8, _7, _6);
_9 = *valp_18(D);
_10 = len;
_11 = _9 + _10;
*_11 = 0;

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 518136890]:
if (lenp_21(D) != 0B)
  goto <bb 13>; [70.00%]
else
  goto <bb 14>; [30.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 362695825]:
_12 = len;
*lenp_21(D) = _12;

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 1073741824]:
# _13 = PHI <r_25(6), -1(7), -2(10), 0(12), 0(13)>
len ={v} {CLOBBER};
p ={v} {CLOBBER};
return _13;

=======Mapping node_fun:sshbuf_peek_string_direct=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
p_11 = sshbuf_ptr (buf_10(D));
if (valp_12(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
*valp_12(D) = 0B;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
if (lenp_14(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 751619281]:
*lenp_14(D) = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
_1 = sshbuf_len (buf_10(D));
if (_1 <= 3)
  goto <bb 7>; [0.52%]
else
  goto <bb 8>; [99.48%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 5583456]:
printf ("%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 108, &__func__);
printf ("SSH_ERR_MESSAGE_INCOMPLETE");
__builtin_putchar (10);
_2 = stdout;
fflush (_2);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1068158369]:
if (valp_12(D) != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 747710862]:
_3 = p_11 + 4;
*valp_12(D) = _3;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1068158369]:
if (lenp_14(D) != 0B)
  goto <bb 11>; [70.00%]
else
  goto <bb 12>; [30.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 747710862]:
*lenp_14(D) = 15;

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# _4 = PHI <-3(7), 0(10), 0(11)>
return _4;

=======Mapping node_fun:sshbuf_get_string_direct=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (valp_8(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
*valp_8(D) = 0B;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
if (lenp_11(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 751619281]:
*lenp_11(D) = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
if (r_15 < 0)
  goto <bb 11>; [26.36%]
else
  goto <bb 7>; [73.64%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 790703481]:
if (valp_8(D) != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 553492439]:
_1 = p;
*valp_8(D) = _1;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 790703481]:
if (lenp_11(D) != 0B)
  goto <bb 10>; [70.00%]
else
  goto <bb 11>; [30.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 553492439]:
_2 = len;
*lenp_11(D) = _2;

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# _3 = PHI <r_15(6), 0(9), 0(10)>
len ={v} {CLOBBER};
p ={v} {CLOBBER};
return _3;

=======Mapping node_fun:sshbuf_from=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = blob_9(D) == 0B;
_2 = len_10(D) > 134217728;
_3 = _1 | _2;
if (_3 != 0)
  goto <bb 4>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370897]:
ret_13 = calloc (72, 1);
if (ret_13 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 321671876]:
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 752069949]:
ret_13->max_size = len_10(D);
_4 = ret_13->max_size;
ret_13->size = _4;
_5 = ret_13->size;
ret_13->alloc = _5;
ret_13->readonly = 1;
ret_13->refcount = 1;
ret_13->parent = 0B;
ret_13->cd = blob_9(D);
ret_13->d = 0B;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _6 = PHI <0B(4), ret_13(5)>
return _6;

=======Mapping node_fun:sshbuf_ptr=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = buf_4(D)->cd;
_2 = buf_4(D)->off;
_5 = _1 + _2;
return _5;

=======Mapping node_fun:sshbuf_len=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = buf_4(D)->size;
_2 = buf_4(D)->off;
_5 = _1 - _2;
return _5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    find Entry point : 13 [0m
[40;34m    used_stmt array stack totalsize of : 0.001744 mb[0m
[40;34m    collect time: : 0.000324 s [0m
[40;34m    algorithm time: 0.195670 s [0m
[40;34m    gimple stmt count : : 130 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -1.0%|     -0.3%|
stdarg                           |      |      |      |      |     -1.0%|     -0.3%|
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -1.9%|     -0.5%|
copyprop                         |      |      |      |      |     -2.0%|     -0.5%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +75.4%|    +55.0%|
into_cfglayout                   |      |      |      |      |     -1.4%|     -0.7%|
jump                             |      |      |      |      |     -2.4%|     -1.5%|
subreg1                          |      |      |      |      |     -1.0%|     -0.8%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.5%|     -1.5%|
ce1                              |      |      |      |      |     -1.5%|     -1.3%|
reginfo                          |      |      |      |      |          |     +0.3%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.5%|     +4.7%|
ce2                              |      |      |      |      |     +3.4%|     +4.5%|
outof_cfglayout                  |      |      |      |      |     +1.1%|     +0.4%|
split1                           |      |      |      |      |     +1.1%|     +0.4%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.4%|     -0.3%|
reload                           |      |      |      |      |     -8.2%|    -10.5%|
postreload                       |      |      |      |      |     -8.6%|    -11.6%|
split2                           |      |      |      |      |     -0.2%|     -0.2%|
cmpelim              ------------|      |      |      |      |          |          |
pro_and_epilogue                 |      |      |      |      |    +10.6%|    +16.0%|
dse2                             |      |    +4|      |      |     +9.6%|    +13.8%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     +0.1%|     -0.3%|
split4                           |      |      |      |      |     +0.1%|     -0.3%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
