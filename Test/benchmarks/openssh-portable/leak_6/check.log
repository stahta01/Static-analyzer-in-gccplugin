In file included from ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:9:0:
./benchmarks/openssh-portable/leak_6/../openssh.h:675:49: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:676:58: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:677:59: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:678:53: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/leak_6/../openssh.h:681:29: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function â€˜sshbuf_get_string_directâ€™:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:11: warning: implicit declaration of function â€˜sshbuf_peek_string_directâ€™; did you mean â€˜sshbuf_get_string_directâ€™? [-Wimplicit-function-declaration]
  if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
           ^~~~~~~~~~~~~~~~~~~~~~~~~
           sshbuf_get_string_direct
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function â€˜sshbuf_get_cstringâ€™:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
   memcpy(*valp, p, len);
   ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function â€˜ssh_ed25519_verifyâ€™:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
  if (strcmp("ssh-ed25519", ktype) != 0) {
      ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c: In function â€˜mainâ€™:
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:18: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
  size_t siglen = strlen(sign);
                  ^~~~~~
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:18: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:196:18: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:198:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 7
succs:= 9
succs:= 6
succs:= 9
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 8
--------GIMPLE Cond -------
succs:= 8
succs:= 10
succs:= 10
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
succs:= 10
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 13
succs:= 14
succs:= 15
succs:= 16
succs:= 17
succs:= 7
succs:= 17
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
# .MEM_31 = VDEF <.MEM_23>
_21 = __printf_chk (1, "%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 108, &__func__);
# .MEM_32 = VDEF <.MEM_31>
_11 = __printf_chk (1, "SSH_ERR_MESSAGE_INCOMPLETE");
# .MEM_33 = VDEF <.MEM_32>
_17 = __printf_chk (1, "\n");
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = time (0B);
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
# .MEM_18 = VDEF <.MEM_15>
_12 = __printf_chk (1, "no data %s\n", _3);
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
# .MEM_74 = VDEF <.MEM_73>
r_40 = sshbuf_get_string_direct (b_20, 0B, 0B);
# .MEM_75 = VDEF <.MEM_74>
_43 = malloc (_42);
# .MEM_79 = VDEF <.MEM_75>
_45 = __printf_chk (1, "%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 141, &__func__);
# .MEM_80 = VDEF <.MEM_79>
_46 = __printf_chk (1, "SSH_ERR_ALLOC_FAIL");
# .MEM_81 = VDEF <.MEM_80>
_47 = __printf_chk (1, "\n");
# .MEM_82 = VDEF <.MEM_81>
fflush (_48);
# .MEM_77 = VDEF <.MEM_75>
memcpy (_51, _50, _49);
# .MEM_86 = VDEF <.MEM_84>
r_22 = sshbuf_get_string_direct (b_20, &sigblob, &len);
# VUSE <.MEM_86>
_24 = strcmp ("ssh-ed25519", _23);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:sshbuf_get_string_direct========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
# VUSE <.MEM_33>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
In function â€˜sshbuf_get_string_directâ€™:
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
   SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
   ^
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f327c937b88
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f327c46b200 buf>
    def_stmt GIMPLE_NOP
    version 13
    ptr-info 0x7f327c47e540>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:5: warning: use location
  if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
     ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c937b88
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f327c46b200 buf>
    def_stmt GIMPLE_NOP
    version 13
    ptr-info 0x7f327c47e540>
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
if (r_15 < 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:5: warning: use location
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:5: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 12
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937b88
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f327c46b200 buf>
    def_stmt GIMPLE_NOP
    version 13
    ptr-info 0x7f327c47e540>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;44m =======node_fun:sshbuf_peek_string_direct========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
# VUSE <.MEM_33>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
In function â€˜sshbuf_peek_string_directâ€™:
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
   SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
   ^
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 13 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:sshbuf_get_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_get_string_direct  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
# VUSE <.MEM_33>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
In function â€˜mainâ€™:
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre_check_funciton:sshbuf_get_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_get_string_direct========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f327c937b88
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f327c46b200 buf>
    def_stmt GIMPLE_NOP
    version 13
    ptr-info 0x7f327c47e540>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_17>
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:5: warning: use location
  if ((r = sshbuf_peek_string_direct(buf, &p, &len)) < 0)
     ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c937b88
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f327c46b200 buf>
    def_stmt GIMPLE_NOP
    version 13
    ptr-info 0x7f327c47e540>
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <r_15(6), 0(9), 0(10)>
bb index := 12
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 19

======================================================================
_3 = PHI <r_15(6), 0(9), 0(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (r_15 < 0)
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
if (r_15 < 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:5: warning: use location
if (r_15 < 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:87:5: warning: use location
Cond in fucntion sshbuf_get_string_direct basic block 6
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 12
 ================== possible direct basic block ================= 
from sshbuf_get_string_direct basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937b88
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f327c46b200 buf>
    def_stmt GIMPLE_NOP
    version 13
    ptr-info 0x7f327c47e540>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_get_string_direct========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;33m =======POP node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:sshbuf_peek_string_direct========= [0m
[40;42m =======start_check_funciton:sshbuf_peek_string_direct========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c92ff90 type <integer_type 0x7f327c9435e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
# VUSE <.MEM_33>
_2 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
   SSHBUF_DBG(("SSH_ERR_MESSAGE_INCOMPLETE"));
   ^
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
# .MEM_34 = VDEF <.MEM_33>
fflush (_2);
fflush (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:108:3: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937990
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _2 = stdout;
    version 2
    ptr-info 0x7f327c47e558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:sshbuf_peek_string_direct========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f327c48d168
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487bd0 ret>
    def_stmt ret_34 = calloc (72, 1);
    version 34
    ptr-info 0x7f327c47e6c0>
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
ret_34->d = 0B;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
ret_34->d = 0B;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
ret_34->d = 0B;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
ret_34->d = 0B;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
ret_34->d = 0B;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
ret_34->d = 0B;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->d = 0B;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:72:9: warning: use location
  ret->d = NULL;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
ret_34->cd = "key:ssh-ed25519";
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
ret_34->cd = "key:ssh-ed25519";
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
ret_34->cd = "key:ssh-ed25519";
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
ret_34->cd = "key:ssh-ed25519";
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
ret_34->cd = "key:ssh-ed25519";
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
ret_34->cd = "key:ssh-ed25519";
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->cd = "key:ssh-ed25519";
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:71:10: warning: use location
  ret->cd = blob;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
ret_34->parent = 0B;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
ret_34->parent = 0B;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
ret_34->parent = 0B;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
ret_34->parent = 0B;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
ret_34->parent = 0B;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
ret_34->parent = 0B;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->parent = 0B;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:70:14: warning: use location
  ret->parent = NULL;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
ret_34->refcount = 1;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
ret_34->refcount = 1;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
ret_34->refcount = 1;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
ret_34->refcount = 1;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
ret_34->refcount = 1;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
ret_34->refcount = 1;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->refcount = 1;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:69:16: warning: use location
  ret->refcount = 1;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
ret_34->readonly = 1;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
ret_34->readonly = 1;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
ret_34->readonly = 1;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
ret_34->readonly = 1;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
ret_34->readonly = 1;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
ret_34->readonly = 1;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->readonly = 1;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:68:16: warning: use location
  ret->readonly = 1;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->alloc = _36;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:13: warning: use location
  ret->alloc = ret->size = ret->max_size = len;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
ret_34->alloc = _36;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->alloc = _36;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
ret_34->size = _35;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
ret_34->size = _35;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
ret_34->size = _35;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
ret_34->size = _35;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
ret_34->size = _35;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
ret_34->size = _35;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->size = _35;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:25: warning: use location
  ret->alloc = ret->size = ret->max_size = len;
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_64>
_36 = ret_34->size;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_64>
_36 = ret_34->size;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_64>
_36 = ret_34->size;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_64>
_36 = ret_34->size;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_64>
_36 = ret_34->size;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_64>
_36 = ret_34->size;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
_36 = ret_34->size;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:18: warning: use location
  ret->alloc = ret->size = ret->max_size = len;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_35 = ret_34->max_size;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_35 = ret_34->max_size;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_35 = ret_34->max_size;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_35 = ret_34->max_size;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_35 = ret_34->max_size;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_63>
_35 = ret_34->max_size;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
_35 = ret_34->max_size;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:30: warning: use location
  ret->alloc = ret->size = ret->max_size = len;
                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
ret_34->max_size = 15;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
ret_34->max_size = 15;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
ret_34->max_size = 15;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
ret_34->max_size = 15;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
ret_34->max_size = 15;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
ret_34->max_size = 15;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
ret_34->max_size = 15;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:67:41: warning: use location
  ret->alloc = ret->size = ret->max_size = len;
                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_38 = PHI <0B(4), 0B(5), ret_34(6)>
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_38 = PHI <0B(4), 0B(5), ret_34(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_71 = _38;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_71 = _38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
b_20 = _71;
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
b_20 = _71;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
  if ((b = sshbuf_from(signature, signaturelen)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_20, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
  if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
                                                     ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c48d168
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487bd0 ret>
    def_stmt ret_34 = calloc (72, 1);
    version 34
    ptr-info 0x7f327c47e6c0>
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
_92 = _29;
lto1: warning: use location
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
  if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
                                                     ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_40 = sshbuf_get_string_direct (b_20, 0B, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:5: warning: use location
  if ((r = sshbuf_skip_string(buf)) != 0)
     ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c48d168
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487bd0 ret>
    def_stmt ret_34 = calloc (72, 1);
    version 34
    ptr-info 0x7f327c47e6c0>
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:5: warning: use location
  if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
     ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c48d168
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487bd0 ret>
    def_stmt ret_34 = calloc (72, 1);
    version 34
    ptr-info 0x7f327c47e6c0>
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
_85 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
if (b_20 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
  if ((b = sshbuf_from(signature, signaturelen)) == NULL)
     ^
if (b_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = ret_34;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = ret_34;
bb index := 6
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = ret_34;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = ret_34;
bb index := 6
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = ret_34;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_37 = ret_34;
bb index := 6
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
_37 = ret_34;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:73:9: warning: use location
  return ret;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_15>
ret_34 = calloc (72, 1);
bb index := 5
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
ret_34 = calloc (72, 1);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:64:44: warning: use location
  if (blob == NULL || len > SSHBUF_SIZE_MAX ||
                                            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f327c48d168
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487bd0 ret>
    def_stmt ret_34 = calloc (72, 1);
    version 34
    ptr-info 0x7f327c47e6c0>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c48d168
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487bd0 ret>
    def_stmt ret_34 = calloc (72, 1);
    version 34
    ptr-info 0x7f327c47e6c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_38 = PHI <0B(4), 0B(5), ret_34(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_38 = PHI <0B(4), 0B(5), ret_34(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_92 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_92 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f327c937708
    type <pointer_type 0x7f327c94a0a8
        type <void_type 0x7f327c943f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f327c94a0a8>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c94fbd0>>
   
    def_stmt _43 = malloc (_42);
    version 43
    ptr-info 0x7f327c47e708>
# .MEM_75 = VDEF <.MEM_74>
_43 = malloc (_42);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
ktype_96 = _43;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:14: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
              ^
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
_28 = ktype_93;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_23 = ktype_93;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6: warning: use location
  if (strcmp("ssh-ed25519", ktype) != 0) {
      ^
_24 = strcmp ("ssh-ed25519", _23);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6: warning: use location
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f327c937708
    type <pointer_type 0x7f327c94a0a8
        type <void_type 0x7f327c943f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f327c94a0a8>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c94fbd0>>
   
    def_stmt _43 = malloc (_42);
    version 43
    ptr-info 0x7f327c47e708>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_24 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:5: warning: use location
  if (strcmp("ssh-ed25519", ktype) != 0) {
     ^
if (_24 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:5: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_52 = ktype_96;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:145:4: warning: use location
   (*valp)[len] = '\0';
    ^
_54 = _52 + _53;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:145:10: warning: use location
   (*valp)[len] = '\0';
          ^
*_54 = 0;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:145:16: warning: use location
   (*valp)[len] = '\0';
                ^
_51 = ktype_96;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: use location
   memcpy(*valp, p, len);
   ^
memcpy (_51, _50, _49);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f327c937708
    type <pointer_type 0x7f327c94a0a8
        type <void_type 0x7f327c943f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f327c94a0a8>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c94fbd0>>
   
    def_stmt _43 = malloc (_42);
    version 43
    ptr-info 0x7f327c47e708>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
_44 = ktype_96;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:8: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
        ^
if (_44 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:6: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
      ^
if (_44 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:6: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_43 = malloc (_42);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:16: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
                ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f327c937708
    type <pointer_type 0x7f327c94a0a8
        type <void_type 0x7f327c943f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f327c94a0a8>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c94fbd0>>
   
    def_stmt _43 = malloc (_42);
    version 43
    ptr-info 0x7f327c47e708>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c937708
    type <pointer_type 0x7f327c94a0a8
        type <void_type 0x7f327c943f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f327c94a0a8>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c94fbd0>>
   
    def_stmt _43 = malloc (_42);
    version 43
    ptr-info 0x7f327c47e708>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: Use after free error!: free location 
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: Use after free error!: free location 
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c94b000 type <pointer_type 0x7f327c94a0a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f327c47cca8
    type <integer_type 0x7f327c943690 unsigned int public unsigned SI
        size <integer_cst 0x7f327c92fe28 constant 32>
        unit size <integer_cst 0x7f327c92fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f327c943690 precision 32 min <integer_cst 0x7f327c92fe58 0> max <integer_cst 0x7f327c92fe10 4294967295>
        pointer_to_this <pointer_type 0x7f327c94f888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:198:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f327c47cca8
    type <integer_type 0x7f327c943690 unsigned int public unsigned SI
        size <integer_cst 0x7f327c92fe28 constant 32>
        unit size <integer_cst 0x7f327c92fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f327c943690 precision 32 min <integer_cst 0x7f327c92fe58 0> max <integer_cst 0x7f327c92fe10 4294967295>
        pointer_to_this <pointer_type 0x7f327c94f888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
bb index := 2
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
# .MEM_15 = VDEF <.MEM_14>
srand (_2);
srand (_2);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:198:2: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f327c47cca8
    type <integer_type 0x7f327c943690 unsigned int public unsigned SI
        size <integer_cst 0x7f327c92fe28 constant 32>
        unit size <integer_cst 0x7f327c92fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f327c943690 precision 32 min <integer_cst 0x7f327c92fe58 0> max <integer_cst 0x7f327c92fe10 4294967295>
        pointer_to_this <pointer_type 0x7f327c94f888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c47cca8
    type <integer_type 0x7f327c943690 unsigned int public unsigned SI
        size <integer_cst 0x7f327c92fe28 constant 32>
        unit size <integer_cst 0x7f327c92fe40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f327c943690 precision 32 min <integer_cst 0x7f327c92fe58 0> max <integer_cst 0x7f327c92fe10 4294967295>
        pointer_to_this <pointer_type 0x7f327c94f888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f327c47cdc8
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
    var <var_decl 0x7f327c47d6c0 data>
    def_stmt data_9 = MEM[(char * *)argv_8(D) + 8B];
    version 9
    ptr-info 0x7f327c47e660>
# VUSE <.MEM_15>
data_9 = MEM[(char * *)argv_8(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
datalen_10 = strlen (data_9);
bb index := 4
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
datalen_10 = strlen (data_9);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:203:10: warning: use location
  datalen = strlen(data);
          ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f327c47cdc8
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
    var <var_decl 0x7f327c47d6c0 data>
    def_stmt data_9 = MEM[(char * *)argv_8(D) + 8B];
    version 9
    ptr-info 0x7f327c47e660>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (datalen_10 >= _27)
bb index := 17
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (datalen_10 >= _27)
bb index := 17
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (datalen_10 >= _27)
bb index := 17
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (datalen_10 >= _27)
bb index := 17
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (datalen_10 >= _27)
bb index := 17
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (datalen_10 >= _27)
bb index := 17
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (datalen_10 >= _27)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:5: warning: use location
  if (datalen >= SIZE_MAX - len) {
     ^
if (datalen_10 >= _27)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:179:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c47cdc8
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
    var <var_decl 0x7f327c47d6c0 data>
    def_stmt data_9 = MEM[(char * *)argv_8(D) + 8B];
    version 9
    ptr-info 0x7f327c47e660>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f327c47e318 type <integer_type 0x7f327c9437e0 long unsigned int> constant 72>

dot graph START

======================================================================
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
b_20 = _71;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_20, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
  if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
                                                     ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
_92 = _29;
lto1: warning: use location
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
  if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
                                                     ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_40 = sshbuf_get_string_direct (b_20, 0B, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:5: warning: use location
  if ((r = sshbuf_skip_string(buf)) != 0)
     ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:5: warning: use location
  if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
     ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
_85 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
if (b_20 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
  if ((b = sshbuf_from(signature, signaturelen)) == NULL)
     ^
if (b_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_92 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_92 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
b_20 = _71;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
r_22 = sshbuf_get_string_direct (b_20, &sigblob, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
  if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
                                                     ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = PHI <-2(7), -10(17), r_30(18)>
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_92 = _29;
bb index := 19
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 19

======================================================================
_92 = _29;
lto1: warning: use location
if (r_22 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
  if ((r = sshbuf_get_cstring(b, &ktype, NULL)) != 0 ||
                                                     ^
if (r_22 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:167:53: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
r_40 = sshbuf_get_string_direct (b_20, 0B, 0B);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:137:5: warning: use location
  if ((r = sshbuf_skip_string(buf)) != 0)
     ^
this stmt is child function---sshbuf_get_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
trace fucntion name:sshbuf_get_string_direct 
[40;44m =======trace_function_path sshbuf_get_string_direct  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:sshbuf_get_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:sshbuf_peek_string_direct========= [0m
[40;46m =======add node_fun stack:sshbuf_peek_string_direct========= [0m
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_73 = VDEF <.MEM_57>
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
bb index := 8
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:134:5: warning: use location
  if ((r = sshbuf_peek_string_direct(buf, &p, &len)) != 0)
     ^
this stmt is child function---sshbuf_peek_string_direct-----

 ================== trace ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
trace fucntion name:sshbuf_peek_string_direct 
[40;44m =======trace_function_path sshbuf_peek_string_direct  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:sshbuf_peek_string_direct========= [0m
[40;36m ======= find relate stmt with b ========= [0m
[40;36m ======= relate stmt argument:b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fflush========= [0m
[40;46m =======add node_fun stack:fflush========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
_85 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (b_20 == 0B)
bb index := 7
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
if (b_20 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
  if ((b = sshbuf_from(signature, signaturelen)) == NULL)
     ^
if (b_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:165:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c485708
    type <pointer_type 0x7f327c462000
        type <record_type 0x7f327c4620a8 sshbuf BLK
            size <integer_cst 0x7f327c45c2b8 constant 576>
            unit size <integer_cst 0x7f327c45c2d0 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c4620a8 fields <field_decl 0x7f327c463428 d> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c462000> chain <type_decl 0x7f327c4634c0 D.4044>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f327c487360 b>
    def_stmt b_20 = _71;
    version 20
    ptr-info 0x7f327c47e678>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_29 = PHI <-2(7), -10(17), r_30(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_92 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_92 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
_56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f327c9377e0
    type <integer_type 0x7f327c9437e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f327c943738 precision 64 min <integer_cst 0x7f327c92feb8 0> max <integer_cst 0x7f327c931500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f327c94f9d8>>
   
    def_stmt _42 = _41 + 1;
    version 42>
_42 = _41 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_43 = malloc (_42);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:16: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
                ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f327c9377e0
    type <integer_type 0x7f327c9437e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f327c943738 precision 64 min <integer_cst 0x7f327c92feb8 0> max <integer_cst 0x7f327c931500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f327c94f9d8>>
   
    def_stmt _42 = _41 + 1;
    version 42>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
ktype_96 = _43;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:14: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
              ^
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = ktype_93;
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
_28 = ktype_93;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_27>
return _3;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_25>
return _4;
lto1: warning: use location
beacuse in succ := 12 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
bb index := 18
# VUSE <.MEM_91>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 19

======================================================================
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_23 = ktype_93;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6: warning: use location
  if (strcmp("ssh-ed25519", ktype) != 0) {
      ^
_24 = strcmp ("ssh-ed25519", _23);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6: warning: use location
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f327c9377e0
    type <integer_type 0x7f327c9437e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f327c943738 precision 64 min <integer_cst 0x7f327c92feb8 0> max <integer_cst 0x7f327c931500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f327c94f9d8>>
   
    def_stmt _42 = _41 + 1;
    version 42>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 
if (_24 != 0)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:5: warning: use location
  if (strcmp("ssh-ed25519", ktype) != 0) {
     ^
if (_24 != 0)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:5: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_52 = ktype_96;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:145:4: warning: use location
   (*valp)[len] = '\0';
    ^
_54 = _52 + _53;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:145:10: warning: use location
   (*valp)[len] = '\0';
          ^
*_54 = 0;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:145:16: warning: use location
   (*valp)[len] = '\0';
                ^
_51 = ktype_96;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: use location
   memcpy(*valp, p, len);
   ^
memcpy (_51, _50, _49);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f327c9377e0
    type <integer_type 0x7f327c9437e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f327c943738 precision 64 min <integer_cst 0x7f327c92feb8 0> max <integer_cst 0x7f327c931500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f327c94f9d8>>
   
    def_stmt _42 = _41 + 1;
    version 42>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
_44 = ktype_96;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:8: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
        ^
if (_44 == 0B)
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:6: warning: use location
   if ((*valp = malloc(len + 1)) == NULL) { /* allocation site */
      ^
if (_44 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:140:6: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c9377e0
    type <integer_type 0x7f327c9437e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f327c943738 precision 64 min <integer_cst 0x7f327c92feb8 0> max <integer_cst 0x7f327c931500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f327c94f9d8>>
   
    def_stmt _42 = _41 + 1;
    version 42>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: Use after free error!: free location 
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
  free(b);
  ^
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: Use after free error!: free location 
  free(ktype);
  ^
ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: Use after free error!: free location 
  free(b);
  ^
_28 = ktype_93;
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f327c496090
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _48 = stdout;
    version 48
    ptr-info 0x7f327c47e738>
# VUSE <.MEM_81>
_48 = stdout;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_82 = VDEF <.MEM_81>
fflush (_48);
fflush (_48);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4: warning: use location
    SSHBUF_DBG(("SSH_ERR_ALLOC_FAIL"));
    ^
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c496090
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _48 = stdout;
    version 48
    ptr-info 0x7f327c47e738>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_82 = VDEF <.MEM_81>
fflush (_48);
fflush (_48);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:141:4: warning: use location
this stmt is child function---fflush-----

 ================== trace ================== 
 <ssa_name 0x7f327c496090
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _48 = stdout;
    version 48
    ptr-info 0x7f327c47e738>
trace fucntion name:fflush 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c496090
    type <pointer_type 0x7f327c469000
        type <record_type 0x7f327c466f18 FILE BLK
            size <integer_cst 0x7f327c45c318 constant 1728>
            unit size <integer_cst 0x7f327c45c3c0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f327c466dc8 fields <field_decl 0x7f327c4688e8 _flags> context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
            pointer_to_this <pointer_type 0x7f327c469000> chain <type_decl 0x7f327c468980 D.4119>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f327c46ac78>>
   
    def_stmt _48 = stdout;
    version 48
    ptr-info 0x7f327c47e738>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_87 = VDEF <.MEM_59>
free (b_20);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:186:2: warning: use location
  free(b);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f327c496168
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
   
    def_stmt _51 = ktype_96;
    version 51
    ptr-info 0x7f327c47e768>
_51 = ktype_96;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_75>
memcpy (_51, _50, _49);
memcpy (_51, _50, _49);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: use location
   memcpy(*valp, p, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f327c496168
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
   
    def_stmt _51 = ktype_96;
    version 51
    ptr-info 0x7f327c47e768>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_77 = VDEF <.MEM_75>
memcpy (_51, _50, _49);
memcpy (_51, _50, _49);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:144:3: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f327c496168
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
   
    def_stmt _51 = ktype_96;
    version 51
    ptr-info 0x7f327c47e768>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f327c496168
    type <pointer_type 0x7f327c4597e0
        type <integer_type 0x7f327c459738 char public string-flag QI
            size <integer_cst 0x7f327c92fcd8 constant 8>
            unit size <integer_cst 0x7f327c92fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f327c9433f0 precision 8 min <integer_cst 0x7f327c45c180 -128> max <integer_cst 0x7f327c45c168 127>
            pointer_to_this <pointer_type 0x7f327c4597e0>>
        public unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f327c93a168 ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c>
        pointer_to_this <pointer_type 0x7f327c459888>>
   
    def_stmt _51 = ktype_96;
    version 51
    ptr-info 0x7f327c47e768>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_88 = VDEF <.MEM_87>
free (_28);
./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:187:2: warning: use location
  free(ktype);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f327c488220
    type <pointer_type 0x7f327c4699d8
        type <array_type 0x7f327c469930 type <integer_type 0x7f327c459738 char>
            BLK
            size <integer_cst 0x7f327c45c1c8 constant 96>
            unit size <integer_cst 0x7f327c45c4b0 constant 12>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f327c469888>
            pointer_to_this <pointer_type 0x7f327c4699d8>>
        unsigned DI
        size <integer_cst 0x7f327c92fbe8 constant 64>
        unit size <integer_cst 0x7f327c92fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f327c482410 type <array_type 0x7f327c469930>
        readonly constant static "ssh-ed25519\000">
    ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6 start: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6 finish: ./benchmarks/openssh-portable/leak_6/openssh_leak_6.c:170:6>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:sshbuf_get_string_direct=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (valp_8(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [70.00%]:
*valp_8(D) = 0B;

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
if (lenp_11(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [70.00%]:
*lenp_11(D) = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [100.00%]:
r_15 = sshbuf_peek_string_direct (buf_13(D), &p, &len);
if (r_15 < 0)
  goto <bb 12>; [32.39%]
else
  goto <bb 7>; [67.61%]

=======is loop:0=========

 bb index 7 
<bb 7> [67.61%]:
if (valp_8(D) != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [47.33%]:
_1 = p;
*valp_8(D) = _1;

=======is loop:0=========

 bb index 9 
<bb 9> [67.61%]:
if (lenp_11(D) != 0B)
  goto <bb 10>; [73.26%]
else
  goto <bb 12>; [26.74%]

=======is loop:0=========

 bb index 10 
<bb 10> [49.53%]:
_2 = len;
*lenp_11(D) = _2;

=======is loop:0=========

 bb index 12 
<bb 12> [100.00%]:
# _3 = PHI <r_15(6), 0(9), 0(10)>
len ={v} {CLOBBER};
p ={v} {CLOBBER};
return _3;

=======Mapping node_fun:sshbuf_peek_string_direct=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_35 = buf_10(D)->cd;
_36 = buf_10(D)->off;
_37 = _35 + _36;
_41 = _37;
p_12 = _41;
if (valp_13(D) != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [70.00%]:
*valp_13(D) = 0B;

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
if (lenp_15(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [70.00%]:
*lenp_15(D) = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [100.00%]:
_38 = buf_10(D)->size;
_39 = buf_10(D)->off;
_40 = _38 - _39;
_42 = _40;
_1 = _42;
if (_1 <= 3)
  goto <bb 7>; [1.00%]
else
  goto <bb 8>; [99.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [1.00%]:
_21 = __printf_chk (1, "%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 108, &__func__);
_11 = __printf_chk (1, "SSH_ERR_MESSAGE_INCOMPLETE");
_17 = __printf_chk (1, "\n");
_2 = stdout;
fflush (_2);
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [99.00%]:
if (valp_13(D) != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [69.30%]:
_3 = p_12 + 4;
*valp_13(D) = _3;

=======is loop:0=========

 bb index 10 
<bb 10> [99.00%]:
if (lenp_15(D) != 0B)
  goto <bb 11>; [73.26%]
else
  goto <bb 12>; [26.74%]

=======is loop:0=========

 bb index 11 
<bb 11> [72.53%]:
*lenp_15(D) = 15;

=======is loop:0=========

 bb index 12 
<bb 12> [100.00%]:
# _4 = PHI <-3(7), 0(10), 0(11)>
return _4;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
if (argc_7(D) == 1)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
_3 = *argv_8(D);
_12 = __printf_chk (1, "no data %s\n", _3);
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
data_9 = MEM[(char * *)argv_8(D) + 8B];
datalen_10 = strlen (data_9);
ktype_94 = 0B;
_31 = 0;
_32 = 0;
_33 = _31 | _32;
if (_33 != 0)
  goto <bb 7>; [16.72%]
else
  goto <bb 5>; [83.28%]

=======is loop:0=========

 bb index 5 
<bb 5> [83.25%]:
ret_34 = calloc (72, 1);
if (ret_34 == 0B)
  goto <bb 7>; [4.07%]
else
  goto <bb 6>; [95.93%]

=======is loop:0=========

 bb index 6 
<bb 6> [79.86%]:
ret_34->max_size = 15;
_35 = ret_34->max_size;
ret_34->size = _35;
_36 = ret_34->size;
ret_34->alloc = _36;
ret_34->readonly = 1;
ret_34->refcount = 1;
ret_34->parent = 0B;
ret_34->cd = "key:ssh-ed25519";
ret_34->d = 0B;
_37 = ret_34;

=======is loop:0=========

 bb index 7 
<bb 7> [99.96%]:
# _38 = PHI <0B(4), 0B(5), ret_34(6)>
_71 = _38;
b_20 = _71;
if (b_20 == 0B)
  goto <bb 19>; [1.74%]
else
  goto <bb 8>; [98.26%]

=======is loop:0=========

 bb index 8 
<bb 8> [98.22%]:
ktype_95 = 0B;
r_39 = sshbuf_peek_string_direct (b_20, &p, &len);
if (r_39 != 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 9>; [36.64%]

=======is loop:0=========

 bb index 9 
<bb 9> [35.99%]:
r_40 = sshbuf_get_string_direct (b_20, 0B, 0B);
if (r_40 != 0)
  goto <bb 13>; [2.00%]
else
  goto <bb 10>; [98.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [35.27%]:
_41 = len;
_42 = _41 + 1;
_43 = malloc (_42);
ktype_96 = _43;
_44 = ktype_96;
if (_44 == 0B)
  goto <bb 11>; [0.87%]
else
  goto <bb 12>; [99.13%]

=======is loop:0=========

 bb index 11 
<bb 11> [0.31%]:
_45 = __printf_chk (1, "%s:%d %s: ", "./benchmarks/openssh-portable/leak_6/openssh_leak_6.c", 141, &__func__);
_46 = __printf_chk (1, "SSH_ERR_ALLOC_FAIL");
_47 = __printf_chk (1, "\n");
_48 = stdout;
fflush (_48);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [34.96%]:
_49 = len;
_50 = p;
_51 = ktype_96;
memcpy (_51, _50, _49);
_52 = ktype_96;
_53 = len;
_54 = _52 + _53;
*_54 = 0;

=======is loop:0=========

 bb index 13 
<bb 13> [98.22%]:
# _56 = PHI <r_39(8), -1(9), -2(11), 0(12)>
# ktype_93 = PHI <ktype_95(8), ktype_95(9), ktype_96(11), ktype_96(12)>
len ={v} {CLOBBER};
p ={v} {CLOBBER};
_85 = _56;
r_21 = _85;
if (r_21 != 0)
  goto <bb 18> (out); [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [49.11%]:
r_22 = sshbuf_get_string_direct (b_20, &sigblob, &len);
if (r_22 != 0)
  goto <bb 18> (out); [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [24.56%]:
_23 = ktype_93;
_24 = strcmp ("ssh-ed25519", _23);
if (_24 != 0)
  goto <bb 18> (out); [50.00%]
else
  goto <bb 16>; [50.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [12.28%]:
_25 = len;
if (_25 > 64)
  goto <bb 18> (out); [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [6.14%]:
_26 = len;
_27 = 15 - _26;
if (datalen_10 >= _27)
  goto <bb 19>; [2.00%]
else
  goto <bb 18> (out); [98.00%]

=======is loop:0=========

 bb index 18 
# r_30 = PHI <r_21(13), r_22(14), -13(15), -4(16), 0(17)>
out [98.10%]:
free (b_20);
_28 = ktype_93;
free (_28);

=======is loop:0=========

 bb index 19 
<bb 19> [99.96%]:
# _29 = PHI <-2(7), -10(17), r_30(18)>
sigblob ={v} {CLOBBER};
len ={v} {CLOBBER};
_92 = _29;
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 2232 [0m
[40;34m    collect time: : 0.000134 s [0m
[40;34m    algorithm time: 0.030319 s [0m
[40;34m    gimple stmt count : : 118 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
