In file included from ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:9:0:
./benchmarks/openssh-portable/double_free_2/../openssh.h:675:49: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:676:58: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:677:59: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:678:53: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:681:29: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
In file included from ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:8:0:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c: In function â€˜key_try_load_publicâ€™:
./benchmarks/openssh-portable/double_free_2/../stdio.h:266:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: note: in expansion of macro â€˜xstrdupâ€™
     *commentp = xstrdup(filename); /* allocation site */
                 ^~~~~~~
./benchmarks/openssh-portable/double_free_2/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: note: in expansion of macro â€˜xstrdupâ€™
     *commentp = xstrdup(filename); /* allocation site */
                 ^~~~~~~
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c: In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:189:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
succs:= 2
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 2
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 6
succs:= 12
--------GIMPLE Cond -------
succs:= 11
succs:= 12
succs:= 13
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
succs:= 9
succs:= 7
succs:= 8
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
# .MEM_42 = VDEF <.MEM_40>
_30 = __printf_chk (1, "buffer_get_string_ret: buffer_get failed\n");
# .MEM_47 = VDEF <.MEM_35>
_21 = __printf_chk (1, "buffer_get_string: buffer error%s\n", "");
# .MEM_50 = VDEF <.MEM_36>
_18 = __printf_chk (1, "Could not load \"%s\" as a RSA1 public key", filename_6(D));
# .MEM_13 = VDEF <.MEM_37>
_1 = key_try_load_public (&key, filename_6(D), commentp_7(D));
# .MEM_14 = VDEF <.MEM_13>
_2 = key_try_load_public (&key, filename_6(D), commentp_7(D));
# .MEM_12 = VDEF <.MEM_11(D)>
_2 = time (0B);
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
# .MEM_43 = VDEF <.MEM_35>
_16 = __printf_chk (1, "Bad key file %s\n", _4);
# .MEM_36 = VDEF <.MEM_35>
_19 = __fprintf_chk (_18, 1, "Identity removed: %s (%s)\n", _4, _17);
 <var_decl 0x7f88d8bd73f0 comment
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
    addressable used unsigned DI file ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c line 154 col 26 size <integer_cst 0x7f88d9078be8 64> unit size <integer_cst 0x7f88d9078c00 8>
    align 64 context <function_decl 0x7f88d8ba3b00 main> abstract_origin <var_decl 0x7f88d8bcdd80 comment> chain <var_decl 0x7f88d8bd7480 ret>>
# .MEM_38 = VDEF <.MEM_37>
cert_21 = key_load_public ("filename", &comment);
# .MEM_39 = VDEF <.MEM_38>
_22 = rand ();
# .MEM_41 = VDEF <.MEM_39>
_26 = __fprintf_chk (_25, 1, "Identity removed: %s (%s)\n", "filename", _24);
# .MEM_40 = VDEF <.MEM_39>
_28 = __fprintf_chk (_27, 1, "Could not remove identity: %s\n", "filename");
 <var_decl 0x7f88d8bd73f0 comment
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
    addressable used unsigned DI file ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c line 154 col 26 size <integer_cst 0x7f88d9078be8 64> unit size <integer_cst 0x7f88d9078c00 8>
    align 64 context <function_decl 0x7f88d8ba3b00 main> abstract_origin <var_decl 0x7f88d8bcdd80 comment> chain <var_decl 0x7f88d8bd7480 ret>>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:key_try_load_public========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function â€˜key_try_load_publicâ€™:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
   while (__RANDBOOL) {
         ^
	relate logic:= 0
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
_3 = _2 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:10: warning: use location
   while (__RANDBOOL) {
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
   while (__RANDBOOL) {
         ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
Cond in fucntion key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 3
 ================== possible direct basic block ================= 
from key_try_load_public basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
_2 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:10: warning: use location
   while (__RANDBOOL) {
          ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
[40;44m =======node_fun:key_load_public========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_load_public  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function â€˜key_load_publicâ€™:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
   while (__RANDBOOL) {
         ^
	relate logic:= 0
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
_3 = _2 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:10: warning: use location
   while (__RANDBOOL) {
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
   while (__RANDBOOL) {
         ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
Cond in fucntion key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 3
 ================== possible direct basic block ================= 
from key_try_load_public basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
_2 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:10: warning: use location
   while (__RANDBOOL) {
          ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:key_load_public========= [0m
[40;42m =======start_check_funciton:key_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd1360
    type <pointer_type 0x7f88d8ba2c78
        type <integer_type 0x7f88d8ba2bd0 u_char public unsigned string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d9078d08 0> max <integer_cst 0x7f88d9078ca8 255> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8ba2c78>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f88d8bcd6c0 value>
    def_stmt value_27 = malloc (_26);
    version 27
    ptr-info 0x7f88d8bc8390>
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location
this stmt have mutiple branch --------
_44 = _34;
lto1: warning: use location
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_45 = ret_20;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^
if (ret_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
Cond in fucntion key_load_public basic block 6
 ================== possible direct basic block ================= 
from key_load_public basic block 7
 ================== possible direct basic block ================= 
from key_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
value_27 = malloc (_26);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1360
    type <pointer_type 0x7f88d8ba2c78
        type <integer_type 0x7f88d8ba2bd0 u_char public unsigned string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d9078d08 0> max <integer_cst 0x7f88d9078ca8 255> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8ba2c78>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f88d8bcd6c0 value>
    def_stmt value_27 = malloc (_26);
    version 27
    ptr-info 0x7f88d8bc8390>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd1360
    type <pointer_type 0x7f88d8ba2c78
        type <integer_type 0x7f88d8ba2bd0 u_char public unsigned string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d9078d08 0> max <integer_cst 0x7f88d9078ca8 255> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8ba2c78>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f88d8bcd6c0 value>
    def_stmt value_27 = malloc (_26);
    version 27
    ptr-info 0x7f88d8bc8390>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = _22 % 1024;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = _22 % 1024;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = _22 % 1024;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_23 = _22 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
  u_int len = rand() % 1024;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_24 = (u_int) _23;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_24 = (u_int) _23;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_24 = (u_int) _23;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
len_24 = (u_int) _23;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:8: warning: use location
  u_int len = rand() % 1024;
        ^
_31 = (sizetype) len_24;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = len_24 + 1;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = len_24 + 1;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = len_24 + 1;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_25 = len_24 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:10: warning: use location
  value = xmalloc(len + 1); /* allocation site */
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = (long unsigned int) _25;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = (long unsigned int) _25;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = (long unsigned int) _25;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_26 = (long unsigned int) _25;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:10: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
value_27 = malloc (_26);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location
this stmt have mutiple branch --------
_44 = _34;
lto1: warning: use location
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_45 = ret_20;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^
if (ret_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
Cond in fucntion key_load_public basic block 6
 ================== possible direct basic block ================= 
from key_load_public basic block 7
 ================== possible direct basic block ================= 
from key_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_22 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:14: warning: use location
  u_int len = rand() % 1024;
              ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_31 = (sizetype) len_24;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_31 = (sizetype) len_24;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f88d8bd1318
    type <integer_type 0x7f88d908c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f88d908c738 precision 64 min <integer_cst 0x7f88d9078eb8 0> max <integer_cst 0x7f88d907a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f88d90989d8>>
   
    def_stmt _26 = (long unsigned int) _25;
    version 26>
_26 = (long unsigned int) _25;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
value_27 = malloc (_26);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1318
    type <integer_type 0x7f88d908c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f88d908c738 precision 64 min <integer_cst 0x7f88d9078eb8 0> max <integer_cst 0x7f88d907a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f88d90989d8>>
   
    def_stmt _26 = (long unsigned int) _25;
    version 26>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location
this stmt have mutiple branch --------
_44 = _34;
lto1: warning: use location
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_45 = ret_20;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^
if (ret_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
Cond in fucntion key_load_public basic block 6
 ================== possible direct basic block ================= 
from key_load_public basic block 7
 ================== possible direct basic block ================= 
from key_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd1318
    type <integer_type 0x7f88d908c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f88d908c738 precision 64 min <integer_cst 0x7f88d9078eb8 0> max <integer_cst 0x7f88d907a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f88d90989d8>>
   
    def_stmt _26 = (long unsigned int) _25;
    version 26>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f88d8bd13a8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _28 = rand ();
    version 28>
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _28 % 2;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _28 % 2;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _28 % 2;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_29 = _28 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:6: warning: use location
  if (__RANDBOOL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_29 == 1)
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_29 == 1)
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_29 == 1)
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
if (_29 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:5: warning: use location
  if (__RANDBOOL) {
     ^
if (_29 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:5: warning: use location
Cond in fucntion key_load_public basic block 3
 ================== possible direct basic block ================= 
from key_load_public basic block 4
 ================== possible direct basic block ================= 
from key_load_public basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_28 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:6: warning: use location
  if (__RANDBOOL) {
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd13a8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _28 = rand ();
    version 28>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd13a8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _28 = rand ();
    version 28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f88d9078f90 type <integer_type 0x7f88d908c5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f88d9078f90 type <integer_type 0x7f88d908c5e8 int> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7f88d8b96b00
    type <pointer_type 0x7f88d8bab2a0
        type <record_type 0x7f88d8bab348 Key BLK
            size <integer_cst 0x7f88d9094030 constant 512>
            unit size <integer_cst 0x7f88d9131c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8bab3f0 fields <field_decl 0x7f88d8baced8 type> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8bab2a0> chain <type_decl 0x7f88d8bad000 D.4063>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7f88d9e0db40 key type <record_type 0x7f88d8bab348 Key>
        addressable static BLK file ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c line 15 col 5 size <integer_cst 0x7f88d9094030 512> unit size <integer_cst 0x7f88d9131c18 64>
        align 64 context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f88d8b96b60
    type <pointer_type 0x7f88d8bab2a0
        type <record_type 0x7f88d8bab348 Key BLK
            size <integer_cst 0x7f88d9094030 constant 512>
            unit size <integer_cst 0x7f88d9131c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8bab3f0 fields <field_decl 0x7f88d8baced8 type> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8bab2a0> chain <type_decl 0x7f88d8bad000 D.4063>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7f88d9e0db40 key type <record_type 0x7f88d8bab348 Key>
        addressable static BLK file ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c line 15 col 5 size <integer_cst 0x7f88d9094030 512> unit size <integer_cst 0x7f88d9131c18 64>
        align 64 context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__fprintf_chk========= [0m
[40;33m =======POP node_fun stack:__fprintf_chk========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_load_public========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080990
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _1 = strdup (filename_8(D));
    version 1
    ptr-info 0x7f88d8bc8270>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080ab0
    type <pointer_type 0x7f88d8ba2a80
        type <integer_type 0x7f88d8ba29d8 char readonly string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f88d8bb4380 filename>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f88d8bc8288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:17: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:15: warning: use location
     *commentp = xstrdup(filename); /* allocation site */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:4: warning: use location
  f = fopen(filename, "r");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
bb index := 7
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 9

======================================================================

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:3: warning: use location
   fclose(f);
   ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
   while (__RANDBOOL) {
         ^
	relate logic:= 0
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:4: warning: use location
    fclose(f);
    ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 15

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
  if (f != NULL) {
     ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:5: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d9080af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
    var <var_decl 0x7f88d9e0dbd0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version 10
    ptr-info 0x7f88d8bc82a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
_3 = _2 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:10: warning: use location
   while (__RANDBOOL) {
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
   while (__RANDBOOL) {
         ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:9: warning: use location
Cond in fucntion key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 3
 ================== possible direct basic block ================= 
from key_try_load_public basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
bb index := 6
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
bb index := 6
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================
_2 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:10: warning: use location
   while (__RANDBOOL) {
          ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d90809d8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:key_load_public========= [0m
[40;42m =======start_check_funciton:key_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd1360
    type <pointer_type 0x7f88d8ba2c78
        type <integer_type 0x7f88d8ba2bd0 u_char public unsigned string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d9078d08 0> max <integer_cst 0x7f88d9078ca8 255> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8ba2c78>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f88d8bcd6c0 value>
    def_stmt value_27 = malloc (_26);
    version 27
    ptr-info 0x7f88d8bc8390>
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location
this stmt have mutiple branch --------
_44 = _34;
lto1: warning: use location
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_45 = ret_20;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^
if (ret_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
Cond in fucntion key_load_public basic block 6
 ================== possible direct basic block ================= 
from key_load_public basic block 7
 ================== possible direct basic block ================= 
from key_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
value_27 = malloc (_26);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1360
    type <pointer_type 0x7f88d8ba2c78
        type <integer_type 0x7f88d8ba2bd0 u_char public unsigned string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d9078d08 0> max <integer_cst 0x7f88d9078ca8 255> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8ba2c78>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f88d8bcd6c0 value>
    def_stmt value_27 = malloc (_26);
    version 27
    ptr-info 0x7f88d8bc8390>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd1360
    type <pointer_type 0x7f88d8ba2c78
        type <integer_type 0x7f88d8ba2bd0 u_char public unsigned string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d9078d08 0> max <integer_cst 0x7f88d9078ca8 255> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8ba2c78>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f88d8bcd6c0 value>
    def_stmt value_27 = malloc (_26);
    version 27
    ptr-info 0x7f88d8bc8390>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = _22 % 1024;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = _22 % 1024;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = _22 % 1024;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_23 = _22 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
  u_int len = rand() % 1024;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_24 = (u_int) _23;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_24 = (u_int) _23;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_24 = (u_int) _23;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
len_24 = (u_int) _23;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:8: warning: use location
  u_int len = rand() % 1024;
        ^
_31 = (sizetype) len_24;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = len_24 + 1;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = len_24 + 1;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = len_24 + 1;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_25 = len_24 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:10: warning: use location
  value = xmalloc(len + 1); /* allocation site */
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = (long unsigned int) _25;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = (long unsigned int) _25;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_26 = (long unsigned int) _25;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_26 = (long unsigned int) _25;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:10: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
value_27 = malloc (_26);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location
this stmt have mutiple branch --------
_44 = _34;
lto1: warning: use location
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_45 = ret_20;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^
if (ret_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
Cond in fucntion key_load_public basic block 6
 ================== possible direct basic block ================= 
from key_load_public basic block 7
 ================== possible direct basic block ================= 
from key_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_11(D)>
_22 = rand ();
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_22 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:14: warning: use location
  u_int len = rand() % 1024;
              ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd11f8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_31 = (sizetype) len_24;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_31 = (sizetype) len_24;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f88d8bd1318
    type <integer_type 0x7f88d908c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f88d908c738 precision 64 min <integer_cst 0x7f88d9078eb8 0> max <integer_cst 0x7f88d907a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f88d90989d8>>
   
    def_stmt _26 = (long unsigned int) _25;
    version 26>
_26 = (long unsigned int) _25;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
value_27 = malloc (_26);
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
value_27 = malloc (_26);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1318
    type <integer_type 0x7f88d908c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f88d908c738 precision 64 min <integer_cst 0x7f88d9078eb8 0> max <integer_cst 0x7f88d907a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f88d90989d8>>
   
    def_stmt _26 = (long unsigned int) _25;
    version 26>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location
this stmt have mutiple branch --------
_44 = _34;
lto1: warning: use location
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = ret_20;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_45 = ret_20;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _45;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
bb index := 8
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^
if (ret_20 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
Cond in fucntion key_load_public basic block 6
 ================== possible direct basic block ================= 
from key_load_public basic block 7
 ================== possible direct basic block ================= 
from key_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd1318
    type <integer_type 0x7f88d908c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f88d908c738 precision 64 min <integer_cst 0x7f88d9078eb8 0> max <integer_cst 0x7f88d907a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f88d90989d8>>
   
    def_stmt _26 = (long unsigned int) _25;
    version 26>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_34 = PHI <0B(4), value_27(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_44 = _34;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
ret_20 = _44;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_45 = ret_20;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_19 = _45;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:15: warning: use location
   *commentp = buffer_get_string(NULL);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_46 = VDEF <.MEM_35>
*commentp_7(D) = _19;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:92:13: warning: use location
   *commentp = buffer_get_string(NULL);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
if (ret_20 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:5: warning: use location
  if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_33 = value_27;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:66:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_32 = value_27 + _31;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_41 = VDEF <.MEM_40>
*_32 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f88d8bd13a8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _28 = rand ();
    version 28>
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _28 % 2;
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _28 % 2;
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _28 % 2;
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_29 = _28 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:6: warning: use location
  if (__RANDBOOL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_29 == 1)
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_29 == 1)
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_29 == 1)
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
if (_29 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:5: warning: use location
  if (__RANDBOOL) {
     ^
if (_29 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:5: warning: use location
Cond in fucntion key_load_public basic block 3
 ================== possible direct basic block ================= 
from key_load_public basic block 4
 ================== possible direct basic block ================= 
from key_load_public basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
_28 = rand ();
bb index := 3
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_28 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:6: warning: use location
  if (__RANDBOOL) {
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd13a8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _28 = rand ();
    version 28>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd13a8
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _28 = rand ();
    version 28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f88d9078f90 type <integer_type 0x7f88d908c5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f88d9078f90 type <integer_type 0x7f88d908c5e8 int> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7f88d8b96b00
    type <pointer_type 0x7f88d8bab2a0
        type <record_type 0x7f88d8bab348 Key BLK
            size <integer_cst 0x7f88d9094030 constant 512>
            unit size <integer_cst 0x7f88d9131c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8bab3f0 fields <field_decl 0x7f88d8baced8 type> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8bab2a0> chain <type_decl 0x7f88d8bad000 D.4063>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7f88d9e0db40 key type <record_type 0x7f88d8bab348 Key>
        addressable static BLK file ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c line 15 col 5 size <integer_cst 0x7f88d9094030 512> unit size <integer_cst 0x7f88d9131c18 64>
        align 64 context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f88d8b96b60
    type <pointer_type 0x7f88d8bab2a0
        type <record_type 0x7f88d8bab348 Key BLK
            size <integer_cst 0x7f88d9094030 constant 512>
            unit size <integer_cst 0x7f88d9131c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8bab3f0 fields <field_decl 0x7f88d8baced8 type> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8bab2a0> chain <type_decl 0x7f88d8bad000 D.4063>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7f88d9e0db40 key type <record_type 0x7f88d8bab348 Key>
        addressable static BLK file ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c line 15 col 5 size <integer_cst 0x7f88d9094030 512> unit size <integer_cst 0x7f88d9131c18 64>
        align 64 context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f88d9094000 type <pointer_type 0x7f88d90930a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd1b88
    type <integer_type 0x7f88d908c690 unsigned int public unsigned SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c690 precision 32 min <integer_cst 0x7f88d9078e58 0> max <integer_cst 0x7f88d9078e10 4294967295>
        pointer_to_this <pointer_type 0x7f88d9098888>>
   
    def_stmt _3 = (unsigned int) _2;
    version 3>
_3 = (unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
srand (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:189:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1b88
    type <integer_type 0x7f88d908c690 unsigned int public unsigned SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c690 precision 32 min <integer_cst 0x7f88d9078e58 0> max <integer_cst 0x7f88d9078e10 4294967295>
        pointer_to_this <pointer_type 0x7f88d9098888>>
   
    def_stmt _3 = (unsigned int) _2;
    version 3>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
srand (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:189:2: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1b88
    type <integer_type 0x7f88d908c690 unsigned int public unsigned SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c690 precision 32 min <integer_cst 0x7f88d9078e58 0> max <integer_cst 0x7f88d9078e10 4294967295>
        pointer_to_this <pointer_type 0x7f88d9098888>>
   
    def_stmt _3 = (unsigned int) _2;
    version 3>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd1b88
    type <integer_type 0x7f88d908c690 unsigned int public unsigned SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c690 precision 32 min <integer_cst 0x7f88d9078e58 0> max <integer_cst 0x7f88d9078e10 4294967295>
        pointer_to_this <pointer_type 0x7f88d9098888>>
   
    def_stmt _3 = (unsigned int) _2;
    version 3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: use location
  free(comment); /* double-free */
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_32>
free (_29);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:2: warning: use location
  free(comment); /* double-free */
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd1bd0
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version 4
    ptr-info 0x7f88d8bc8468>
_4 = PHI <_10(3), _9(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_19 = __fprintf_chk (_18, 1, "Identity removed: %s (%s)\n", _4, _17);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1bd0
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version 4
    ptr-info 0x7f88d8bc8468>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_35>
_16 = __printf_chk (1, "Bad key file %s\n", _4);
bb index := 6
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
_16 = __printf_chk (1, "Bad key file %s\n", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1bd0
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version 4
    ptr-info 0x7f88d8bc8468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: use location
  public = key_load_public(filename, &comment);
         ^
this stmt is child function---key_load_public-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd1bd0
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version 4
    ptr-info 0x7f88d8bc8468>
trace fucntion name:key_load_public 
[40;44m =======trace_function_path key_load_public  function_call count: 6 level :0========  [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
[40;36m ======= node_fun:key_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
[40;46m =======add node_fun stack:key_try_load_public========= [0m
[40;44m =======trace_function_path key_try_load_public  function_call count: 4 level :1========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
if (public_15 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:5: warning: use location
  if (public == NULL) {
     ^
if (public_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd1bd0
    type <pointer_type 0x7f88d8ba27e0
        type <integer_type 0x7f88d8ba2738 char public string-flag QI
            size <integer_cst 0x7f88d9078cd8 constant 8>
            unit size <integer_cst 0x7f88d9078cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f88d908c3f0 precision 8 min <integer_cst 0x7f88d8ba5180 -128> max <integer_cst 0x7f88d8ba5168 127>
            pointer_to_this <pointer_type 0x7f88d8ba27e0>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f88d8ba2888>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version 4
    ptr-info 0x7f88d8bc8468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: use location
  free(comment); /* double-free */
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_32>
free (_29);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:2: warning: use location
  free(comment); /* double-free */
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: Use after free error!: free location 
  public = key_load_public(filename, &comment);
         ^
# .MEM_36 = VDEF <.MEM_35>
_19 = __fprintf_chk (_18, 1, "Identity removed: %s (%s)\n", _4, _17);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: Use after free error!: free location 
# .MEM_43 = VDEF <.MEM_35>
_16 = __printf_chk (1, "Bad key file %s\n", _4);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: Use after free error!: free location 
if (public_15 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:5: warning: use location
  if (public == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd6900
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _18 = stderr;
    version 18
    ptr-info 0x7f88d8bc84f8>
# VUSE <.MEM_35>
_18 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_19 = __fprintf_chk (_18, 1, "Identity removed: %s (%s)\n", _4, _17);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd6900
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _18 = stderr;
    version 18
    ptr-info 0x7f88d8bc84f8>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_35>
_16 = __printf_chk (1, "Bad key file %s\n", _4);
bb index := 6
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
_16 = __printf_chk (1, "Bad key file %s\n", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd6900
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _18 = stderr;
    version 18
    ptr-info 0x7f88d8bc84f8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: use location
  public = key_load_public(filename, &comment);
         ^
this stmt is child function---key_load_public-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd6900
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _18 = stderr;
    version 18
    ptr-info 0x7f88d8bc84f8>
trace fucntion name:key_load_public 
[40;44m =======trace_function_path key_load_public  function_call count: 6 level :0========  [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
[40;31m  find free stmt free same pointer [0m
# .MEM_43 = VDEF <.MEM_42>
free (value_27);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:3: warning: use location
   xfree(value);
   ^
[40;36m ======= node_fun:key_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
[40;46m =======add node_fun stack:key_try_load_public========= [0m
[40;44m =======trace_function_path key_try_load_public  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:key_try_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 15 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (public_15 == 0B)
bb index := 5
# VUSE <.MEM_44>
return 0;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
if (public_15 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:5: warning: use location
  if (public == NULL) {
     ^
if (public_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd6900
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _18 = stderr;
    version 18
    ptr-info 0x7f88d8bc84f8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: use location
  free(comment); /* double-free */
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_32>
free (_29);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:2: warning: use location
  free(comment); /* double-free */
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: Use after free error!: free location 
  public = key_load_public(filename, &comment);
         ^
# .MEM_36 = VDEF <.MEM_35>
_19 = __fprintf_chk (_18, 1, "Identity removed: %s (%s)\n", _4, _17);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: Use after free error!: free location 
# .MEM_43 = VDEF <.MEM_35>
_16 = __printf_chk (1, "Bad key file %s\n", _4);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_35 = VDEF <.MEM_34>
public_15 = key_load_public (_4, &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:9: warning: Use after free error!: free location 
if (public_15 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:5: warning: use location
  if (public == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f88d8bce900
    type <pointer_type 0x7f88d8bb2a80
        type <array_type 0x7f88d8bb29d8 type <integer_type 0x7f88d8ba2738 char>
            BLK
            size <integer_cst 0x7f88d8ba54f8 constant 72>
            unit size <integer_cst 0x7f88d8ba54e0 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f88d8bb2930>
            pointer_to_this <pointer_type 0x7f88d8bb2a80>>
        unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f88d8bce520 type <array_type 0x7f88d8bb29d8>
        readonly constant static "filename\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd6a20
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
# .MEM_39 = VDEF <.MEM_38>
_22 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_23 = _22 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:5: warning: use location
  if(__RANDBOOL) {
     ^
if (_23 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:4: warning: use location
  if(__RANDBOOL) {
    ^
if (_23 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:4: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_22 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:5: warning: use location
  if(__RANDBOOL) {
     ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd6a20
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd6a20
    type <integer_type 0x7f88d908c5e8 int public SI
        size <integer_cst 0x7f88d9078e28 constant 32>
        unit size <integer_cst 0x7f88d9078e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f88d908c5e8 precision 32 min <integer_cst 0x7f88d9078de0 -2147483648> max <integer_cst 0x7f88d9078df8 2147483647>
        pointer_to_this <pointer_type 0x7f88d9093a80>>
   
    def_stmt _22 = rand ();
    version 22>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: use location
  free(comment); /* double-free */
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_32>
free (_29);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:2: warning: use location
  free(comment); /* double-free */
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: Use after free error!: free location 
  free(comment); /* double-free */
  ^
_23 = _22 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:5: warning: use location
  if(__RANDBOOL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: Use after free error!: free location 
  free(comment); /* double-free */
  ^
if (_23 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:4: warning: use location
  if(__RANDBOOL) {
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: Use after free error!: free location 
  free(comment); /* double-free */
  ^
# .MEM_39 = VDEF <.MEM_38>
_22 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:5: warning: use location
  if(__RANDBOOL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd6af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _25 = stderr;
    version 25
    ptr-info 0x7f88d8bc8558>
# VUSE <.MEM_39>
_25 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_26 = __fprintf_chk (_25, 1, "Identity removed: %s (%s)\n", "filename", _24);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd6af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _25 = stderr;
    version 25
    ptr-info 0x7f88d8bc8558>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 
_26 = __fprintf_chk (_25, 1, "Identity removed: %s (%s)\n", "filename", _24);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f88d8bd6af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _25 = stderr;
    version 25
    ptr-info 0x7f88d8bc8558>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f88d8bd6af8
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _25 = stderr;
    version 25
    ptr-info 0x7f88d8bc8558>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: use location
  free(comment); /* double-free */
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_32>
free (_29);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:2: warning: use location
  free(comment); /* double-free */
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: Use after free error!: free location 
  free(comment); /* double-free */
  ^
# .MEM_41 = VDEF <.MEM_39>
_26 = __fprintf_chk (_25, 1, "Identity removed: %s (%s)\n", "filename", _24);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (_20);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:2: warning: Use after free error!: free location 
# .MEM_41 = VDEF <.MEM_39>
_26 = __fprintf_chk (_25, 1, "Identity removed: %s (%s)\n", "filename", _24);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f88d8bd6b88
    type <pointer_type 0x7f88d8baf888
        type <record_type 0x7f88d8baf7e0 FILE BLK
            size <integer_cst 0x7f88d8ba52d0 constant 1728>
            unit size <integer_cst 0x7f88d8ba53d8 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f88d8baf690 fields <field_decl 0x7f88d8bb0688 _flags> context <translation_unit_decl 0x7f88d9083168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f88d8baf888> chain <type_decl 0x7f88d8bb0720 D.4111>>
        public unsigned DI
        size <integer_cst 0x7f88d9078be8 constant 64>
        unit size <integer_cst 0x7f88d9078c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f88d8bb2540>>
   
    def_stmt _27 = stderr;
    version 27
    ptr-info 0x7f88d8bc8570>
# VUSE <.MEM_39>
_27 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:key_try_load_public=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
f_10 = fopen (filename_8(D), "r");
if (f_10 != 0B)
  goto <bb 6>; [57.44%]
else
  goto <bb 9>; [42.56%]

=======is loop:0=========

 bb index 3 
<bb 3> [29.36%]:
if (commentp_13(D) != 0B)
  goto <bb 4>; [57.44%]
else
  goto <bb 5>; [42.56%]

=======is loop:0=========

 bb index 4 
<bb 4> [16.87%]:
_1 = strdup (filename_8(D));
*commentp_13(D) = _1;

=======is loop:0=========

 bb index 5 
<bb 5> [29.36%]:
fclose (f_10);
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [57.44%]:
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 3>; [51.12%]
else
  goto <bb 7>; [48.88%]

=======is loop:0=========

 bb index 7 
<bb 7> [28.08%]:
fclose (f_10);

=======is loop:0=========

 bb index 9 
<bb 9> [100.00%]:
# _4 = PHI <0(2), 1(5), 0(7)>
return _4;

=======Mapping node_fun:key_load_public=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (commentp_7(D) != 0B)
  goto <bb 3>; [57.44%]
else
  goto <bb 9>; [42.56%]

=======is loop:0=========

 bb index 3 
<bb 3> [57.44%]:
_22 = rand ();
_23 = _22 % 1024;
len_24 = (u_int) _23;
_25 = len_24 + 1;
_26 = (long unsigned int) _25;
value_27 = malloc (_26);
_28 = rand ();
_29 = _28 % 2;
if (_29 == 1)
  goto <bb 4>; [2.45%]
else
  goto <bb 5>; [97.55%]

=======is loop:0=========

 bb index 4 
<bb 4> [1.41%]:
_30 = __printf_chk (1, "buffer_get_string_ret: buffer_get failed\n");
free (value_27);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [56.03%]:
_31 = (sizetype) len_24;
_32 = value_27 + _31;
*_32 = 0;
_33 = value_27;

=======is loop:0=========

 bb index 6 
<bb 6> [57.44%]:
# _34 = PHI <0B(4), value_27(5)>
_44 = _34;
ret_20 = _44;
if (ret_20 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.02%]:
_21 = __printf_chk (1, "buffer_get_string: buffer error%s\n", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [57.42%]:
_45 = ret_20;
_19 = _45;
*commentp_7(D) = _19;

=======is loop:0=========

 bb index 9 
<bb 9> [99.98%]:
_49 = &key;
pub_17 = _49;
if (pub_17 == 0B)
  goto <bb 10>; [19.86%]
else
  goto <bb 11>; [80.14%]

=======is loop:0=========

 bb index 10 
<bb 10> [19.86%]:
_18 = __printf_chk (1, "Could not load \"%s\" as a RSA1 public key", filename_6(D));

=======is loop:0=========

 bb index 11 
<bb 11> [99.98%]:
_51 = pub_17;
pub_15 = _51;
_52 = pub_15;
pub_9 = _52;
if (pub_9 != 0B)
  goto <bb 15>; [80.14%]
else
  goto <bb 12>; [19.86%]

=======is loop:0=========

 bb index 12 
<bb 12> [19.86%]:
_1 = key_try_load_public (&key, filename_6(D), commentp_7(D));
if (_1 == 1)
  goto <bb 15>; [47.11%]
else
  goto <bb 13>; [52.89%]

=======is loop:0=========

 bb index 13 
<bb 13> [10.50%]:
_2 = key_try_load_public (&key, filename_6(D), commentp_7(D));
if (_2 == 1)
  goto <bb 15>; [83.89%]
else
  goto <bb 14>; [16.11%]

=======is loop:0=========

 bb index 14 
<bb 14> [1.69%]:

=======is loop:0=========

 bb index 15 
<bb 15> [99.98%]:
# _3 = PHI <pub_9(11), &key(12), &key(13), 0B(14)>
return _3;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = argc_5(D) == 1;
key_only_6 = (int) _1;
if (argc_5(D) == 1)
  goto <bb 3>; [30.50%]
else
  goto <bb 4>; [69.50%]

=======is loop:0=========

 bb index 3 
<bb 3> [30.50%]:
_10 = *argv_8(D);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [69.50%]:
_9 = MEM[(char * *)argv_8(D) + 8B];

=======is loop:0=========

 bb index 5 
<bb 5> [100.00%]:
# _4 = PHI <_10(3), _9(4)>
_2 = time (0B);
_3 = (unsigned int) _2;
srand (_3);
comment = 0B;
public_15 = key_load_public (_4, &comment);
if (public_15 == 0B)
  goto <bb 6>; [0.87%]
else
  goto <bb 7>; [99.13%]

=======is loop:0=========

 bb index 6 
<bb 6> [0.87%]:
_16 = __printf_chk (1, "Bad key file %s\n", _4);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [99.13%]:
_17 = comment;
_18 = stderr;
_19 = __fprintf_chk (_18, 1, "Identity removed: %s (%s)\n", _4, _17);
if (key_only_6 != 0)
  goto <bb 12> (out); [67.00%]
else
  goto <bb 8>; [33.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [32.71%]:
_20 = comment;
free (_20);
cert_21 = key_load_public ("filename", &comment);
if (cert_21 == 0B)
  goto <bb 12> (out); [46.53%]
else
  goto <bb 9>; [53.47%]

=======is loop:0=========

 bb index 9 
<bb 9> [17.49%]:
_22 = rand ();
_23 = _22 % 2;
if (_23 == 1)
  goto <bb 10>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [5.95%]:
_24 = comment;
_25 = stderr;
_26 = __fprintf_chk (_25, 1, "Identity removed: %s (%s)\n", "filename", _24);
goto <bb 12> (out); [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [11.54%]:
_27 = stderr;
_28 = __fprintf_chk (_27, 1, "Could not remove identity: %s\n", "filename");

=======is loop:0=========

 bb index 12 
# ret_31 = PHI <-1(7), -1(8), 0(10), -1(11)>
out [99.13%]:
_29 = comment;
free (_29);

=======is loop:0=========

 bb index 13 
<bb 13> [100.00%]:
# _30 = PHI <-1(6), ret_31(12)>
comment ={v} {CLOBBER};
_45 = _30;
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 13 [0m
[40;34m    used_stmt array stack totalsize of : 2048 [0m
[40;34m    collect time: : 0.000121 s [0m
[40;34m    algorithm time: 0.050786 s [0m
[40;34m    gimple stmt count : : 83 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
