In file included from ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:9:
./benchmarks/openssh-portable/double_free_2/../openssh.h:675:60: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  675 |         int     (*verify_host_key)(struct sshkey *, struct ssh *);
      |                                                            ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:676:65: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  676 |         struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
      |                                                                 ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:677:66: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  677 |         struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
      |                                                                  ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:678:64: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  678 |         int     (*host_key_index)(struct sshkey *, int, struct ssh *);
      |                                                                ^~~
./benchmarks/openssh-portable/double_free_2/../openssh.h:681:40: warning: ‘struct ssh’ declared inside parameter list will not be visible outside of this definition or declaration
  681 |         int     (*kex[KEX_MAX])(struct ssh *);
      |                                        ^~~
In file included from ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:8:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c: In function ‘key_try_load_public’:
./benchmarks/openssh-portable/double_free_2/../stdio.h:266:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: note: in expansion of macro ‘xstrdup’
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^~~~~~~
./benchmarks/openssh-portable/double_free_2/../stdio.h:266:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  266 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: note: in expansion of macro ‘xstrdup’
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^~~~~~~
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c: In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:189:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  189 |         srand(time(NULL));
      |               ^~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -3.2%|          |
nothrow                          |      |      |      |      |     -3.3%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:delete_file=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 4
succs:= 5
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
succs:= 8
succs:= 5
succs:= 7
=======node_fun:key_load_public=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 4
=======node_fun:key_load_public_type=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:key_load_public_rsa1=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:key_parse_public_rsa1=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:buffer_get_string=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:buffer_get_string_ret=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
=======node_fun:key_try_load_public=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_12 = VDEF <.MEM_11(D)>
_2 = time (0B);
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
# .MEM_14 = VDEF <.MEM_13>
delete_file (_4, key_only_6);
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
# .MEM_36 = VDEF <.MEM_28>
printf ("Bad key file %s\n", filename_16(D));
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
 <var_decl 0x7f21108b2090 comment
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
    addressable unsigned DI ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:154:26 size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f211089d100 delete_file> chain <var_decl 0x7f21108b2000 ret>>
# .MEM_31 = VDEF <.MEM_30>
cert_23 = key_load_public ("filename", &comment);
# .MEM_32 = VDEF <.MEM_31>
_4 = rand ();
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
 <var_decl 0x7f21108b2090 comment
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
    addressable unsigned DI ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:154:26 size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f211089d100 delete_file> chain <var_decl 0x7f21108b2000 ret>>
# .MEM_12 = VDEF <.MEM_11(D)>
pub_9 = key_load_public_type (0, filename_6(D), commentp_7(D));
# .MEM_13 = VDEF <.MEM_12>
_1 = key_try_load_public (&key, filename_6(D), commentp_7(D));
# .MEM_14 = VDEF <.MEM_13>
_2 = key_try_load_public (&key, filename_6(D), commentp_7(D));
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
# .MEM_10 = VDEF <.MEM_9>
printf ("Could not load \"%s\" as a RSA1 public key", filename_6(D));
# .MEM_6 = VDEF <.MEM_5(D)>
_1 = buffer_get_string (0B);
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
# .MEM_7 = VDEF <.MEM_6>
printf ("buffer_get_string: buffer error%s\n", "");
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();
# .MEM_26 = VDEF <.MEM_23>
__builtin_puts (&"buffer_get_string_ret: buffer_get failed"[0]);
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:delete_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path delete_file  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_load_public========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:24: warning: use location
   27 |                 while (__RANDBOOL) {
      |                        ^
	relate logic:= 0
=succs:= 2
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf318
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_type  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_rsa1  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_public_rsa1  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :7========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;42m =======pre_check_funciton:key_parse_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_parse_public_rsa1========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f21108aa648 type <pointer_type 0x7f2110895348> constant 0>
[40;33m =======POP node_fun stack:key_parse_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_load_public_rsa1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
pub_5 = key_parse_public_rsa1 (commentp_3(D));
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:107:15: warning: use location
  107 |         pub = key_parse_public_rsa1(commentp);
      |               ^
this stmt is child function---key_parse_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_public_rsa1 
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :2========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (pub_5 == 0B)
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
  108 |         if (pub == NULL)
      |            ^
if (pub_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
Cond in fucntion key_load_public_rsa1 basic block 2
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 3
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b90c0
    type <pointer_type 0x7f21108a1e70
        type <array_type 0x7f21108a1dc8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c8e8 constant 328>
            unit-size <integer_cst 0x7f211088c930 constant 41>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1540>
            pointer_to_this <pointer_type 0x7f21108a1e70>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d7f080 type <array_type 0x7f21108a1dc8>
        readonly constant static "Could not load "%s" as a RSA1 public key\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_type========= [0m
[40;42m =======start_check_funciton:key_load_public_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_type’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
In function ‘main’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: use location
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
this stmt is child function---key_load_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_load_public_rsa1 
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :3========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: Use after free error!: free location 
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (type_3(D) == 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:120:12: warning: use location
  120 |         if (type == KEY_RSA1) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_type========= [0m
[40;42m =======pre_check_funciton:key_load_public========= [0m
[40;42m =======start_check_funciton:key_load_public========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f2110d6cf48 type <integer_type 0x7f2110d815e8 int> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7f2110f68f40
    type <pointer_type 0x7f211089ee70
        type <record_type 0x7f211089c348 Key BLK
            size <integer_cst 0x7f2110d8a000 constant 512>
            unit-size <integer_cst 0x7f2110e41090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089c2a0 fields <field_decl 0x7f21108985f0 type> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089ee70>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7f2111614b40 key type <record_type 0x7f211089c348 Key>
        addressable static BLK ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:15:5 size <integer_cst 0x7f2110d8a000 512> unit-size <integer_cst 0x7f2110e41090 64>
        align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68fa0
    type <pointer_type 0x7f211089ee70
        type <record_type 0x7f211089c348 Key BLK
            size <integer_cst 0x7f2110d8a000 constant 512>
            unit-size <integer_cst 0x7f2110e41090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089c2a0 fields <field_decl 0x7f21108985f0 type> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089ee70>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7f2111614b40 key type <record_type 0x7f211089c348 Key>
        addressable static BLK ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:15:5 size <integer_cst 0x7f2110d8a000 512> unit-size <integer_cst 0x7f2110e41090 64>
        align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:delete_file========= [0m
[40;42m =======start_check_funciton:delete_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d74cf0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5300 filename>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f21108aa948>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
  163 |         fprintf(stderr, "Identity removed: %s (%s)\n", filename, comment);
      |         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Bad key file %s\n", filename_16(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:17: warning: use location
  159 |                 printf("Bad key file %s\n", filename);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: use location
  157 |         public = key_load_public(filename, &comment);
      |                  ^
this stmt is child function---key_load_public-----

 ================== trace ================== 
trace fucntion name:key_load_public 
[40;44m =======trace_function_path key_load_public  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:key_load_public========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
[40;46m =======add node_fun stack:key_try_load_public========= [0m
[40;44m =======trace_function_path key_try_load_public  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:key_try_load_public========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;46m =======add node_fun stack:key_load_public_type========= [0m
[40;44m =======trace_function_path key_load_public_type  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:key_load_public_type========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_load_public_rsa1========= [0m
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :5========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
if (public_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
Cond in fucntion delete_file basic block 2
 ================== possible direct basic block ================= 
from delete_file basic block 3
 ================== possible direct basic block ================= 
from delete_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74cf0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5300 filename>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f21108aa948>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: Use after free error!: free location 
  157 |         public = key_load_public(filename, &comment);
      |                  ^
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
  163 |         fprintf(stderr, "Identity removed: %s (%s)\n", filename, comment);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: Use after free error!: free location 
  157 |         public = key_load_public(filename, &comment);
      |                  ^
# .MEM_36 = VDEF <.MEM_28>
printf ("Bad key file %s\n", filename_16(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:17: warning: use location
  159 |                 printf("Bad key file %s\n", filename);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: Use after free error!: free location 
  157 |         public = key_load_public(filename, &comment);
      |                  ^
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68c40
    type <pointer_type 0x7f21108a22a0
        type <array_type 0x7f21108a21f8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c9c0 constant 136>
            unit-size <integer_cst 0x7f211088c9a8 constant 17>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a2150>
            pointer_to_this <pointer_type 0x7f21108a22a0>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f21108b3258 type <array_type 0x7f21108a21f8>
        readonly constant static "Bad key file %s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74a20
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _2 = stderr;
    version:2
    ptr-info 0x7f21108aa8b8>
# VUSE <.MEM_28>
_2 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
  163 |         fprintf(stderr, "Identity removed: %s (%s)\n", filename, comment);
      |         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74a20
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _2 = stderr;
    version:2
    ptr-info 0x7f21108aa8b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68d20
    type <pointer_type 0x7f21108a27e0
        type <array_type 0x7f21108a2738 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088ca38 constant 72>
            unit-size <integer_cst 0x7f211088ca20 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a2690>
            pointer_to_this <pointer_type 0x7f21108a27e0>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110f68d00 type <array_type 0x7f21108a2738>
        readonly constant static "filename\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74ab0
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _4 = rand ();
    version:4>
# .MEM_32 = VDEF <.MEM_31>
_4 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^
if (_5 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:11: warning: use location
  173 |         if(__RANDBOOL) {
      |           ^
if (_5 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:11: warning: use location
Cond in fucntion delete_file basic block 8
 ================== possible direct basic block ================= 
from delete_file basic block 9
 ================== possible direct basic block ================= 
from delete_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74ab0
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _4 = rand ();
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
_5 = _4 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
if (_5 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:11: warning: use location
  173 |         if(__RANDBOOL) {
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_32 = VDEF <.MEM_31>
_4 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74b88
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _7 = stderr;
    version:7
    ptr-info 0x7f21108aa900>
# VUSE <.MEM_32>
_7 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
  174 |                 fprintf(stderr, "Identity removed: %s (%s)\n", certpath,
      |                 ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74b88
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _7 = stderr;
    version:7
    ptr-info 0x7f21108aa900>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
  174 |                 fprintf(stderr, "Identity removed: %s (%s)\n", certpath,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
  174 |                 fprintf(stderr, "Identity removed: %s (%s)\n", certpath,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74bd0
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f21108aa918>
# VUSE <.MEM_32>
_8 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
  178 |                 fprintf(stderr, "Could not remove identity: %s\n", certpath);
      |                 ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74bd0
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f21108aa918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
  178 |                 fprintf(stderr, "Could not remove identity: %s\n", certpath);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
  178 |                 fprintf(stderr, "Could not remove identity: %s\n", certpath);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:delete_file========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f2110d6cfc0 type <pointer_type 0x7f2110d88000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f2110d746c0
    type <integer_type 0x7f2110d81690 unsigned int public unsigned SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295>
        pointer_to_this <pointer_type 0x7f2110d8d690>>
   
    def_stmt _3 = (unsigned int) _2;
    version:3>
_3 = (unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
srand (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:189:9: warning: use location
  189 |         srand(time(NULL));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
srand (_3);
srand (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:189:9: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d746c0
    type <integer_type 0x7f2110d81690 unsigned int public unsigned SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295>
        pointer_to_this <pointer_type 0x7f2110d8d690>>
   
    def_stmt _3 = (unsigned int) _2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74708
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version:4
    ptr-info 0x7f21108aa840>
_4 = PHI <_10(3), _9(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_14 = VDEF <.MEM_13>
delete_file (_4, key_only_6);
delete_file (_4, key_only_6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:190:9: warning: use location
  190 |         delete_file(filename, key_only);
      |         ^
this stmt is child function---delete_file-----

 ================== trace ================== 
trace fucntion name:delete_file 
[40;44m =======trace_function_path delete_file  function_call count: 5 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_35 = VDEF <.MEM_24>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^
[40;36m ======= node_fun:delete_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;46m =======add node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_load_public========= [0m
[40;46m =======add node_fun stack:key_load_public========= [0m
[40;44m =======trace_function_path key_load_public  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:key_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
[40;46m =======add node_fun stack:key_try_load_public========= [0m
[40;44m =======trace_function_path key_try_load_public  function_call count: 4 level :2========  [0m
[40;36m ======= node_fun:key_try_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;46m =======add node_fun stack:key_load_public_type========= [0m
[40;44m =======trace_function_path key_load_public_type  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:key_load_public_type========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_load_public_rsa1========= [0m
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :6========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:3 
# .MEM_14 = VDEF <.MEM_13>
delete_file (_4, key_only_6);
delete_file (_4, key_only_6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:190:9: warning: use location
  190 |         delete_file(filename, key_only);
      |         ^
this stmt is child function---delete_file-----

 ================== trace ================== 
trace fucntion name:delete_file 
[40;44m =======trace_function_path delete_file  function_call count: 5 level :0========  [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_35 = VDEF <.MEM_24>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^
[40;36m ======= node_fun:delete_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;46m =======add node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_load_public========= [0m
[40;46m =======add node_fun stack:key_load_public========= [0m
[40;44m =======trace_function_path key_load_public  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:key_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
[40;46m =======add node_fun stack:key_try_load_public========= [0m
[40;44m =======trace_function_path key_try_load_public  function_call count: 4 level :2========  [0m
[40;36m ======= node_fun:key_try_load_public========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;46m =======add node_fun stack:key_load_public_type========= [0m
[40;44m =======trace_function_path key_load_public_type  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:key_load_public_type========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_load_public_rsa1========= [0m
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :6========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:6 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74708
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _4 = PHI <_10(3), _9(4)>
    version:4
    ptr-info 0x7f21108aa840>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:delete_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path delete_file  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:key_load_public========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:24: warning: use location
   27 |                 while (__RANDBOOL) {
      |                        ^
	relate logic:= 0
=succs:= 2
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf318
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_type  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_rsa1  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_public_rsa1  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :6========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;42m =======pre_check_funciton:key_parse_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_parse_public_rsa1========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f21108aa648 type <pointer_type 0x7f2110895348> constant 0>
[40;33m =======POP node_fun stack:key_parse_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_load_public_rsa1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
pub_5 = key_parse_public_rsa1 (commentp_3(D));
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:107:15: warning: use location
  107 |         pub = key_parse_public_rsa1(commentp);
      |               ^
this stmt is child function---key_parse_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_public_rsa1 
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :2========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (pub_5 == 0B)
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
  108 |         if (pub == NULL)
      |            ^
if (pub_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
Cond in fucntion key_load_public_rsa1 basic block 2
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 3
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b90c0
    type <pointer_type 0x7f21108a1e70
        type <array_type 0x7f21108a1dc8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c8e8 constant 328>
            unit-size <integer_cst 0x7f211088c930 constant 41>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1540>
            pointer_to_this <pointer_type 0x7f21108a1e70>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d7f080 type <array_type 0x7f21108a1dc8>
        readonly constant static "Could not load "%s" as a RSA1 public key\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_type========= [0m
[40;42m =======start_check_funciton:key_load_public_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_type’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
In function ‘delete_file’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: use location
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
this stmt is child function---key_load_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_load_public_rsa1 
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :3========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: Use after free error!: free location 
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (type_3(D) == 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:120:12: warning: use location
  120 |         if (type == KEY_RSA1) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_type========= [0m
[40;42m =======pre_check_funciton:key_load_public========= [0m
[40;42m =======start_check_funciton:key_load_public========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f2110d6cf48 type <integer_type 0x7f2110d815e8 int> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7f2110f68f40
    type <pointer_type 0x7f211089ee70
        type <record_type 0x7f211089c348 Key BLK
            size <integer_cst 0x7f2110d8a000 constant 512>
            unit-size <integer_cst 0x7f2110e41090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089c2a0 fields <field_decl 0x7f21108985f0 type> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089ee70>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7f2111614b40 key type <record_type 0x7f211089c348 Key>
        addressable static BLK ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:15:5 size <integer_cst 0x7f2110d8a000 512> unit-size <integer_cst 0x7f2110e41090 64>
        align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68fa0
    type <pointer_type 0x7f211089ee70
        type <record_type 0x7f211089c348 Key BLK
            size <integer_cst 0x7f2110d8a000 constant 512>
            unit-size <integer_cst 0x7f2110e41090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089c2a0 fields <field_decl 0x7f21108985f0 type> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089ee70>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7f2111614b40 key type <record_type 0x7f211089c348 Key>
        addressable static BLK ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:15:5 size <integer_cst 0x7f2110d8a000 512> unit-size <integer_cst 0x7f2110e41090 64>
        align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:delete_file========= [0m
[40;42m =======start_check_funciton:delete_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d74cf0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5300 filename>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f21108aa948>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
  163 |         fprintf(stderr, "Identity removed: %s (%s)\n", filename, comment);
      |         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
printf ("Bad key file %s\n", filename_16(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:17: warning: use location
  159 |                 printf("Bad key file %s\n", filename);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: use location
  157 |         public = key_load_public(filename, &comment);
      |                  ^
this stmt is child function---key_load_public-----

 ================== trace ================== 
trace fucntion name:key_load_public 
[40;44m =======trace_function_path key_load_public  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:key_load_public========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
key_try_load_public this fucntion return value is heap-object 
key_load_public this fucntion return value is heap-object key_try_load_public
[40;46m =======add node_fun stack:key_try_load_public========= [0m
[40;44m =======trace_function_path key_try_load_public  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:key_try_load_public========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;46m =======add node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;46m =======add node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;46m =======add node_fun stack:key_load_public_type========= [0m
[40;44m =======trace_function_path key_load_public_type  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:key_load_public_type========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_load_public_rsa1========= [0m
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :5========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
if (public_18 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
Cond in fucntion delete_file basic block 2
 ================== possible direct basic block ================= 
from delete_file basic block 3
 ================== possible direct basic block ================= 
from delete_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74cf0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5300 filename>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f21108aa948>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: Use after free error!: free location 
  157 |         public = key_load_public(filename, &comment);
      |                  ^
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
  163 |         fprintf(stderr, "Identity removed: %s (%s)\n", filename, comment);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: Use after free error!: free location 
  157 |         public = key_load_public(filename, &comment);
      |                  ^
# .MEM_36 = VDEF <.MEM_28>
printf ("Bad key file %s\n", filename_16(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:17: warning: use location
  159 |                 printf("Bad key file %s\n", filename);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_28 = VDEF <.MEM_27>
public_18 = key_load_public (filename_16(D), &comment);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:157:18: warning: Use after free error!: free location 
  157 |         public = key_load_public(filename, &comment);
      |                  ^
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68c40
    type <pointer_type 0x7f21108a22a0
        type <array_type 0x7f21108a21f8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c9c0 constant 136>
            unit-size <integer_cst 0x7f211088c9a8 constant 17>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a2150>
            pointer_to_this <pointer_type 0x7f21108a22a0>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f21108b3258 type <array_type 0x7f21108a21f8>
        readonly constant static "Bad key file %s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:159:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74a20
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _2 = stderr;
    version:2
    ptr-info 0x7f21108aa8b8>
# VUSE <.MEM_28>
_2 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
  163 |         fprintf(stderr, "Identity removed: %s (%s)\n", filename, comment);
      |         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_29 = VDEF <.MEM_28>
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:163:9: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74a20
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _2 = stderr;
    version:2
    ptr-info 0x7f21108aa8b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68d20
    type <pointer_type 0x7f21108a27e0
        type <array_type 0x7f21108a2738 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088ca38 constant 72>
            unit-size <integer_cst 0x7f211088ca20 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a2690>
            pointer_to_this <pointer_type 0x7f21108a27e0>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110f68d00 type <array_type 0x7f21108a2738>
        readonly constant static "filename\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:170:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74ab0
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _4 = rand ();
    version:4>
# .MEM_32 = VDEF <.MEM_31>
_4 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_5 = _4 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^
if (_5 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:11: warning: use location
  173 |         if(__RANDBOOL) {
      |           ^
if (_5 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:11: warning: use location
Cond in fucntion delete_file basic block 8
 ================== possible direct basic block ================= 
from delete_file basic block 9
 ================== possible direct basic block ================= 
from delete_file basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_4 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74ab0
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _4 = rand ();
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
_5 = _4 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
if (_5 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:11: warning: use location
  173 |         if(__RANDBOOL) {
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_32 = VDEF <.MEM_31>
_4 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:173:12: warning: use location
  173 |         if(__RANDBOOL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74b88
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _7 = stderr;
    version:7
    ptr-info 0x7f21108aa900>
# VUSE <.MEM_32>
_7 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
  174 |                 fprintf(stderr, "Identity removed: %s (%s)\n", certpath,
      |                 ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74b88
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _7 = stderr;
    version:7
    ptr-info 0x7f21108aa900>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
  174 |                 fprintf(stderr, "Identity removed: %s (%s)\n", certpath,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_34 = VDEF <.MEM_32>
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:174:17: warning: use location
  174 |                 fprintf(stderr, "Identity removed: %s (%s)\n", certpath,
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2110d74bd0
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f21108aa918>
# VUSE <.MEM_32>
_8 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
  178 |                 fprintf(stderr, "Could not remove identity: %s\n", certpath);
      |                 ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d74bd0
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f21108aa918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: use location
  169 |         free(comment); /* double-free */
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_24>
free (_9);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:181:9: warning: use location
  181 |         free(comment); /* double-free */
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
  178 |                 fprintf(stderr, "Could not remove identity: %s\n", certpath);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_30 = VDEF <.MEM_29>
free (_3);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:169:9: warning: Use after free error!: free location 
  169 |         free(comment); /* double-free */
      |         ^
# .MEM_33 = VDEF <.MEM_32>
fprintf (_8, "Could not remove identity: %s\n", "filename");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:178:17: warning: use location
  178 |                 fprintf(stderr, "Could not remove identity: %s\n", certpath);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 5
// predicted unlikely by goto predictor.
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:166:17: warning: use location
  166 |                 goto out;
      |                 ^
	relate logic:= 0
=succs:= 4
if (key_only_20(D) != 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:165:12: warning: use location
  165 |         if (key_only)
      |            ^
	relate logic:= 0
=succs:= 2
if (public_18 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:158:12: warning: use location
  158 |         if (public == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:delete_file========= [0m
[40;44m =======node_fun:key_load_public========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_load_public  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_try_load_public========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:24: warning: use location
   27 |                 while (__RANDBOOL) {
      |                        ^
	relate logic:= 0
=succs:= 2
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_try_load_public’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf318
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
[40;42m =======pre add _ fucntion:key_load_public_type========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_type  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_rsa1  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_public_rsa1  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;42m =======pre_check_funciton:key_parse_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_parse_public_rsa1========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f21108aa648 type <pointer_type 0x7f2110895348> constant 0>
[40;33m =======POP node_fun stack:key_parse_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_load_public_rsa1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
pub_5 = key_parse_public_rsa1 (commentp_3(D));
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:107:15: warning: use location
  107 |         pub = key_parse_public_rsa1(commentp);
      |               ^
this stmt is child function---key_parse_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_public_rsa1 
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :2========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (pub_5 == 0B)
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
  108 |         if (pub == NULL)
      |            ^
if (pub_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
Cond in fucntion key_load_public_rsa1 basic block 2
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 3
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b90c0
    type <pointer_type 0x7f21108a1e70
        type <array_type 0x7f21108a1dc8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c8e8 constant 328>
            unit-size <integer_cst 0x7f211088c930 constant 41>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1540>
            pointer_to_this <pointer_type 0x7f21108a1e70>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d7f080 type <array_type 0x7f21108a1dc8>
        readonly constant static "Could not load "%s" as a RSA1 public key\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_type========= [0m
[40;42m =======start_check_funciton:key_load_public_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_type’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
In function ‘key_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: use location
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
this stmt is child function---key_load_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_load_public_rsa1 
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :3========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: Use after free error!: free location 
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (type_3(D) == 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:120:12: warning: use location
  120 |         if (type == KEY_RSA1) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_type========= [0m
[40;42m =======pre_check_funciton:key_load_public========= [0m
[40;42m =======start_check_funciton:key_load_public========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f2110d6cf48 type <integer_type 0x7f2110d815e8 int> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7f2110f68f40
    type <pointer_type 0x7f211089ee70
        type <record_type 0x7f211089c348 Key BLK
            size <integer_cst 0x7f2110d8a000 constant 512>
            unit-size <integer_cst 0x7f2110e41090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089c2a0 fields <field_decl 0x7f21108985f0 type> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089ee70>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7f2111614b40 key type <record_type 0x7f211089c348 Key>
        addressable static BLK ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:15:5 size <integer_cst 0x7f2110d8a000 512> unit-size <integer_cst 0x7f2110e41090 64>
        align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:139:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f2110f68fa0
    type <pointer_type 0x7f211089ee70
        type <record_type 0x7f211089c348 Key BLK
            size <integer_cst 0x7f2110d8a000 constant 512>
            unit-size <integer_cst 0x7f2110e41090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089c2a0 fields <field_decl 0x7f21108985f0 type> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089ee70>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7f2111614b40 key type <record_type 0x7f211089c348 Key>
        addressable static BLK ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:15:5 size <integer_cst 0x7f2110d8a000 512> unit-size <integer_cst 0x7f2110e41090 64>
        align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>>
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:144:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public========= [0m
[40;44m =======node_fun:key_load_public_type========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_load_public_type  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:key_load_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_load_public_rsa1  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_public_rsa1  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
In function ‘key_load_public_type’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;42m =======pre_check_funciton:key_parse_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_parse_public_rsa1========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f21108aa648 type <pointer_type 0x7f2110895348> constant 0>
[40;33m =======POP node_fun stack:key_parse_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_load_public_rsa1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
pub_5 = key_parse_public_rsa1 (commentp_3(D));
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:107:15: warning: use location
  107 |         pub = key_parse_public_rsa1(commentp);
      |               ^
this stmt is child function---key_parse_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_public_rsa1 
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :2========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘key_load_public_rsa1’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (pub_5 == 0B)
In function ‘key_load_public_type’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
  108 |         if (pub == NULL)
      |            ^
if (pub_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
Cond in fucntion key_load_public_rsa1 basic block 2
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 3
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b90c0
    type <pointer_type 0x7f21108a1e70
        type <array_type 0x7f21108a1dc8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c8e8 constant 328>
            unit-size <integer_cst 0x7f211088c930 constant 41>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1540>
            pointer_to_this <pointer_type 0x7f21108a1e70>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d7f080 type <array_type 0x7f21108a1dc8>
        readonly constant static "Could not load "%s" as a RSA1 public key\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_type========= [0m
[40;42m =======start_check_funciton:key_load_public_type========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
bb index := 3
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: use location
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
this stmt is child function---key_load_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_load_public_rsa1 
[40;44m =======trace_function_path key_load_public_rsa1  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:key_load_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;46m =======add node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :3========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b65e8
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5680 filename>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f21108aaa08>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_11 = VDEF <.MEM_10(D)>
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:121:23: warning: Use after free error!: free location 
  121 |                 pub = key_load_public_rsa1(filename, commentp);
      |                       ^
_1 = PHI <0B(2), pub_8(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (type_3(D) == 0)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:120:12: warning: use location
  120 |         if (type == KEY_RSA1) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_type========= [0m
[40;44m =======node_fun:key_load_public_rsa1========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_load_public_rsa1  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:key_parse_public_rsa1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path key_parse_public_rsa1  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
In function ‘key_load_public_rsa1’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
In function ‘key_load_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;42m =======pre_check_funciton:key_parse_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_parse_public_rsa1========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f21108aa648 type <pointer_type 0x7f2110895348> constant 0>
[40;33m =======POP node_fun stack:key_parse_public_rsa1========= [0m
[40;42m =======pre_check_funciton:key_load_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_load_public_rsa1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pub_5 = key_parse_public_rsa1 (commentp_3(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
pub_5 = key_parse_public_rsa1 (commentp_3(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:107:15: warning: use location
  107 |         pub = key_parse_public_rsa1(commentp);
      |               ^
this stmt is child function---key_parse_public_rsa1-----

 ================== trace ================== 
trace fucntion name:key_parse_public_rsa1 
[40;44m =======trace_function_path key_parse_public_rsa1  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:key_parse_public_rsa1========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;46m =======add node_fun stack:buffer_get_string========= [0m
[40;44m =======trace_function_path buffer_get_string  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:buffer_get_string========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;46m =======add node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :2========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with commentp ========= [0m
[40;36m ======= relate stmt argument:commentp ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pub_5 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (pub_5 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
  108 |         if (pub == NULL)
      |            ^
if (pub_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:108:12: warning: use location
Cond in fucntion key_load_public_rsa1 basic block 2
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 3
 ================== possible direct basic block ================= 
from key_load_public_rsa1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b67e0
    type <pointer_type 0x7f2110895b28
        type <pointer_type 0x7f2110895a80 type <integer_type 0x7f21108959d8 char>
            public unsigned DI
            size <integer_cst 0x7f2110d6cbb8 constant 64>
            unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895b28>>
        public unsigned DI size <integer_cst 0x7f2110d6cbb8 64> unit-size <integer_cst 0x7f2110d6cbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5800 commentp>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f21108aaa50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b90c0
    type <pointer_type 0x7f21108a1e70
        type <array_type 0x7f21108a1dc8 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c8e8 constant 328>
            unit-size <integer_cst 0x7f211088c930 constant 41>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1540>
            pointer_to_this <pointer_type 0x7f21108a1e70>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d7f080 type <array_type 0x7f21108a1dc8>
        readonly constant static "Could not load "%s" as a RSA1 public key\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:109:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_load_public_rsa1========= [0m
[40;44m =======node_fun:key_parse_public_rsa1========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_parse_public_rsa1  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:buffer_get_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
In function ‘key_parse_public_rsa1’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
In function ‘key_parse_public_rsa1’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;42m =======pre_check_funciton:key_parse_public_rsa1========= [0m
[40;42m =======start_check_funciton:key_parse_public_rsa1========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f21108aa648 type <pointer_type 0x7f2110895348> constant 0>
[40;33m =======POP node_fun stack:key_parse_public_rsa1========= [0m
[40;44m =======node_fun:buffer_get_string========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path buffer_get_string  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
In function ‘buffer_get_string’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
In function ‘buffer_get_string_ret’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
In function ‘buffer_get_string’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre_check_funciton:buffer_get_string========= [0m
[40;42m =======start_check_funciton:buffer_get_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = buffer_get_string_ret (length_ptr_2(D));
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ret_4 = buffer_get_string_ret (length_ptr_2(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:20: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |                    ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with length_ptr ========= [0m
[40;36m ======= relate stmt argument:length_ptr ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_4 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (ret_4 == 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
   76 |         if ((ret = buffer_get_string_ret(length_ptr)) == NULL)
      |            ^
if (ret_4 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:76:12: warning: use location
Cond in fucntion buffer_get_string basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6b88
    type <pointer_type 0x7f2110895348
        type <integer_type 0x7f2110895f18 u_int public unsigned SI
            size <integer_cst 0x7f2110d6cdf8 constant 32>
            unit-size <integer_cst 0x7f2110d6ce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81690 precision:32 min <integer_cst 0x7f2110d6ce28 0> max <integer_cst 0x7f2110d6cde0 4294967295> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895348>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5900 length_ptr>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f21108aaac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9200
    type <pointer_type 0x7f21108a19d8
        type <array_type 0x7f21108a1930 type <integer_type 0x7f21108959d8 char>
            BLK
            size <integer_cst 0x7f211088c948 constant 280>
            unit-size <integer_cst 0x7f211088c978 constant 35>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f21108a1888>
            pointer_to_this <pointer_type 0x7f21108a19d8>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f2110d76118 type <array_type 0x7f21108a1930>
        readonly constant static "buffer_get_string: buffer error%s\012\000">
    ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 start: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3 finish: ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:77:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string========= [0m
[40;44m =======node_fun:buffer_get_string_ret========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
# .MEM_22 = VDEF <.MEM_21>
value_15 = malloc (_4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
_9 = PHI <0B(3), value_15(4), value_15(5)>
In function ‘buffer_get_string_ret’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2110d745e8
    type <pointer_type 0x7f2110895690
        type <integer_type 0x7f21108955e8 u_char public unsigned QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f2110d6ccd8 0> max <integer_cst 0x7f2110d6cc78 255> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f2110895690>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f21108be000 value>
    def_stmt value_15 = malloc (_4);
    version:15
    ptr-info 0x7f21108aab28>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
# .MEM_21 = VDEF <.MEM_20(D)>
_1 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_2 = _1 % 1024;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:28: warning: use location
   51 |         u_int len = rand() % 1024;
      |                            ^
len_13 = (u_int) _2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:15: warning: use location
   51 |         u_int len = rand() % 1024;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
bb index := 5
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = (sizetype) len_13;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
_3 = len_13 + 1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
_4 = (long unsigned int) _3;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_1 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:51:21: warning: use location
   51 |         u_int len = rand() % 1024;
      |                     ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6d38
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _1 = rand ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_25 = VDEF <.MEM_24>
*length_ptr_18(D) = len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:65:29: warning: use location
   65 |                 *length_ptr = len;
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_7 = (sizetype) len_13;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
_4 = (long unsigned int) _3;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_15 = malloc (_4);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:54:17: warning: use location
   54 |         value = xmalloc(len + 1); /* allocation site */
      |                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = value_15 + _7;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
bb index := 4
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e10
    type <integer_type 0x7f2110d817e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d81738 precision:64 min <integer_cst 0x7f2110d6ce88 0> max <integer_cst 0x7f2110d6d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2110d8d7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_9 = PHI <0B(3), value_15(4), value_15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
_8 = value_15 + _7;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:14: warning: use location
   62 |         value[len] = '\0';
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: Use after free error!: free location 
   58 |                 xfree(value);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
*_8 = 0;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:62:20: warning: use location
   62 |         value[len] = '\0';
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
# .MEM_23 = VDEF <.MEM_22>
_5 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_6 = _5 % 2;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
if (_6 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
   56 |         if (__RANDBOOL) {
      |            ^
if (_6 == 1)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:12: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = rand ();
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:56:13: warning: use location
   56 |         if (__RANDBOOL) {
      |             ^
this stmt is child function---rand-----

 ================== trace ================== 
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108b6e58
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _5 = rand ();
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (value_15);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:58:17: warning: use location
   58 |                 xfree(value);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f21108b9320
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7f2110d76150 type <integer_type 0x7f2110895bd0 char>
       
        arg:0 <string_cst 0x7f2110d7f140 type <array_type 0x7f21108a15e8>
            readonly constant static "buffer_get_string_ret: buffer_get failed\000">
        arg:1 <integer_cst 0x7f2110d6cf48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======node_fun:key_try_load_public========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path key_try_load_public  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:key_try_load_public========= [0m
[40;42m =======start_check_funciton:key_try_load_public========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>
# .MEM_20 = VDEF <.MEM_18>
_1 = strdup (filename_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
In function ‘key_try_load_public’:
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf2d0
    type <pointer_type 0x7f2110895a80
        type <integer_type 0x7f21108959d8 char public QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895a80>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
        pointer_to_this <pointer_type 0x7f2110895b28>>
   
    def_stmt _1 = strdup (filename_8(D));
    version:1
    ptr-info 0x7f21108aab58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf3f0
    type <pointer_type 0x7f2110895c78
        type <integer_type 0x7f2110895bd0 char readonly QI
            size <integer_cst 0x7f2110d6cca8 constant 8>
            unit-size <integer_cst 0x7f2110d6ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d813f0 precision:8 min <integer_cst 0x7f211088c738 -128> max <integer_cst 0x7f211088c720 127>
            pointer_to_this <pointer_type 0x7f2110895c78>>
        unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f21108a5b80 filename>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f21108aab70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
_1 = strdup (filename_8(D));
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:45: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                             ^
this stmt is child function---strdup-----

 ================== trace ================== 
*commentp_13(D) = _1;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:29:43: warning: use location
   29 |                                 *commentp = xstrdup(filename); /* allocation site */
      |                                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
f_10 = fopen (filename_8(D), "r");
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
f_10 = fopen (filename_8(D), "r");
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:25:13: warning: use location
   25 |         f = fopen(filename, "r");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:0 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:34:17: warning: use location
   34 |                 fclose(f);
      |                 ^
=======================Path Constaint===========================

=succs:= 6
if (_3 == 1)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:27:24: warning: use location
   27 |                 while (__RANDBOOL) {
      |                        ^
	relate logic:= 0
=succs:= 2
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

# .MEM_22 = VDEF <.MEM_14>
fclose (f_10);
fclose (f_10);
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:31:25: warning: use location
   31 |                         fclose(f);
      |                         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_14>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_37>
return _11;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_10>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
  110 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_7>
return pub_5;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:110:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
   94 |         return pub;
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_4>
return &key;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:94:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
   78 |         return (ret);
      |                ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_6>
return ret_4;
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:78:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_19>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_10 != 0B)
bb index := 2
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
if (f_10 != 0B)
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
   26 |         if (f != NULL) {
      |            ^
if (f_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_2/openssh_df_2.c:26:12: warning: use location
Cond in fucntion key_try_load_public basic block 2
 ================== possible direct basic block ================= 
from key_try_load_public basic block 6
 ================== possible direct basic block ================= 
from key_try_load_public basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f21108bf438
    type <pointer_type 0x7f211089e2a0
        type <record_type 0x7f211089e1f8 FILE BLK
            size <integer_cst 0x7f2110e410a8 constant 1728>
            unit-size <integer_cst 0x7f211088c8d0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f211089e150 fields <field_decl 0x7f211089f7b8 _flags> context <translation_unit_decl 0x7f2110d77168 ./benchmarks/openssh-portable/double_free_2/openssh_df_2.c>
            pointer_to_this <pointer_type 0x7f211089e2a0>>
        public unsigned DI
        size <integer_cst 0x7f2110d6cbb8 constant 64>
        unit-size <integer_cst 0x7f2110d6cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f21108a2348>>
    var <var_decl 0x7f21108be2d0 f>
    def_stmt f_10 = fopen (filename_8(D), "r");
    version:10
    ptr-info 0x7f21108aab88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f21108bf318
    type <integer_type 0x7f2110d815e8 int public SI
        size <integer_cst 0x7f2110d6cdf8 constant 32>
        unit-size <integer_cst 0x7f2110d6ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2110d815e8 precision:32 min <integer_cst 0x7f2110d6cdb0 -2147483648> max <integer_cst 0x7f2110d6cdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2110d889d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_18 = VDEF <.MEM_17>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:key_try_load_public========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = argc_5(D) == 1;
key_only_6 = (int) _1;
if (argc_5(D) == 1)
  goto <bb 3>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:
_10 = *argv_8(D);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 708669601]:
_9 = MEM[(char * *)argv_8(D) + 8B];

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _4 = PHI <_10(3), _9(4)>
_2 = time (0B);
_3 = (unsigned int) _2;
srand (_3);
delete_file (_4, key_only_6);
return 0;

=======Mapping node_fun:delete_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
comment = 0B;
public_18 = key_load_public (filename_16(D), &comment);
if (public_18 == 0B)
  goto <bb 3>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 4831840]:
printf ("Bad key file %s\n", filename_16(D));
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1068909985]:
_1 = comment;
_2 = stderr;
fprintf (_2, "Identity removed: %s (%s)\n", filename_16(D), _1);
if (key_only_20(D) != 0)
  goto <bb 5>; [51.12%]
else
  goto <bb 6>; [48.88%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 546426788]:
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 522483197]:
_3 = comment;
free (_3);
cert_23 = key_load_public ("filename", &comment);
if (cert_23 == 0B)
  goto <bb 7>; [30.95%]
else
  goto <bb 8>; [69.05%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 161708550]:
// predicted unlikely by goto predictor.
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 360774647]:
_4 = rand ();
_5 = _4 % 2;
if (_5 == 1)
  goto <bb 9>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 122663381]:
_6 = comment;
_7 = stderr;
fprintf (_7, "Identity removed: %s (%s)\n", "filename", _6);
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 238111266]:
_8 = stderr;
fprintf (_8, "Could not remove identity: %s\n", "filename");

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 1068909985]:
# ret_10 = PHI <-1(5), -1(7), 0(9), -1(10)>
out:
_9 = comment;
free (_9);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# _11 = PHI <-1(3), ret_10(11)>
comment ={v} {CLOBBER};
return _11;

=======Mapping node_fun:key_load_public=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
pub_9 = key_load_public_type (0, filename_6(D), commentp_7(D));
if (pub_9 != 0B)
  goto <bb 6>; [70.93%]
else
  goto <bb 3>; [29.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 312136752]:
_1 = key_try_load_public (&key, filename_6(D), commentp_7(D));
if (_1 == 1)
  goto <bb 6>; [35.01%]
else
  goto <bb 4>; [64.99%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 202857674]:
_2 = key_try_load_public (&key, filename_6(D), commentp_7(D));
if (_2 == 1)
  goto <bb 5>; [39.38%]
else
  goto <bb 6>; [60.62%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 79885352]:

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _3 = PHI <pub_9(2), &key(3), 0B(4), &key(5)>
return _3;

=======Mapping node_fun:key_load_public_type=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (type_3(D) == 0)
  goto <bb 3>; [38.32%]
else
  goto <bb 4>; [61.68%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 411457864]:
pub_8 = key_load_public_rsa1 (filename_5(D), commentp_6(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _1 = PHI <0B(2), pub_8(3)>
return _1;

=======Mapping node_fun:key_load_public_rsa1=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
pub_5 = key_parse_public_rsa1 (commentp_3(D));
if (pub_5 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 4>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
printf ("Could not load \"%s\" as a RSA1 public key", filename_6(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return pub_5;

=======Mapping node_fun:key_parse_public_rsa1=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (commentp_3(D) != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_1 = buffer_get_string (0B);
*commentp_3(D) = _1;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return &key;

=======Mapping node_fun:buffer_get_string=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_4 = buffer_get_string_ret (length_ptr_2(D));
if (ret_4 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("buffer_get_string: buffer error%s\n", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return ret_4;

=======Mapping node_fun:buffer_get_string_ret=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = rand ();
_2 = _1 % 1024;
len_13 = (u_int) _2;
_3 = len_13 + 1;
_4 = (long unsigned int) _3;
value_15 = malloc (_4);
_5 = rand ();
_6 = _5 % 2;
if (_6 == 1)
  goto <bb 3>; [5.07%]
else
  goto <bb 4>; [94.93%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 54438712]:
__builtin_puts (&"buffer_get_string_ret: buffer_get failed"[0]);
free (value_15);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1019303113]:
_7 = (sizetype) len_13;
_8 = value_15 + _7;
*_8 = 0;
if (length_ptr_18(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 713512182]:
*length_ptr_18(D) = len_13;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _9 = PHI <0B(3), value_15(4), value_15(5)>
return _9;

=======Mapping node_fun:key_try_load_public=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
f_10 = fopen (filename_8(D), "r");
if (f_10 != 0B)
  goto <bb 6>; [53.47%]
else
  goto <bb 8>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 201002828]:
if (commentp_13(D) != 0B)
  goto <bb 4>; [53.47%]
else
  goto <bb 5>; [46.53%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 107476212]:
_1 = strdup (filename_8(D));
*commentp_13(D) = _1;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 201002828]:
fclose (f_10);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 574129753]:
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 3>; [35.01%]
else
  goto <bb 7>; [64.99%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 373126924]:
fclose (f_10);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# _4 = PHI <0(2), 1(5), 0(7)>
return _4;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 17 [0m
[40;34m    used_stmt array stack totalsize of : 0.001528 mb[0m
[40;34m    collect time: : 0.000285 s [0m
[40;34m    algorithm time: 0.326120 s [0m
[40;34m    gimple stmt count : : 88 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -0.9%|     -0.5%|
stdarg                           |      |      |      |      |     -0.9%|     -0.5%|
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.3%|     -0.1%|
copyprop                         |      |      |      |      |     -0.3%|     -0.1%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +75.1%|    +45.8%|
into_cfglayout                   |      |      |      |      |     -1.8%|     -0.7%|
jump                             |      |      |      |      |     -2.2%|     -1.2%|
subreg1                          |      |      |      |      |     -0.4%|     -0.6%|
dfinit               ------------|      |      |      |      |          |          |
cse1                             |      |      |      |      |     -0.2%|     -0.3%|
fwprop1                          |      |      |      |      |     -1.3%|     -1.7%|
ce1                              |      |      |      |      |     -1.3%|     -1.3%|
reginfo                          |      |      |      |      |     -0.2%|     +0.2%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.7%|     +5.7%|
ce2                              |      |      |      |      |     +3.5%|     +5.4%|
outof_cfglayout                  |      |      |      |      |     +1.4%|     +0.4%|
split1                           |      |      |      |      |     +1.4%|     +0.4%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.3%|     -0.3%|
reload                           |      |      |      |      |     -8.4%|    -10.6%|
postreload                       |      |      |      |      |     -8.8%|    -11.5%|
split2                           |      |      |      |      |     +0.5%|     +0.6%|
cmpelim                          |      |      |      |      |     +0.5%|     +0.6%|
pro_and_epilogue                 |      |      |      |      |    +13.7%|    +19.9%|
dse2                             |      |      |      |      |    +12.0%|    +16.6%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                              |      |      |      |      |          |     +0.1%|
cprop_hardreg                    |      |      |      |      |     -0.3%|     -0.3%|
rtl_dce                          |      |      |      |      |     -0.3%|     -0.5%|
bbro                             |      |      |      |      |     +0.3%|     -0.0%|
split4                           |      |      |      |      |     +0.3%|     -0.0%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
