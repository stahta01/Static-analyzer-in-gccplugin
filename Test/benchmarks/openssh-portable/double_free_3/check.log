In file included from ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:9:0:
./benchmarks/openssh-portable/double_free_3/../openssh.h:675:49: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*verify_host_key)(struct sshkey *, struct ssh *);
                                                 ^~~
./benchmarks/openssh-portable/double_free_3/../openssh.h:676:58: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_public_key)(int, int, struct ssh *);
                                                          ^~~
./benchmarks/openssh-portable/double_free_3/../openssh.h:677:59: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  struct sshkey *(*load_host_private_key)(int, int, struct ssh *);
                                                           ^~~
./benchmarks/openssh-portable/double_free_3/../openssh.h:678:53: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*host_key_index)(struct sshkey *, int, struct ssh *);
                                                     ^~~
./benchmarks/openssh-portable/double_free_3/../openssh.h:681:29: warning: â€˜struct sshâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*kex[KEX_MAX])(struct ssh *);
                             ^~~
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c: In function â€˜buffer_get_string_retâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:8: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
  len = strlen(buffer);
        ^~~~~~
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:8: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:8: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c: In function â€˜process_mux_new_sessionâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
  cctx->cmd = strdup(cmd);
              ^~~~~~
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 8
succs:= 8
succs:= 5
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 15
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_26(D)>
_1 = strlen (buffer_10(D));
# .MEM_27 = VDEF <.MEM_26(D)>
_20 = __printf_chk (1, "len : %d\n", len_11);
# .MEM_28 = VDEF <.MEM_27>
_19 = __printf_chk (1, "buf : %s\n", buffer_10(D));
# .MEM_29 = VDEF <.MEM_28>
value_13 = malloc (_3);
# .MEM_32 = VDEF <.MEM_29>
_21 = __printf_chk (1, "buffer_get_string_ret: buffer_get failed\n");
# .MEM_9 = VDEF <.MEM_7(D)>
_6 = __printf_chk (1, "no argument%s\n", "");
# .MEM_37 = VDEF <.MEM_7(D)>
cctx_11 = calloc (1, 32);
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
# .MEM_53 = VDEF <.MEM_34>
_18 = __printf_chk (1, "%s: malformed message\n", &__func__);
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:buffer_get_string_ret========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f77e583d9d8
    type <pointer_type 0x7f77e5368f18
        type <integer_type 0x7f77e5368e70 u_char public unsigned string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5835d08 0> max <integer_cst 0x7f77e5835ca8 255> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368f18>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e65cabd0 value>
    def_stmt value_13 = malloc (_3);
    version 13
    ptr-info 0x7f77e5362f48>
# .MEM_29 = VDEF <.MEM_28>
value_13 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = value_13;
bb index := 6
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
bb index := 3
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_13 = malloc (_3);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d9d8
    type <pointer_type 0x7f77e5368f18
        type <integer_type 0x7f77e5368e70 u_char public unsigned string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5835d08 0> max <integer_cst 0x7f77e5835ca8 255> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368f18>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e65cabd0 value>
    def_stmt value_13 = malloc (_3);
    version 13
    ptr-info 0x7f77e5362f48>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e583d9d8
    type <pointer_type 0x7f77e5368f18
        type <integer_type 0x7f77e5368e70 u_char public unsigned string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5835d08 0> max <integer_cst 0x7f77e5835ca8 255> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368f18>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e65cabd0 value>
    def_stmt value_13 = malloc (_3);
    version 13
    ptr-info 0x7f77e5362f48>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (buffer_10(D));
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:8: warning: use location
  len = strlen(buffer);
        ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_23 = _1 & 4294967295;
lto1: warning: use location
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^
_4 = _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
len_11 = (u_int) _1;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:6: warning: use location
  len = strlen(buffer);
      ^
*length_ptr_15(D) = len_11;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:48:15: warning: use location
   *length_ptr = len;
               ^
if (len_11 > 10)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:39:5: warning: use location
  if (len > 10) {
     ^
if (len_11 > 10)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:39:5: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = len_11 + 1;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:10: warning: use location
  value = xmalloc(len + 1); /* allocation site */
          ^
_3 = (long unsigned int) _2;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:10: warning: use location
value_13 = malloc (_3);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = value_13;
bb index := 6
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
bb index := 3
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_20 = __printf_chk (1, "len : %d\n", len_11);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
_19 = __printf_chk (1, "buf : %s\n", buffer_10(D));
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_23 = _1 & 4294967295;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_23 = _1 & 4294967295;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_4 = _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_4 = _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_31 = VDEF <.MEM_30>
*length_ptr_15(D) = len_11;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:48:15: warning: use location
   *length_ptr = len;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_31 = VDEF <.MEM_30>
*length_ptr_15(D) = len_11;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:48:15: warning: use location
   *length_ptr = len;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f77e5835f90 type <integer_type 0x7f77e58495e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f77e5835f90 type <integer_type 0x7f77e58495e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f77e583d828
    type <integer_type 0x7f77e58497e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f77e5849738 precision 64 min <integer_cst 0x7f77e5835eb8 0> max <integer_cst 0x7f77e5837500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f77e58559d8>>
   
    def_stmt _3 = (long unsigned int) _2;
    version 3>
_3 = (long unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_13 = malloc (_3);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d828
    type <integer_type 0x7f77e58497e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f77e5849738 precision 64 min <integer_cst 0x7f77e5835eb8 0> max <integer_cst 0x7f77e5837500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f77e58559d8>>
   
    def_stmt _3 = (long unsigned int) _2;
    version 3>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = value_13;
bb index := 6
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
bb index := 3
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e583d828
    type <integer_type 0x7f77e58497e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f77e5849738 precision 64 min <integer_cst 0x7f77e5835eb8 0> max <integer_cst 0x7f77e5837500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f77e58559d8>>
   
    def_stmt _3 = (long unsigned int) _2;
    version 3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:buffer_get_string_ret========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path buffer_get_string_ret  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:buffer_get_string_ret========= [0m
[40;42m =======start_check_funciton:buffer_get_string_ret========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f77e583d9d8
    type <pointer_type 0x7f77e5368f18
        type <integer_type 0x7f77e5368e70 u_char public unsigned string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5835d08 0> max <integer_cst 0x7f77e5835ca8 255> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368f18>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e65cabd0 value>
    def_stmt value_13 = malloc (_3);
    version 13
    ptr-info 0x7f77e5362f48>
# .MEM_29 = VDEF <.MEM_28>
value_13 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_6 = PHI <0B(3), value_13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = value_13;
bb index := 6
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================
_17 = value_13;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
bb index := 3
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (value_13);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
value_13 = malloc (_3);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d9d8
    type <pointer_type 0x7f77e5368f18
        type <integer_type 0x7f77e5368e70 u_char public unsigned string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5835d08 0> max <integer_cst 0x7f77e5835ca8 255> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368f18>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e65cabd0 value>
    def_stmt value_13 = malloc (_3);
    version 13
    ptr-info 0x7f77e5362f48>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e583d9d8
    type <pointer_type 0x7f77e5368f18
        type <integer_type 0x7f77e5368e70 u_char public unsigned string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5835d08 0> max <integer_cst 0x7f77e5835ca8 255> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368f18>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e65cabd0 value>
    def_stmt value_13 = malloc (_3);
    version 13
    ptr-info 0x7f77e5362f48>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strlen (buffer_10(D));
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:8: warning: use location
  len = strlen(buffer);
        ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_23 = _1 & 4294967295;
lto1: warning: use location
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^
_4 = _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
len_11 = (u_int) _1;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:33:6: warning: use location
  len = strlen(buffer);
      ^
*length_ptr_15(D) = len_11;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:48:15: warning: use location
   *length_ptr = len;
               ^
if (len_11 > 10)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:39:5: warning: use location
  if (len > 10) {
     ^
if (len_11 > 10)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:39:5: warning: use location
Cond in fucntion buffer_get_string_ret basic block 2
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 3
 ================== possible direct basic block ================= 
from buffer_get_string_ret basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = len_11 + 1;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:10: warning: use location
  value = xmalloc(len + 1); /* allocation site */
          ^
_3 = (long unsigned int) _2;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:10: warning: use location
value_13 = malloc (_3);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_6 = PHI <0B(3), value_13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = value_13;
bb index := 6
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================
_17 = value_13;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
bb index := 3
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (value_13);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
_20 = __printf_chk (1, "len : %d\n", len_11);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
_19 = __printf_chk (1, "buf : %s\n", buffer_10(D));
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e583d948
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <parm_decl 0x7f77e5369100 buffer>
    def_stmt GIMPLE_NOP
    version 10
    ptr-info 0x7f77e5362f30>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_23 = _1 & 4294967295;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_23 = _1 & 4294967295;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_4 = _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_4 = _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_31 = VDEF <.MEM_30>
*length_ptr_15(D) = len_11;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:48:15: warning: use location
   *length_ptr = len;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_31 = VDEF <.MEM_30>
*length_ptr_15(D) = len_11;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:48:15: warning: use location
   *length_ptr = len;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f77e5835f90 type <integer_type 0x7f77e58495e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f77e5835f90 type <integer_type 0x7f77e58495e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f77e583d828
    type <integer_type 0x7f77e58497e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f77e5849738 precision 64 min <integer_cst 0x7f77e5835eb8 0> max <integer_cst 0x7f77e5837500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f77e58559d8>>
   
    def_stmt _3 = (long unsigned int) _2;
    version 3>
_3 = (long unsigned int) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
value_13 = malloc (_3);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:37:8: warning: use location
  value = xmalloc(len + 1); /* allocation site */
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e583d828
    type <integer_type 0x7f77e58497e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f77e5849738 precision 64 min <integer_cst 0x7f77e5835eb8 0> max <integer_cst 0x7f77e5837500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f77e58559d8>>
   
    def_stmt _3 = (long unsigned int) _2;
    version 3>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(3), value_13(6)>
bb index := 7
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================
_6 = PHI <0B(3), value_13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = value_13;
bb index := 6
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================
_17 = value_13;
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
bb index := 3
# VUSE <.MEM_25>
return _6;
In function â€˜buffer_get_string_retâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (value_13);
In function â€˜mainâ€™:
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e583d828
    type <integer_type 0x7f77e58497e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f77e5849738 precision 64 min <integer_cst 0x7f77e5835eb8 0> max <integer_cst 0x7f77e5837500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f77e58559d8>>
   
    def_stmt _3 = (long unsigned int) _2;
    version 3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_6 = PHI <0B(3), value_13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_17 = value_13;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:49:9: warning: use location
  return (value);
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
_5 = value_13 + _23;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:7: warning: use location
  value[len] = '\0';
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: Use after free error!: free location 
   xfree(value);
   ^
# .MEM_30 = VDEF <.MEM_29>
*_5 = 0;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:45:13: warning: use location
  value[len] = '\0';
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

[40;33m =======POP node_fun stack:buffer_get_string_ret========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f77e537ae58
    type <pointer_type 0x7f77e5368690
        type <record_type 0x7f77e53685e8 mux_session_confirm_ctx BLK
            size <integer_cst 0x7f77e5835f48 constant 256>
            unit size <integer_cst 0x7f77e5851048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f77e53685e8 fields <field_decl 0x7f77e53614c0 cmd> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368690> chain <type_decl 0x7f77e5361558 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e5379e10 cctx>
    def_stmt cctx_11 = calloc (1, 32);
    version 11
    ptr-info 0x7f77e5362fa8>
# .MEM_37 = VDEF <.MEM_7(D)>
cctx_11 = calloc (1, 32);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_7(D)>
cctx_11 = calloc (1, 32);
bb index := 4
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_7(D)>
cctx_11 = calloc (1, 32);
bb index := 4
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================
cctx_11 = calloc (1, 32);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:62:7: warning: use location
  cctx = xcalloc(1, sizeof(*cctx));
       ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f77e537ae58
    type <pointer_type 0x7f77e5368690
        type <record_type 0x7f77e53685e8 mux_session_confirm_ctx BLK
            size <integer_cst 0x7f77e5835f48 constant 256>
            unit size <integer_cst 0x7f77e5851048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f77e53685e8 fields <field_decl 0x7f77e53614c0 cmd> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368690> chain <type_decl 0x7f77e5361558 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e5379e10 cctx>
    def_stmt cctx_11 = calloc (1, 32);
    version 11
    ptr-info 0x7f77e5362fa8>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e537ae58
    type <pointer_type 0x7f77e5368690
        type <record_type 0x7f77e53685e8 mux_session_confirm_ctx BLK
            size <integer_cst 0x7f77e5835f48 constant 256>
            unit size <integer_cst 0x7f77e5851048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f77e53685e8 fields <field_decl 0x7f77e53614c0 cmd> context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
            pointer_to_this <pointer_type 0x7f77e5368690> chain <type_decl 0x7f77e5361558 D.4004>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f77e5379e10 cctx>
    def_stmt cctx_11 = calloc (1, 32);
    version 11
    ptr-info 0x7f77e5362fa8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f77e53822d0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _29 = strdup (cmd_15);
    version 29
    ptr-info 0x7f77e53850a8>
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location
this stmt have mutiple branch --------
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
    xfree(cmd);          /* double-free */
    ^
this stmt is child function---free-----

 ================== find ================== 
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
if (cmd_16 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
   if (cmd != NULL)
      ^
if (cmd_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
  xfree(cmd);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f77e53822d0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _29 = strdup (cmd_15);
    version 29
    ptr-info 0x7f77e53850a8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f77e53822d0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _29 = strdup (cmd_15);
    version 29
    ptr-info 0x7f77e53850a8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
             xfree(cmd);          /* double-free */
             ^
this stmt is child function---free-----

 ================== find ================== 
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e53822d0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _29 = strdup (cmd_15);
    version 29
    ptr-info 0x7f77e53850a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: Use after free error!: free location 
  xfree(cctx->cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: Use after free error!: free location 
  xfree(cctx->cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f77e5362d98 type <integer_type 0x7f77e535f0a8 size_t> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f77e537aea0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _12 = *argv_3(D);
    version 12
    ptr-info 0x7f77e5362fc0>
# VUSE <.MEM_37>
_12 = *argv_3(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
bb index := 4
# VUSE <.MEM_25>
return _6;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
bb index := 4
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================
reserved_13 = buffer_get_string_ret (_12, 0B);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:5: warning: use location
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
     ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
 <ssa_name 0x7f77e537aea0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _12 = *argv_3(D);
    version 12
    ptr-info 0x7f77e5362fc0>
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location
this stmt have mutiple branch --------
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: use location
    xfree(reserved);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
if (reserved_17 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:72:6: warning: use location
   if (reserved != NULL)
      ^
if (reserved_17 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:72:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: use location
  xfree(reserved);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e537aea0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _12 = *argv_3(D);
    version 12
    ptr-info 0x7f77e5362fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
    xfree(cmd);          /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: use location
    xfree(reserved);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: use location
  xfree(reserved);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
             xfree(cmd);          /* double-free */
             ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: use location
   xfree(cp);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
  xfree(cmd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:5: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
     ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: Use after free error!: free location 
   xfree(cp);
   ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: Use after free error!: free location 
  xfree(cctx->cmd);
  ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: Use after free error!: free location 
  xfree(cctx);
  ^
reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:5: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
     ^
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: use location
    xfree(reserved);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:5: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
     ^
if (reserved_17 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:72:6: warning: use location
   if (reserved != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
if (reserved_17 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:72:6: warning: use location
   if (reserved != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
if (reserved_17 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:72:6: warning: use location
   if (reserved != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_38 = VDEF <.MEM_37>
reserved_13 = buffer_get_string_ret (_12, 0B);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:5: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
     ^
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: use location
  xfree(reserved);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:9 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f77e537af30
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _14 = MEM[(char * *)argv_3(D) + 8B];
    version 14
    ptr-info 0x7f77e5385000>
# VUSE <.MEM_38>
_14 = MEM[(char * *)argv_3(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: use location
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
 <ssa_name 0x7f77e537af30
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _14 = MEM[(char * *)argv_3(D) + 8B];
    version 14
    ptr-info 0x7f77e5385000>
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location
this stmt have mutiple branch --------
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
    xfree(cmd);          /* double-free */
    ^
this stmt is child function---free-----

 ================== find ================== 
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
if (cmd_16 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
   if (cmd != NULL)
      ^
if (cmd_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
  xfree(cmd);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f77e537af30
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _14 = MEM[(char * *)argv_3(D) + 8B];
    version 14
    ptr-info 0x7f77e5385000>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:5 name:free [0m

 ================== find ================== 
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
[40;32m    HAS FREE STMT count:6 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);
bb index := 16
# VUSE <.MEM_54>
return 0;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f77e537af30
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _14 = MEM[(char * *)argv_3(D) + 8B];
    version 14
    ptr-info 0x7f77e5385000>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:6 
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
             xfree(cmd);          /* double-free */
             ^
this stmt is child function---free-----

 ================== find ================== 
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
[40;32m    HAS FREE STMT count:7 name:free [0m

 ================== find ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e537af30
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _14 = MEM[(char * *)argv_3(D) + 8B];
    version 14
    ptr-info 0x7f77e5385000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
    xfree(cmd);          /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: use location
    xfree(reserved);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: use location
  xfree(reserved);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
             xfree(cmd);          /* double-free */
             ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: use location
   xfree(cp);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
  xfree(cmd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: Use after free error!: free location 
  xfree(cctx);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: Use after free error!: free location 
  xfree(cctx->cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: Use after free error!: free location 
   xfree(cp);
   ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: Use after free error!: free location 
  xfree(cctx->cmd);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: Use after free error!: free location 
  xfree(cctx);
  ^
cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
    xfree(cmd);          /* double-free */
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
if (cmd_16 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
   if (cmd != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
if (cmd_16 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
   if (cmd != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
if (cmd_16 != 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:70:6: warning: use location
   if (cmd != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
  xfree(cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: Use after free error!: free location 
   xfree(cp);
   ^
# .MEM_42 = VDEF <.MEM_41>
_29 = strdup (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:14: warning: use location
  cctx->cmd = strdup(cmd);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: Use after free error!: free location 
   xfree(cp);
   ^
# .MEM_43 = VDEF <.MEM_42>
cctx_11->cmd = _29;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:93:12: warning: use location
  cctx->cmd = strdup(cmd);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: Use after free error!: free location 
   xfree(cp);
   ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: Use after free error!: free location 
  xfree(cmd);
  ^
# VUSE <.MEM_44>
_30 = cctx_11->cmd;
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: Use after free error!: free location 
             xfree(cmd);          /* double-free */
             ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: Use after free error!: free location 
   xfree(cp);
   ^
# .MEM_41 = VDEF <.MEM_35>
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:65:64: warning: Use after free error!: free location 
  if ((reserved = buffer_get_string_ret(av[i++], NULL)) == NULL ||
                                                                ^
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
             xfree(cmd);          /* double-free */
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:9 [0m

======================================================================

======================================================================
[40;31m  	possible double free :7 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f77e53821b0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _25 = *_24;
    version 25
    ptr-info 0x7f77e5385078>
# VUSE <.MEM_35>
_25 = *_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^
this stmt is child function---buffer_get_string_ret-----

 ================== trace ================== 
 <ssa_name 0x7f77e53821b0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _25 = *_24;
    version 25
    ptr-info 0x7f77e5385078>
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :0========  [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_33 = VDEF <.MEM_32>
free (value_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:41:3: warning: use location
   xfree(value);
   ^
[40;36m ======= node_fun:buffer_get_string_ret========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: use location
   xfree(cp);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (cp_26 == 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^
if (cp_26 == 0B)

 ================== find cond branch ================= 
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f77e53821b0
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
   
    def_stmt _25 = *_24;
    version 25
    ptr-info 0x7f77e5385078>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: use location
   xfree(cctx);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: use location
    xfree(cmd);          /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: use location
    xfree(reserved);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: use location
  xfree(reserved);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_47>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:84:13: warning: use location
             xfree(cmd);          /* double-free */
             ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: use location
   xfree(cp);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (cmd_15);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:94:2: warning: use location
  xfree(cmd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (_30);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:97:2: warning: use location
  xfree(cctx->cmd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_45>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:98:2: warning: use location
  xfree(cctx);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: Use after free error!: free location 
# .MEM_48 = VDEF <.MEM_47>
free (cp_26);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:88:3: warning: use location
   xfree(cp);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_35>
cp_26 = buffer_get_string_ret (_25, &len);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: Use after free error!: free location 
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^
if (cp_26 == 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_32>
free (cctx_11);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:68:3: warning: Use after free error!: free location 
   xfree(cctx);
   ^
if (cp_26 == 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (cmd_16);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:71:4: warning: Use after free error!: free location 
    xfree(cmd);          /* double-free */
    ^
if (cp_26 == 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_33>
free (reserved_17);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:73:4: warning: Use after free error!: free location 
    xfree(reserved);
    ^
if (cp_26 == 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (reserved_13);
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:77:2: warning: Use after free error!: free location 
  xfree(reserved);
  ^
if (cp_26 == 0B)
./benchmarks/openssh-portable/double_free_3/openssh_df_3.c:83:6: warning: use location
   if ((cp = buffer_get_string_ret(av[i++], &len)) == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:9 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f77e537af78
    type <pointer_type 0x7f77e535f7e0
        type <integer_type 0x7f77e535f738 char public string-flag QI
            size <integer_cst 0x7f77e5835cd8 constant 8>
            unit size <integer_cst 0x7f77e5835cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f77e58493f0 precision 8 min <integer_cst 0x7f77e5362180 -128> max <integer_cst 0x7f77e5362168 127>
            pointer_to_this <pointer_type 0x7f77e535f7e0>>
        public unsigned DI
        size <integer_cst 0x7f77e5835be8 constant 64>
        unit size <integer_cst 0x7f77e5835c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f77e5840168 ./benchmarks/openssh-portable/double_free_3/openssh_df_3.c>
        pointer_to_this <pointer_type 0x7f77e535f888>>
    var <var_decl 0x7f77e5379f30 cmd>
    def_stmt cmd_15 = buffer_get_string_ret (_14, &len);
    version 15
    ptr-info 0x7f77e5385018>
# .MEM_39 = VDEF <.MEM_38>
cmd_15 = buffer_get_string_ret (_14, &len);

 ================== trace ptable================== 
trace fucntion name:buffer_get_string_ret 
[40;44m =======trace_function_path buffer_get_string_ret  function_call count: 4 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---buffer_get_string_ret-----
this other function ------buffer_get_string_ret-----

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:buffer_get_string_ret=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = strlen (buffer_10(D));
len_11 = (u_int) _1;
_20 = __printf_chk (1, "len : %d\n", len_11);
_19 = __printf_chk (1, "buf : %s\n", buffer_10(D));
_2 = len_11 + 1;
_3 = (long unsigned int) _2;
value_13 = malloc (_3);
if (len_11 > 10)
  goto <bb 3>; [4.64%]
else
  goto <bb 4>; [95.36%]

=======is loop:0=========

 bb index 3 
<bb 3> [4.64%]:
_21 = __printf_chk (1, "buffer_get_string_ret: buffer_get failed\n");
free (value_13);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [95.36%]:
_23 = _1 & 4294967295;
_4 = _23;
_5 = value_13 + _23;
*_5 = 0;
if (length_ptr_15(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [66.75%]:
*length_ptr_15(D) = len_11;

=======is loop:0=========

 bb index 6 
<bb 6> [95.36%]:
_17 = value_13;

=======is loop:0=========

 bb index 7 
<bb 7> [100.00%]:
# _6 = PHI <0B(3), value_13(6)>
return _6;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [14.83%]:
if (argc_1(D) == 1)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.01%]:
_6 = __printf_chk (1, "no argument%s\n", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [14.82%]:
cctx_11 = calloc (1, 32);
_12 = *argv_3(D);
reserved_13 = buffer_get_string_ret (_12, 0B);
if (reserved_13 == 0B)
  goto <bb 6> (malf); [0.87%]
else
  goto <bb 5>; [99.13%]

=======is loop:0=========

 bb index 5 
<bb 5> [14.69%]:
_14 = MEM[(char * *)argv_3(D) + 8B];
cmd_15 = buffer_get_string_ret (_14, &len);
if (cmd_15 == 0B)
  goto <bb 6> (malf); [1.74%]
else
  goto <bb 11>; [98.26%]

=======is loop:0=========

 bb index 6 
# reserved_17 = PHI <reserved_13(4), reserved_13(5), 0B(13)>
# cmd_16 = PHI <0B(4), cmd_15(5), cmd_15(13)>
malf [7.32%]:
free (cctx_11);
if (cmd_16 != 0B)
  goto <bb 7>; [53.47%]
else
  goto <bb 8>; [46.53%]

=======is loop:0=========

 bb index 7 
<bb 7> [3.92%]:
free (cmd_16);

=======is loop:0=========

 bb index 8 
<bb 8> [7.32%]:
if (reserved_17 != 0B)
  goto <bb 9>; [57.44%]
else
  goto <bb 10>; [42.56%]

=======is loop:0=========

 bb index 9 
<bb 9> [4.21%]:
free (reserved_17);

=======is loop:0=========

 bb index 10 
<bb 10> [7.32%]:
_18 = __printf_chk (1, "%s: malformed message\n", &__func__);
goto <bb 17>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [14.44%]:
free (reserved_13);
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [92.50%]:
_20 = i_19;
i_21 = i_19 + 1;
_22 = (long unsigned int) i_19;
_23 = _22 * 8;
_24 = argv_3(D) + _23;
_25 = *_24;
cp_26 = buffer_get_string_ret (_25, &len);
if (cp_26 == 0B)
  goto <bb 13>; [7.50%]
else
  goto <bb 14>; [92.50%]

=======is loop:0=========

 bb index 13 
<bb 13> [6.94%]:
free (cmd_15);
goto <bb 6> (malf); [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [85.56%]:
free (cp_26);

=======is loop:1=========

 bb index 15 
<bb 15> [100.00%]:
# i_19 = PHI <2(11), i_21(14)>
_27 = (unsigned int) argc_1(D);
if (i_19 < _27)
  goto <bb 12>; [92.50%]
else
  goto <bb 16>; [7.50%]

=======is loop:0=========

 bb index 16 
<bb 16> [7.50%]:
_28 = __printf_chk (1, "%s channel request cmd \"%s\"\n", &__func__, cmd_15);
_29 = strdup (cmd_15);
cctx_11->cmd = _29;
free (cmd_15);
_30 = cctx_11->cmd;
free (_30);
free (cctx_11);

=======is loop:0=========

 bb index 17 
<bb 17> [14.82%]:
# _31 = PHI <-1(10), 0(16)>
len ={v} {CLOBBER};
_55 = _31;
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 8 [0m
[40;34m    used_stmt array stack totalsize of : 1560 [0m
[40;34m    collect time: : 0.000142 s [0m
[40;34m    algorithm time: 0.021553 s [0m
[40;34m    gimple stmt count : : 58 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
