In file included from ./benchmarks/tmux/leak_9/../tmux.h:23,
                 from ./benchmarks/tmux/leak_9/tmux_leak_9.c:12:
./benchmarks/tmux/leak_9/tmux_leak_9.c: In function ‘paste_free_top’:
./benchmarks/tmux/leak_9/../array.h:65:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:81:9: note: in expansion of macro ‘ARRAY_REMOVE’
   81 |         ARRAY_REMOVE(ps, 0);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:13:1: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
   12 | #include "../tmux.h"
  +++ |+#include <string.h>
   13 | 
In file included from ./benchmarks/tmux/leak_9/../tmux.h:23,
                 from ./benchmarks/tmux/leak_9/tmux_leak_9.c:12:
./benchmarks/tmux/leak_9/../array.h:65:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:81:9: note: in expansion of macro ‘ARRAY_REMOVE’
   81 |         ARRAY_REMOVE(ps, 0);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/leak_9/../array.h:65:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:81:9: note: in expansion of macro ‘ARRAY_REMOVE’
   81 |         ARRAY_REMOVE(ps, 0);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c: In function ‘paste_free_index’:
./benchmarks/tmux/leak_9/../array.h:65:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:99:9: note: in expansion of macro ‘ARRAY_REMOVE’
   99 |         ARRAY_REMOVE(ps, idx);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/leak_9/../array.h:65:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:99:9: note: in expansion of macro ‘ARRAY_REMOVE’
   99 |         ARRAY_REMOVE(ps, idx);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c: In function ‘paste_add’:
./benchmarks/tmux/leak_9/../array.h:57:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
   57 |                 memmove((a)->list + (i) + 1, (a)->list + (i),           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:126:9: note: in expansion of macro ‘ARRAY_INSERT’
  126 |         ARRAY_INSERT(ps, 0, pb);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/leak_9/../array.h:57:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
   57 |                 memmove((a)->list + (i) + 1, (a)->list + (i),           \
      |                 ^~~~~~~
./benchmarks/tmux/leak_9/tmux_leak_9.c:126:9: note: in expansion of macro ‘ARRAY_INSERT’
  126 |         ARRAY_INSERT(ps, 0, pb);
      |         ^~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 30%)
 phase parsing                      :   0.05 ( 62%)   0.02 (100%)   0.08 ( 73%)  2111k ( 49%)
 phase opt and generate             :   0.03 ( 38%)   0.00 (  0%)   0.03 ( 27%)   931k ( 21%)
 callgraph ipa passes               :   0.03 ( 38%)   0.00 (  0%)   0.03 ( 27%)   405k (  9%)
 ipa function summary               :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)    31k (  1%)
 ipa lto gimple out                 :   0.01 ( 12%)   0.00 (  0%)   0.00 (  0%)  3112  (  0%)
 ipa lto decl out                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)   264  (  0%)
 ipa free lang data                 :   0.01 ( 12%)   0.00 (  0%)   0.00 (  0%)    18k (  0%)
 preprocessing                      :   0.01 ( 12%)   0.01 ( 50%)   0.06 ( 55%)   940k ( 22%)
 lexical analysis                   :   0.01 ( 13%)   0.00 (  0%)   0.01 (  9%)     0  (  0%)
 parser (global)                    :   0.02 ( 25%)   0.00 (  0%)   0.01 (  9%)   628k ( 14%)
 parser function body               :   0.01 ( 13%)   0.01 ( 50%)   0.00 (  0%)   290k (  7%)
 tree modref                        :   0.01 ( 13%)   0.00 (  0%)   0.00 (  0%)  7872  (  0%)
 branch prediction                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)    20k (  0%)
 TOTAL                              :   0.08          0.02          0.11         4351k
./benchmarks/tmux/leak_9/tmux_leak_9.c: In function ‘main’:
./benchmarks/tmux/leak_9/tmux_leak_9.c:222:21: warning: dereference of possibly-NULL ‘args_32’ [CWE-690] [-Wanalyzer-possible-null-dereference]
  222 |                 args->argv[i] = argv[i];
      |                     ^
  ‘main’: events 1-4
    |
    |  220 |         struct args *args = calloc(argc, sizeof *args);
    |      |                             ^
    |      |                             |
    |      |                             (1) this call could return NULL
    |  221 |         for(int i = 0; i < argc; i++)
    |      |                          ~   
    |      |                          |
    |      |                          (2) following ‘true’ branch (when ‘i_22 < argc_29(D)’)...
    |  222 |                 args->argv[i] = argv[i];
    |      |                     ~               ~
    |      |                     |               |
    |      |                     |               (3) ...to here
    |      |                     (4) ‘args_32’ could be NULL: unchecked value from (1)
    |
./benchmarks/tmux/leak_9/tmux_leak_9.c: In function ‘cmd_load_buffer_callback’:
./benchmarks/tmux/leak_9/tmux_leak_9.c:174:17: warning: double-‘free’ of ‘data_16(D)’ [CWE-415] [-Wanalyzer-double-free]
  174 |                 free(data);
      |                 ^
  ‘main’: events 1-6
    |
    |  212 | int main (int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  221 |         for(int i = 0; i < argc; i++)
    |      |                          ~
    |      |                          |
    |      |                          (2) following ‘false’ branch (when ‘i_22 >= argc_29(D)’)...
    |......
    |  224 |         global_buffers.list = malloc(sizeof(struct paste_buffer));
    |      |                               ~
    |      |                               |
    |      |                               (3) ...to here
    |  225 |         while(getchar())
    |      |               ~
    |      |               |
    |      |               (4) following ‘true’ branch...
    |  226 |                 cmd_load_buffer_callback(&c, closed, data);
    |      |                 ~
    |      |                 |
    |      |                 (5) ...to here
    |      |                 (6) calling ‘cmd_load_buffer_callback’ from ‘main’
    |
    +--> ‘cmd_load_buffer_callback’: events 7-12
           |
           |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
           |      | ^
           |      | |
           |      | (7) entry to ‘cmd_load_buffer_callback’
           |......
           |  165 |         if (!closed)
           |      |            ~
           |      |            |
           |      |            (8) following ‘false’ branch (when ‘closed_17(D) != 0’)...
           |  166 |                 return;
           |  167 |         c->stdin_callback = NULL;
           |      |                           ~
           |      |                           |
           |      |                           (9) ...to here
           |......
           |  170 |         if (c->flags & CLIENT_DEAD)
           |      |            ~
           |      |            |
           |      |            (10) following ‘false’ branch...
           |......
           |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
           |      |            ~
           |      |            |
           |      |            (11) ...to here
           |  174 |                 free(data);
           |      |                 ~
           |      |                 |
           |      |                 (12) first ‘free’ here
           |
    <------+
    |
  ‘main’: events 13-16
    |
    |  225 |         while(getchar())
    |      |               ~  
    |      |               |
    |      |               (14) following ‘true’ branch...
    |  226 |                 cmd_load_buffer_callback(&c, closed, data);
    |      |                 ^
    |      |                 |
    |      |                 (13) returning to ‘main’ from ‘cmd_load_buffer_callback’
    |      |                 (15) ...to here
    |      |                 (16) passing freed pointer ‘data_51(D)’ in call to ‘cmd_load_buffer_callback’ from ‘main’
    |
    +--> ‘cmd_load_buffer_callback’: events 17-22
           |
           |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
           |      | ^
           |      | |
           |      | (17) entry to ‘cmd_load_buffer_callback’
           |......
           |  165 |         if (!closed)
           |      |            ~
           |      |            |
           |      |            (18) following ‘false’ branch (when ‘closed_17(D) != 0’)...
           |  166 |                 return;
           |  167 |         c->stdin_callback = NULL;
           |      |                           ~
           |      |                           |
           |      |                           (19) ...to here
           |......
           |  170 |         if (c->flags & CLIENT_DEAD)
           |      |            ~
           |      |            |
           |      |            (20) following ‘false’ branch...
           |......
           |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
           |      |            ~
           |      |            |
           |      |            (21) ...to here
           |  174 |                 free(data);
           |      |                 ~
           |      |                 |
           |      |                 (22) second ‘free’ here; first ‘free’ was at (12)
           |
./benchmarks/tmux/leak_9/tmux_leak_9.c:179:13: warning: use after ‘free’ of ‘data_16(D)’ [CWE-416] [-Wanalyzer-use-after-free]
  179 |         if (*buffer == -1)
      |             ^
  ‘main’: events 1-6
    |
    |  212 | int main (int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  221 |         for(int i = 0; i < argc; i++)
    |      |                          ~
    |      |                          |
    |      |                          (2) following ‘false’ branch (when ‘i_22 >= argc_29(D)’)...
    |......
    |  224 |         global_buffers.list = malloc(sizeof(struct paste_buffer));
    |      |                               ~
    |      |                               |
    |      |                               (3) ...to here
    |  225 |         while(getchar())
    |      |               ~
    |      |               |
    |      |               (4) following ‘true’ branch...
    |  226 |                 cmd_load_buffer_callback(&c, closed, data);
    |      |                 ~
    |      |                 |
    |      |                 (5) ...to here
    |      |                 (6) calling ‘cmd_load_buffer_callback’ from ‘main’
    |
    +--> ‘cmd_load_buffer_callback’: events 7-14
           |
           |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
           |      | ^
           |      | |
           |      | (7) entry to ‘cmd_load_buffer_callback’
           |......
           |  165 |         if (!closed)
           |      |            ~
           |      |            |
           |      |            (8) following ‘false’ branch (when ‘closed_17(D) != 0’)...
           |  166 |                 return;
           |  167 |         c->stdin_callback = NULL;
           |      |                           ~
           |      |                           |
           |      |                           (9) ...to here
           |......
           |  170 |         if (c->flags & CLIENT_DEAD)
           |      |            ~
           |      |            |
           |      |            (10) following ‘false’ branch...
           |......
           |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
           |      |            ~
           |      |            |
           |      |            (11) ...to here
           |......
           |  179 |         if (*buffer == -1)
           |      |            ~
           |      |            |
           |      |            (12) following ‘false’ branch...
           |  180 |                 paste_add(&global_buffers, pdata, psize, limit);
           |  181 |         else if (paste_replace(&global_buffers, *buffer, pdata, psize) != 0) {
           |      |                  ~                              ~
           |      |                  |                              |
           |      |                  |                              (13) ...to here
           |      |                  (14) calling ‘paste_replace’ from ‘cmd_load_buffer_callback’
           |
           +--> ‘paste_replace’: events 15-18
                  |
                  |  138 | paste_replace(struct paste_stack *ps, u_int idx, char *data, size_t size)
                  |      | ^
                  |      | |
                  |      | (15) entry to ‘paste_replace’
                  |......
                  |  142 |         if (size == 0)
                  |      |            ~
                  |      |            |
                  |      |            (16) following ‘false’ branch (when ‘size_9(D) != 0’)...
                  |......
                  |  145 |         if (idx >= ARRAY_LENGTH(ps))
                  |      |            ~       ~
                  |      |            |       |
                  |      |            |       (17) ...to here
                  |      |            (18) following ‘true’ branch...
                  |
                ‘paste_replace’: event 19
                  |
                  |lto1:
                  | (19): ...to here
                  |
           <------+
           |
         ‘cmd_load_buffer_callback’: events 20-23
           |
           |  181 |         else if (paste_replace(&global_buffers, *buffer, pdata, psize) != 0) {
           |      |                 ~^
           |      |                 ||
           |      |                 |(20) returning to ‘cmd_load_buffer_callback’ from ‘paste_replace’
           |      |                 (21) following ‘true’ branch...
           |  182 |                 printf("no buffer %d\n", *buffer);
           |      |                 ~ 
           |      |                 |
           |      |                 (22) ...to here
           |......
           |  186 |         free(data);
           |      |         ~         
           |      |         |
           |      |         (23) freed here
           |
    <------+
    |
  ‘main’: events 24-27
    |
    |  225 |         while(getchar())
    |      |               ~  
    |      |               |
    |      |               (25) following ‘true’ branch...
    |  226 |                 cmd_load_buffer_callback(&c, closed, data);
    |      |                 ^
    |      |                 |
    |      |                 (24) returning to ‘main’ from ‘cmd_load_buffer_callback’
    |      |                 (26) ...to here
    |      |                 (27) calling ‘cmd_load_buffer_callback’ from ‘main’
    |
    +--> ‘cmd_load_buffer_callback’: events 28-35
           |
           |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
           |      | ^
           |      | |
           |      | (28) entry to ‘cmd_load_buffer_callback’
           |......
           |  165 |         if (!closed)
           |      |            ~
           |      |            |
           |      |            (29) following ‘false’ branch (when ‘closed_17(D) != 0’)...
           |  166 |                 return;
           |  167 |         c->stdin_callback = NULL;
           |      |                           ~
           |      |                           |
           |      |                           (30) ...to here
           |......
           |  170 |         if (c->flags & CLIENT_DEAD)
           |      |            ~
           |      |            |
           |      |            (31) following ‘false’ branch...
           |......
           |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
           |      |            ~
           |      |            |
           |      |            (32) ...to here
           |      |            (33) following ‘false’ branch...
           |......
           |  177 |         pdata[psize] = '\0';
           |      |              ~
           |      |              |
           |      |              (34) ...to here
           |  178 | 
           |  179 |         if (*buffer == -1)
           |      |             ~
           |      |             |
           |      |             (35) use after ‘free’ of ‘data_16(D)’; freed at (23)
           |
./benchmarks/tmux/leak_9/tmux_leak_9.c:189:9: warning: leak of ‘pdata_24’ [CWE-401] [-Wanalyzer-malloc-leak]
  189 |         printf("cmdq_continue");
      |         ^
  ‘main’: events 1-6
    |
    |  212 | int main (int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  221 |         for(int i = 0; i < argc; i++)
    |      |                          ~
    |      |                          |
    |      |                          (2) following ‘false’ branch (when ‘i_22 >= argc_29(D)’)...
    |......
    |  224 |         global_buffers.list = malloc(sizeof(struct paste_buffer));
    |      |                               ~
    |      |                               |
    |      |                               (3) ...to here
    |  225 |         while(getchar())
    |      |               ~
    |      |               |
    |      |               (4) following ‘true’ branch...
    |  226 |                 cmd_load_buffer_callback(&c, closed, data);
    |      |                 ~
    |      |                 |
    |      |                 (5) ...to here
    |      |                 (6) calling ‘cmd_load_buffer_callback’ from ‘main’
    |
    +--> ‘cmd_load_buffer_callback’: events 7-20
           |
           |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
           |      | ^
           |      | |
           |      | (7) entry to ‘cmd_load_buffer_callback’
           |......
           |  165 |         if (!closed)
           |      |            ~
           |      |            |
           |      |            (8) following ‘false’ branch (when ‘closed_17(D) != 0’)...
           |  166 |                 return;
           |  167 |         c->stdin_callback = NULL;
           |      |                           ~
           |      |                           |
           |      |                           (9) ...to here
           |......
           |  170 |         if (c->flags & CLIENT_DEAD)
           |      |            ~
           |      |            |
           |      |            (10) following ‘false’ branch...
           |......
           |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
           |      |            ~           ~           ~
           |      |            |           |           |
           |      |            |           |           (13) ...to here
           |      |            |           |           (14) allocated here
           |      |            |           (15) assuming ‘pdata_24’ is non-NULL
           |      |            |           (16) following ‘false’ branch (when ‘pdata_24’ is non-NULL)...
           |      |            (11) ...to here
           |      |            (12) following ‘false’ branch (when ‘psize_22(D) != 0’)...
           |......
           |  177 |         pdata[psize] = '\0';
           |      |              ~
           |      |              |
           |      |              (17) ...to here
           |  178 | 
           |  179 |         if (*buffer == -1)
           |      |            ~
           |      |            |
           |      |            (18) following ‘false’ branch...
           |  180 |                 paste_add(&global_buffers, pdata, psize, limit);
           |  181 |         else if (paste_replace(&global_buffers, *buffer, pdata, psize) != 0) {
           |      |                  ~                              ~
           |      |                  |                              |
           |      |                  |                              (19) ...to here
           |      |                  (20) calling ‘paste_replace’ from ‘cmd_load_buffer_callback’
           |
           +--> ‘paste_replace’: events 21-24
                  |
                  |  138 | paste_replace(struct paste_stack *ps, u_int idx, char *data, size_t size)
                  |      | ^
                  |      | |
                  |      | (21) entry to ‘paste_replace’
                  |......
                  |  142 |         if (size == 0)
                  |      |            ~
                  |      |            |
                  |      |            (22) following ‘false’ branch (when ‘size_9(D) != 0’)...
                  |......
                  |  145 |         if (idx >= ARRAY_LENGTH(ps))
                  |      |            ~       ~
                  |      |            |       |
                  |      |            |       (23) ...to here
                  |      |            (24) following ‘true’ branch...
                  |
                ‘paste_replace’: event 25
                  |
                  |lto1:
                  | (25): ...to here
                  |
           <------+
           |
         ‘cmd_load_buffer_callback’: events 26-29
           |
           |  181 |         else if (paste_replace(&global_buffers, *buffer, pdata, psize) != 0) {
           |      |                 ~^
           |      |                 ||
           |      |                 |(26) returning to ‘cmd_load_buffer_callback’ from ‘paste_replace’
           |      |                 (27) following ‘true’ branch...
           |  182 |                 printf("no buffer %d\n", *buffer);
           |      |                 ~ 
           |      |                 |
           |      |                 (28) ...to here
           |......
           |  189 |         printf("cmdq_continue");
           |      |         ~         
           |      |         |
           |      |         (29) ‘pdata_24’ leaks here; was allocated at (14)
           |
./benchmarks/tmux/leak_9/tmux_leak_9.c: In function ‘paste_add’:
./benchmarks/tmux/leak_9/tmux_leak_9.c:120:17: warning: double-‘free’ of ‘pb_67->data’ [CWE-415] [-Wanalyzer-double-free]
  120 |                 free(pb->data);
      |                 ^
  ‘cmd_load_buffer_callback’: events 1-10
    |
    |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
    |      | ^
    |      | |
    |      | (1) entry to ‘cmd_load_buffer_callback’
    |......
    |  165 |         if (!closed)
    |      |            ~
    |      |            |
    |      |            (2) following ‘false’ branch (when ‘closed_17(D) != 0’)...
    |  166 |                 return;
    |  167 |         c->stdin_callback = NULL;
    |      |                           ~
    |      |                           |
    |      |                           (3) ...to here
    |......
    |  170 |         if (c->flags & CLIENT_DEAD)
    |      |            ~
    |      |            |
    |      |            (4) following ‘false’ branch...
    |......
    |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
    |      |            ~
    |      |            |
    |      |            (5) ...to here
    |      |            (6) following ‘false’ branch...
    |......
    |  177 |         pdata[psize] = '\0';
    |      |              ~
    |      |              |
    |      |              (7) ...to here
    |  178 | 
    |  179 |         if (*buffer == -1)
    |      |            ~
    |      |            |
    |      |            (8) following ‘true’ branch...
    |  180 |                 paste_add(&global_buffers, pdata, psize, limit);
    |      |                 ~
    |      |                 |
    |      |                 (9) ...to here
    |      |                 (10) calling ‘paste_add’ from ‘cmd_load_buffer_callback’
    |
    +--> ‘paste_add’: events 11-12
           |
           |  111 | paste_add(struct paste_stack *ps, char *data, size_t size, u_int limit)
           |      | ^
           |      | |
           |      | (11) entry to ‘paste_add’
           |......
           |  115 |         if (size == 0)
           |      |            ~
           |      |            |
           |      |            (12) following ‘false’ branch (when ‘size_45(D) != 0’)...
           |
         ‘paste_add’: event 13
           |
           |lto1:
           | (13): ...to here
           |
         ‘paste_add’: events 14-25
           |
           |  118 |         while (ARRAY_LENGTH(ps) >= limit) {
           |      |                                 ^
           |      |                                 |
           |      |                                 (14) following ‘true’ branch...
           |      |                                 (16) following ‘true’ branch...
           |      |                                 (18) following ‘true’ branch...
           |      |                                 (23) following ‘true’ branch...
           |  119 |                 pb = ARRAY_LAST(ps);
           |      |                      ~           
           |      |                      |
           |      |                      (15) ...to here
           |      |                      (17) ...to here
           |      |                      (19) ...to here
           |      |                      (24) ...to here
           |  120 |                 free(pb->data);
           |      |                 ~                
           |      |                 |
           |      |                 (20) first ‘free’ here
           |      |                 (25) second ‘free’ here; first ‘free’ was at (20)
           |  121 |                 free(pb);
           |  122 |                 ARRAY_TRUNC(ps, 1);
           |      |                 ~                
           |      |                 |
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |
./benchmarks/tmux/leak_9/tmux_leak_9.c:120:24: warning: use after ‘free’ of ‘pb_67’ [CWE-416] [-Wanalyzer-use-after-free]
  120 |                 free(pb->data);
      |                        ^
  ‘cmd_load_buffer_callback’: events 1-10
    |
    |  158 | cmd_load_buffer_callback(struct client *c, int closed, void *data)
    |      | ^
    |      | |
    |      | (1) entry to ‘cmd_load_buffer_callback’
    |......
    |  165 |         if (!closed)
    |      |            ~
    |      |            |
    |      |            (2) following ‘false’ branch (when ‘closed_17(D) != 0’)...
    |  166 |                 return;
    |  167 |         c->stdin_callback = NULL;
    |      |                           ~
    |      |                           |
    |      |                           (3) ...to here
    |......
    |  170 |         if (c->flags & CLIENT_DEAD)
    |      |            ~
    |      |            |
    |      |            (4) following ‘false’ branch...
    |......
    |  173 |         if (psize == 0 || (pdata = malloc(psize + 1)) == NULL) {        /* allocation site */
    |      |            ~
    |      |            |
    |      |            (5) ...to here
    |      |            (6) following ‘false’ branch...
    |......
    |  177 |         pdata[psize] = '\0';
    |      |              ~
    |      |              |
    |      |              (7) ...to here
    |  178 | 
    |  179 |         if (*buffer == -1)
    |      |            ~
    |      |            |
    |      |            (8) following ‘true’ branch...
    |  180 |                 paste_add(&global_buffers, pdata, psize, limit);
    |      |                 ~
    |      |                 |
    |      |                 (9) ...to here
    |      |                 (10) calling ‘paste_add’ from ‘cmd_load_buffer_callback’
    |
    +--> ‘paste_add’: events 11-12
           |
           |  111 | paste_add(struct paste_stack *ps, char *data, size_t size, u_int limit)
           |      | ^
           |      | |
           |      | (11) entry to ‘paste_add’
           |......
           |  115 |         if (size == 0)
           |      |            ~
           |      |            |
           |      |            (12) following ‘false’ branch (when ‘size_45(D) != 0’)...
           |
         ‘paste_add’: event 13
           |
           |lto1:
           | (13): ...to here
           |
         ‘paste_add’: events 14-25
           |
           |  118 |         while (ARRAY_LENGTH(ps) >= limit) {
           |      |                                 ^
           |      |                                 |
           |      |                                 (14) following ‘true’ branch...
           |      |                                 (16) following ‘true’ branch...
           |      |                                 (18) following ‘true’ branch...
           |      |                                 (23) following ‘true’ branch...
           |  119 |                 pb = ARRAY_LAST(ps);
           |      |                      ~           
           |      |                      |
           |      |                      (15) ...to here
           |      |                      (17) ...to here
           |      |                      (19) ...to here
           |      |                      (24) ...to here
           |  120 |                 free(pb->data);
           |      |                        ~         
           |      |                        |
           |      |                        (25) use after ‘free’ of ‘pb_67’; freed at (20)
           |  121 |                 free(pb);
           |      |                 ~                
           |      |                 |
           |      |                 (20) freed here
           |  122 |                 ARRAY_TRUNC(ps, 1);
           |      |                 ~                
           |      |                 |
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |
./benchmarks/tmux/leak_9/tmux_leak_9.c:128:18: warning: dereference of possibly-NULL ‘pb_50’ [CWE-690] [-Wanalyzer-possible-null-dereference]
  128 |         pb->data = data;
      |                  ^
  ‘paste_add’: event 1
    |
    |  115 |         if (size == 0)
    |      |            ^
    |      |            |
    |      |            (1) following ‘false’ branch (when ‘size_45(D) != 0’)...
    |
  ‘paste_add’: event 2
    |
    |lto1:
    | (2): ...to here
    |
  ‘paste_add’: events 3-6
    |
    |  125 |         pb = xmalloc(sizeof *pb);
    |      |              ^
    |      |              |
    |      |              (3) this call could return NULL
    |  126 |         ARRAY_INSERT(ps, 0, pb);
    |      |         ~     
    |      |         |
    |      |         (4) following ‘false’ branch...
    |      |         (5) ...to here
    |  127 | 
    |  128 |         pb->data = data;
    |      |                  ~
    |      |                  |
    |      |                  (6) ‘pb_50’ could be NULL: unchecked value from (3)
    |

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 78%)
 phase opt and generate             :   0.33 (100%)   0.01 (100%)   0.34 (100%)   478k ( 17%)
 ipa lto gimple in                  :   0.00 (  0%)   0.01 (100%)   0.01 (  3%)   361k ( 13%)
 analyzer                           :   0.03 (  9%)   0.00 (  0%)   0.03 (  9%)     0  (  0%)
 analyzer: processing worklist      :   0.23 ( 70%)   0.00 (  0%)   0.23 ( 68%)  3776  (  0%)
 analyzer: emitting diagnostics     :   0.04 ( 12%)   0.00 (  0%)   0.04 ( 12%)   504  (  0%)
 analyzer: shortest paths           :   0.03 (  9%)   0.00 (  0%)   0.03 (  9%)     0  (  0%)
 TOTAL                              :   0.33          0.01          0.34         2765k

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)  2157k ( 65%)
 phase opt and generate             :   0.04 (100%)   0.00 (  0%)   0.04 ( 80%)  1078k ( 32%)
 dump files                         :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 callgraph functions expansion      :   0.04 (100%)   0.00 (  0%)   0.04 ( 80%)   866k ( 26%)
 df scan insns                      :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)   576  (  0%)
 tree conservative DCE              :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)   344  (  0%)
 CSE                                :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)  1632  (  0%)
 loop analysis                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 shorten branches                   :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 final                              :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)    37k (  1%)
 initialize rtl                     :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    12k (  0%)
 TOTAL                              :   0.04          0.00          0.05         3342k
