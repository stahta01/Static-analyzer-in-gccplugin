./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘session_find’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:96:34: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   96 |                 if (s != NULL && strcmp(s->name, name) == 0)
      |                                  ^~~~~~
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:12:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   11 | #include "../array.h"
  +++ |+#include <string.h>
   12 | 
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘window_destroy’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:193:13: warning: implicit declaration of function ‘window_index’ [-Wimplicit-function-declaration]
  193 |         if (window_index(w, &i) != 0)
      |             ^~~~~~~~~~~~
In file included from ./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:9:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘session_create’:
./benchmarks/tmux/use_after_free_6/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:418:19: note: in expansion of macro ‘xstrdup’
  418 |         s->name = xstrdup(name);
      |                   ^~~~~~~
./benchmarks/tmux/use_after_free_6/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:418:19: note: in expansion of macro ‘xstrdup’
  418 |         s->name = xstrdup(name);
      |                   ^~~~~~~
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘main’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:505:24: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  505 |                 name = strdup(argv[1]);
      |                        ^~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 30%)
 phase parsing                      :   0.05 ( 71%)   0.01 ( 33%)   0.07 ( 64%)  1923k ( 45%)
 phase opt and generate             :   0.02 ( 29%)   0.02 ( 67%)   0.04 ( 36%)  1068k ( 25%)
 dump files                         :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)     0  (  0%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)   168  (  0%)
 callgraph ipa passes               :   0.01 ( 14%)   0.02 ( 67%)   0.04 ( 36%)   542k ( 13%)
 lto stream compression             :   0.01 ( 14%)   0.00 (  0%)   0.01 (  9%)     0  (  0%)
 ipa modref                         :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)    11k (  0%)
 preprocessing                      :   0.01 ( 14%)   0.00 (  0%)   0.03 ( 27%)   772k ( 18%)
 lexical analysis                   :   0.01 ( 14%)   0.00 (  0%)   0.03 ( 27%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)   706k ( 16%)
 parser function body               :   0.03 ( 43%)   0.00 (  0%)   0.01 (  9%)   393k (  9%)
 inline parameters                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  9%)    62k (  1%)
 tree CFG cleanup                   :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)  3544  (  0%)
 tree modref                        :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)    10k (  0%)
 TOTAL                              :   0.07          0.03          0.11         4300k
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘session_create’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:398:23: warning: dereference of possibly-NULL ‘s_52’ [CWE-690] [-Wanalyzer-possible-null-dereference]
  398 |         s->references = 0;
      |                       ^
  ‘main’: events 1-2
    |
    |  489 | int main(int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ~
    |      |               |
    |      |               (2) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 3-5
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (3) entry to ‘session_create’
           |......
           |  397 |         s = xmalloc(sizeof *s);
           |      |             ~
           |      |             |
           |      |             (4) this call could return NULL
           |  398 |         s->references = 0;
           |      |                       ~
           |      |                       |
           |      |                       (5) ‘s_52’ could be NULL: unchecked value from (4)
           |
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:421:20: warning: leak of ‘<unknown>’ [CWE-401] [-Wanalyzer-malloc-leak]
  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
      |                    ^
  ‘main’: events 1-2
    |
    |  489 | int main(int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ~
    |      |               |
    |      |               (2) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 3-12
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (3) entry to ‘session_create’
           |......
           |  408 |         for (i = 0; i < ARRAY_LENGTH(&sessions); i++) {
           |      |                       ~
           |      |                       |
           |      |                       (4) following ‘false’ branch...
           |......
           |  414 |         if (i == ARRAY_LENGTH(&sessions))
           |      |            ~     ~
           |      |            |     |
           |      |            |     (5) ...to here
           |      |            (6) following ‘true’ branch...
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ~
           |      |                 |
           |      |                 (7) ...to here
           |      |                 (8) following ‘false’ branch...
           |      |                 (9) ...to here
           |      |                 (10) following ‘true’ branch...
           |      |                 (11) ...to here
           |      |                 (12) calling ‘xrealloc’ from ‘session_create’
           |
           +--> ‘xrealloc’: events 13-19
                  |
                  |   73 | xrealloc(void *oldptr, size_t nmemb, size_t size)
                  |      | ^
                  |      | |
                  |      | (13) entry to ‘xrealloc’
                  |......
                  |   78 |         if (newsize == 0)
                  |      |            ~
                  |      |            |
                  |      |            (14) following ‘false’ branch (when ‘newsize_4 != 0’)...
                  |   79 |                 fatalx("zero size%s", "");
                  |   80 |         if (SIZE_MAX / nmemb < size)
                  |      |            ~         ~
                  |      |            |         |
                  |      |            |         (15) ...to here
                  |      |            (16) following ‘false’ branch...
                  |   81 |                 fatalx("nmemb * size > SIZE_MAX%s", "");
                  |   82 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
                  |      |            ~          ~
                  |      |            |          |
                  |      |            |          (17) ...to here
                  |      |            (18) following ‘false’ branch (when ‘newptr_8’ is non-NULL)...
                  |......
                  |   85 |         return (newptr);
                  |      |                ~
                  |      |                |
                  |      |                (19) ...to here
                  |
           <------+
           |
         ‘session_create’: events 20-27
           |
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ^
           |      |                 |
           |      |                 (20) returning to ‘session_create’ from ‘xrealloc’
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |  416 |         if(name == NULL)
           |      |           ~      
           |      |           |
           |      |           (23) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (24) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~     
           |      |            |
           |      |            (25) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (26) ...to here
           |      |                     (27) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 28-31
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (28) entry to ‘session_new’
                  |......
                  |  368 |         if (w == NULL) {
                  |      |            ~
                  |      |            |
                  |      |            (29) following ‘false’ branch (when ‘w_8’ is non-NULL)...
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ~
                  |      |                 |
                  |      |                 (30) ...to here
                  |      |                 (31) calling ‘session_attach’ from ‘session_new’
                  |
                  +--> ‘session_attach’: events 32-33
                         |
                         |  348 | session_attach(struct session *s, struct window *w, int idx, char **cause)
                         |      | ^
                         |      | |
                         |      | (32) entry to ‘session_attach’
                         |......
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |                   ~
                         |      |                   |
                         |      |                   (33) calling ‘winlink_add’ from ‘session_attach’
                         |
                         +--> ‘winlink_add’: events 34-37
                                |
                                |  168 | winlink_add(struct winlinks *wwl, struct window *w, int idx)
                                |      | ^
                                |      | |
                                |      | (34) entry to ‘winlink_add’
                                |......
                                |  172 |         if (idx < 0) {
                                |      |            ~
                                |      |            |
                                |      |            (35) following ‘false’ branch (when ‘idx_9(D) >= 0’)...
                                |......
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                    ~
                                |      |                    |
                                |      |                    (36) ...to here
                                |      |                    (37) calling ‘winlink_find_by_index’ from ‘winlink_add’
                                |
                                +--> ‘winlink_find_by_index’: events 38-40
                                       |
                                       |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                                       |      | ^
                                       |      | |
                                       |      | (38) entry to ‘winlink_find_by_index’
                                       |......
                                       |  130 |         if (idx < 0)
                                       |      |            ~
                                       |      |            |
                                       |      |            (39) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                                       |......
                                       |  133 |         wl.idx = idx;
                                       |      |                ~
                                       |      |                |
                                       |      |                (40) ...to here
                                       |
                                <------+
                                |
                              ‘winlink_add’: events 41-44
                                |
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                   ~^
                                |      |                   ||
                                |      |                   |(41) returning to ‘winlink_add’ from ‘winlink_find_by_index’
                                |      |                   (42) following ‘false’ branch...
                                |......
                                |  178 |         wl = xmalloc(sizeof *wl);       /* allocation site */
                                |      |              ~      
                                |      |              |
                                |      |              (43) ...to here
                                |......
                                |  181 |         RB_INSERT(winlinks, wwl, wl);
                                |      |         ~           
                                |      |         |
                                |      |         (44) calling ‘winlinks_RB_INSERT’ from ‘winlink_add’
                                |
                                +--> ‘winlinks_RB_INSERT’: events 45-47
                                       |
                                       |  110 | RB_GENERATE(winlinks, winlink, entry, winlink_cmp);
                                       |      | ^
                                       |      | |
                                       |      | (45) entry to ‘winlinks_RB_INSERT’
                                       |      | (46) following ‘false’ branch (when ‘parent_3’ is NULL)...
                                       |      | (47) ...to here
                                       |
                                <------+
                                |
                              ‘winlink_add’: event 48
                                |
                                |  181 |         RB_INSERT(winlinks, wwl, wl);
                                |      |         ^
                                |      |         |
                                |      |         (48) returning to ‘winlink_add’ from ‘winlinks_RB_INSERT’
                                |
                         <------+
                         |
                       ‘session_attach’: events 49-51
                         |
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |            ~      ^
                         |      |            |      |
                         |      |            |      (49) returning to ‘session_attach’ from ‘winlink_add’
                         |      |            (50) following ‘false’ branch (when ‘wl_8’ is non-NULL)...
                         |  353 |                 printf("index in use: %d\n", idx);
                         |  354 |         return (wl);
                         |      |                ~   
                         |      |                |
                         |      |                (51) ...to here
                         |
                  <------+
                  |
                ‘session_new’: event 52
                  |
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ^
                  |      |                 |
                  |      |                 (52) returning to ‘session_new’ from ‘session_attach’
                  |
           <------+
           |
         ‘session_create’: events 53-56
           |
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                    ~^
           |      |                    ||
           |      |                    |(53) returning to ‘session_create’ from ‘session_new’
           |      |                    (54) following ‘false’ branch...
           |......
           |  425 |                 session_select(s, RB_ROOT(&s->windows)->idx);
           |      |                 ~                 ~
           |      |                 |                 |
           |      |                 |                 (55) ...to here
           |      |                 (56) calling ‘session_select’ from ‘session_create’
           |
           +--> ‘session_select’: events 57-58
                  |
                  |  376 | session_select(struct session *s, int idx)
                  |      | ^
                  |      | |
                  |      | (57) entry to ‘session_select’
                  |......
                  |  380 |         wl = winlink_find_by_index(&s->windows, idx);
                  |      |              ~
                  |      |              |
                  |      |              (58) calling ‘winlink_find_by_index’ from ‘session_select’
                  |
                  +--> ‘winlink_find_by_index’: events 59-61
                         |
                         |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                         |      | ^
                         |      | |
                         |      | (59) entry to ‘winlink_find_by_index’
                         |......
                         |  130 |         if (idx < 0)
                         |      |            ~
                         |      |            |
                         |      |            (60) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                         |......
                         |  133 |         wl.idx = idx;
                         |      |                ~
                         |      |                |
                         |      |                (61) ...to here
                         |
                  <------+
                  |
                ‘session_select’: events 62-63
                  |
                  |  380 |         wl = winlink_find_by_index(&s->windows, idx);
                  |      |              ^
                  |      |              |
                  |      |              (62) returning to ‘session_select’ from ‘winlink_find_by_index’
                  |  381 |         if (wl == NULL)
                  |      |            ~  
                  |      |            |
                  |      |            (63) following ‘true’ branch (when ‘wl_12’ is NULL)...
                  |
                ‘session_select’: event 64
                  |
                  |lto1:
                  | (64): ...to here
                  |
           <------+
           |
         ‘session_create’: event 65
           |
           |  425 |                 session_select(s, RB_ROOT(&s->windows)->idx);
           |      |                 ^
           |      |                 |
           |      |                 (65) returning to ‘session_create’ from ‘session_select’
           |
    <------+
    |
  ‘main’: events 66-69
    |
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ^
    |      |               |
    |      |               (66) returning to ‘main’ from ‘session_create’
    |  501 | 
    |  502 |         if(argc == 0)
    |      |           ~    
    |      |           |
    |      |           (67) following ‘false’ branch (when ‘argc_31(D) != 0’)...
    |......
    |  505 |                 name = strdup(argv[1]);
    |      |                        ~
    |      |                        |
    |      |                        (68) ...to here
    |  506 |                 dst = session_create(argv[1], "cmd", 1, 80, 40, &cause);
    |      |                       ~
    |      |                       |
    |      |                       (69) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 70-75
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (70) entry to ‘session_create’
           |......
           |  416 |         if(name == NULL)
           |      |           ~
           |      |           |
           |      |           (71) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (72) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~
           |      |            |
           |      |            (73) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (74) ...to here
           |      |                     (75) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 76-77
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (76) entry to ‘session_new’
                  |......
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ~
                  |      |             |
                  |      |             (77) calling ‘window_create1’ from ‘session_new’
                  |
                  +--> ‘window_create1’: events 78-82
                         |
                         |  321 | window_create1(u_int sx, u_int sy)
                         |      | ^
                         |      | |
                         |      | (78) entry to ‘window_create1’
                         |......
                         |  326 |         w = xmalloc(sizeof *w);
                         |      |             ~
                         |      |             |
                         |      |             (79) allocated here
                         |  327 |         w->name = NULL;
                         |      |                 ~
                         |      |                 |
                         |      |                 (80) assuming ‘w_43’ is non-NULL
                         |......
                         |  339 |         if (i == ARRAY_LENGTH(&windows))
                         |      |            ~
                         |      |            |
                         |      |            (81) following ‘false’ branch...
                         |  340 |                 ARRAY_ADD(&windows, w);
                         |  341 |         w->references = 0;
                         |      |                       ~
                         |      |                       |
                         |      |                       (82) ...to here
                         |
                  <------+
                  |
                ‘session_new’: events 83-86
                  |
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ^
                  |      |             |
                  |      |             (83) returning to ‘session_new’ from ‘window_create1’
                  |  368 |         if (w == NULL) {
                  |      |            ~ 
                  |      |            |
                  |      |            (84) following ‘false’ branch (when ‘w_8’ is non-NULL)...
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ~
                  |      |                 |
                  |      |                 (85) ...to here
                  |      |                 (86) calling ‘session_attach’ from ‘session_new’
                  |
                  +--> ‘session_attach’: events 87-88
                         |
                         |  348 | session_attach(struct session *s, struct window *w, int idx, char **cause)
                         |      | ^
                         |      | |
                         |      | (87) entry to ‘session_attach’
                         |......
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |                   ~
                         |      |                   |
                         |      |                   (88) calling ‘winlink_add’ from ‘session_attach’
                         |
                         +--> ‘winlink_add’: events 89-92
                                |
                                |  168 | winlink_add(struct winlinks *wwl, struct window *w, int idx)
                                |      | ^
                                |      | |
                                |      | (89) entry to ‘winlink_add’
                                |......
                                |  172 |         if (idx < 0) {
                                |      |            ~
                                |      |            |
                                |      |            (90) following ‘false’ branch (when ‘idx_9(D) >= 0’)...
                                |......
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                    ~
                                |      |                    |
                                |      |                    (91) ...to here
                                |      |                    (92) calling ‘winlink_find_by_index’ from ‘winlink_add’
                                |
                                +--> ‘winlink_find_by_index’: events 93-95
                                       |
                                       |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                                       |      | ^
                                       |      | |
                                       |      | (93) entry to ‘winlink_find_by_index’
                                       |......
                                       |  130 |         if (idx < 0)
                                       |      |            ~
                                       |      |            |
                                       |      |            (94) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                                       |......
                                       |  133 |         wl.idx = idx;
                                       |      |                ~
                                       |      |                |
                                       |      |                (95) ...to here
                                       |
                                <------+
                                |
                              ‘winlink_add’: events 96-98
                                |
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                   ~^
                                |      |                   ||
                                |      |                   |(96) returning to ‘winlink_add’ from ‘winlink_find_by_index’
                                |      |                   (97) following ‘false’ branch...
                                |......
                                |  178 |         wl = xmalloc(sizeof *wl);       /* allocation site */
                                |      |              ~      
                                |      |              |
                                |      |              (98) ...to here
                                |
                         <------+
                         |
                       ‘session_attach’: events 99-101
                         |
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |            ~      ^
                         |      |            |      |
                         |      |            |      (99) returning to ‘session_attach’ from ‘winlink_add’
                         |      |            (100) following ‘false’ branch (when ‘wl_8’ is non-NULL)...
                         |  353 |                 printf("index in use: %d\n", idx);
                         |  354 |         return (wl);
                         |      |                ~   
                         |      |                |
                         |      |                (101) ...to here
                         |
                  <------+
                  |
                ‘session_new’: event 102
                  |
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ^
                  |      |                 |
                  |      |                 (102) returning to ‘session_new’ from ‘session_attach’
                  |
           <------+
           |
         ‘session_create’: events 103-104
           |
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                    ~^
           |      |                    ||
           |      |                    |(103) returning to ‘session_create’ from ‘session_new’
           |      |                    (104) ‘<unknown>’ leaks here; was allocated at (79)
           |
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:367:13: warning: leak of ‘session_new (s_52, 0B, cmd_80(D), idx_81(D), cause_82(D))’ [CWE-401] [-Wanalyzer-malloc-leak]
  367 |         w = window_create1(s->sx, s->sy);
      |             ^
  ‘main’: events 1-2
    |
    |  489 | int main(int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ~
    |      |               |
    |      |               (2) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 3-12
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (3) entry to ‘session_create’
           |......
           |  408 |         for (i = 0; i < ARRAY_LENGTH(&sessions); i++) {
           |      |                       ~
           |      |                       |
           |      |                       (4) following ‘false’ branch...
           |......
           |  414 |         if (i == ARRAY_LENGTH(&sessions))
           |      |            ~     ~
           |      |            |     |
           |      |            |     (5) ...to here
           |      |            (6) following ‘true’ branch...
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ~
           |      |                 |
           |      |                 (7) ...to here
           |      |                 (8) following ‘false’ branch...
           |      |                 (9) ...to here
           |      |                 (10) following ‘true’ branch...
           |      |                 (11) ...to here
           |      |                 (12) calling ‘xrealloc’ from ‘session_create’
           |
           +--> ‘xrealloc’: events 13-19
                  |
                  |   73 | xrealloc(void *oldptr, size_t nmemb, size_t size)
                  |      | ^
                  |      | |
                  |      | (13) entry to ‘xrealloc’
                  |......
                  |   78 |         if (newsize == 0)
                  |      |            ~
                  |      |            |
                  |      |            (14) following ‘false’ branch (when ‘newsize_4 != 0’)...
                  |   79 |                 fatalx("zero size%s", "");
                  |   80 |         if (SIZE_MAX / nmemb < size)
                  |      |            ~         ~
                  |      |            |         |
                  |      |            |         (15) ...to here
                  |      |            (16) following ‘false’ branch...
                  |   81 |                 fatalx("nmemb * size > SIZE_MAX%s", "");
                  |   82 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
                  |      |            ~          ~
                  |      |            |          |
                  |      |            |          (17) ...to here
                  |      |            (18) following ‘false’ branch (when ‘newptr_8’ is non-NULL)...
                  |......
                  |   85 |         return (newptr);
                  |      |                ~
                  |      |                |
                  |      |                (19) ...to here
                  |
           <------+
           |
         ‘session_create’: events 20-27
           |
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ^
           |      |                 |
           |      |                 (20) returning to ‘session_create’ from ‘xrealloc’
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |  416 |         if(name == NULL)
           |      |           ~      
           |      |           |
           |      |           (23) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (24) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~     
           |      |            |
           |      |            (25) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (26) ...to here
           |      |                     (27) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 28-31
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (28) entry to ‘session_new’
                  |......
                  |  368 |         if (w == NULL) {
                  |      |            ~
                  |      |            |
                  |      |            (29) following ‘false’ branch (when ‘w_8’ is non-NULL)...
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ~
                  |      |                 |
                  |      |                 (30) ...to here
                  |      |                 (31) calling ‘session_attach’ from ‘session_new’
                  |
                  +--> ‘session_attach’: events 32-33
                         |
                         |  348 | session_attach(struct session *s, struct window *w, int idx, char **cause)
                         |      | ^
                         |      | |
                         |      | (32) entry to ‘session_attach’
                         |......
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |                   ~
                         |      |                   |
                         |      |                   (33) calling ‘winlink_add’ from ‘session_attach’
                         |
                         +--> ‘winlink_add’: events 34-37
                                |
                                |  168 | winlink_add(struct winlinks *wwl, struct window *w, int idx)
                                |      | ^
                                |      | |
                                |      | (34) entry to ‘winlink_add’
                                |......
                                |  172 |         if (idx < 0) {
                                |      |            ~
                                |      |            |
                                |      |            (35) following ‘false’ branch (when ‘idx_9(D) >= 0’)...
                                |......
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                    ~
                                |      |                    |
                                |      |                    (36) ...to here
                                |      |                    (37) calling ‘winlink_find_by_index’ from ‘winlink_add’
                                |
                                +--> ‘winlink_find_by_index’: events 38-40
                                       |
                                       |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                                       |      | ^
                                       |      | |
                                       |      | (38) entry to ‘winlink_find_by_index’
                                       |......
                                       |  130 |         if (idx < 0)
                                       |      |            ~
                                       |      |            |
                                       |      |            (39) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                                       |......
                                       |  133 |         wl.idx = idx;
                                       |      |                ~
                                       |      |                |
                                       |      |                (40) ...to here
                                       |
                                <------+
                                |
                              ‘winlink_add’: events 41-45
                                |
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                   ~^
                                |      |                   ||
                                |      |                   |(41) returning to ‘winlink_add’ from ‘winlink_find_by_index’
                                |      |                   (42) following ‘false’ branch...
                                |......
                                |  178 |         wl = xmalloc(sizeof *wl);       /* allocation site */
                                |      |              ~      
                                |      |              |
                                |      |              (43) ...to here
                                |      |              (44) allocated here
                                |  179 |         wl->idx = idx;
                                |      |                 ~   
                                |      |                 |
                                |      |                 (45) assuming ‘wl_16’ is non-NULL
                                |
                         <------+
                         |
                       ‘session_attach’: events 46-48
                         |
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |            ~      ^
                         |      |            |      |
                         |      |            |      (46) returning to ‘session_attach’ from ‘winlink_add’
                         |      |            (47) following ‘false’ branch (when ‘wl_8’ is non-NULL)...
                         |  353 |                 printf("index in use: %d\n", idx);
                         |  354 |         return (wl);
                         |      |                ~   
                         |      |                |
                         |      |                (48) ...to here
                         |
                  <------+
                  |
                ‘session_new’: event 49
                  |
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ^
                  |      |                 |
                  |      |                 (49) returning to ‘session_new’ from ‘session_attach’
                  |
           <------+
           |
         ‘session_create’: events 50-51
           |
           |  367 |         w = window_create1(s->sx, s->sy);
           |      |             ~        
           |      |             |
           |      |             (51) ‘session_new (s_52, 0B, cmd_80(D), idx_81(D), cause_82(D))’ leaks here; was allocated at (44)
           |......
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ^
           |      |                     |
           |      |                     (50) returning to ‘session_create’ from ‘session_new’
           |
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘session_new’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:354:16: warning: leak of ‘w_8’ [CWE-401] [-Wanalyzer-malloc-leak]
  354 |         return (wl);
      |                ^
  ‘main’: events 1-2
    |
    |  489 | int main(int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ~
    |      |               |
    |      |               (2) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 3-12
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (3) entry to ‘session_create’
           |......
           |  408 |         for (i = 0; i < ARRAY_LENGTH(&sessions); i++) {
           |      |                       ~
           |      |                       |
           |      |                       (4) following ‘false’ branch...
           |......
           |  414 |         if (i == ARRAY_LENGTH(&sessions))
           |      |            ~     ~
           |      |            |     |
           |      |            |     (5) ...to here
           |      |            (6) following ‘true’ branch...
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ~
           |      |                 |
           |      |                 (7) ...to here
           |      |                 (8) following ‘false’ branch...
           |      |                 (9) ...to here
           |      |                 (10) following ‘true’ branch...
           |      |                 (11) ...to here
           |      |                 (12) calling ‘xrealloc’ from ‘session_create’
           |
           +--> ‘xrealloc’: events 13-19
                  |
                  |   73 | xrealloc(void *oldptr, size_t nmemb, size_t size)
                  |      | ^
                  |      | |
                  |      | (13) entry to ‘xrealloc’
                  |......
                  |   78 |         if (newsize == 0)
                  |      |            ~
                  |      |            |
                  |      |            (14) following ‘false’ branch (when ‘newsize_4 != 0’)...
                  |   79 |                 fatalx("zero size%s", "");
                  |   80 |         if (SIZE_MAX / nmemb < size)
                  |      |            ~         ~
                  |      |            |         |
                  |      |            |         (15) ...to here
                  |      |            (16) following ‘false’ branch...
                  |   81 |                 fatalx("nmemb * size > SIZE_MAX%s", "");
                  |   82 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
                  |      |            ~          ~
                  |      |            |          |
                  |      |            |          (17) ...to here
                  |      |            (18) following ‘false’ branch (when ‘newptr_8’ is non-NULL)...
                  |......
                  |   85 |         return (newptr);
                  |      |                ~
                  |      |                |
                  |      |                (19) ...to here
                  |
           <------+
           |
         ‘session_create’: events 20-27
           |
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ^
           |      |                 |
           |      |                 (20) returning to ‘session_create’ from ‘xrealloc’
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |  416 |         if(name == NULL)
           |      |           ~      
           |      |           |
           |      |           (23) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (24) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~     
           |      |            |
           |      |            (25) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (26) ...to here
           |      |                     (27) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 28-31
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (28) entry to ‘session_new’
                  |......
                  |  368 |         if (w == NULL) {
                  |      |            ~
                  |      |            |
                  |      |            (29) following ‘false’ branch (when ‘w_8’ is non-NULL)...
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ~
                  |      |                 |
                  |      |                 (30) ...to here
                  |      |                 (31) calling ‘session_attach’ from ‘session_new’
                  |
                  +--> ‘session_attach’: events 32-33
                         |
                         |  348 | session_attach(struct session *s, struct window *w, int idx, char **cause)
                         |      | ^
                         |      | |
                         |      | (32) entry to ‘session_attach’
                         |......
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |                   ~
                         |      |                   |
                         |      |                   (33) calling ‘winlink_add’ from ‘session_attach’
                         |
                         +--> ‘winlink_add’: events 34-37
                                |
                                |  168 | winlink_add(struct winlinks *wwl, struct window *w, int idx)
                                |      | ^
                                |      | |
                                |      | (34) entry to ‘winlink_add’
                                |......
                                |  172 |         if (idx < 0) {
                                |      |            ~
                                |      |            |
                                |      |            (35) following ‘false’ branch (when ‘idx_9(D) >= 0’)...
                                |......
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                    ~
                                |      |                    |
                                |      |                    (36) ...to here
                                |      |                    (37) calling ‘winlink_find_by_index’ from ‘winlink_add’
                                |
                                +--> ‘winlink_find_by_index’: events 38-40
                                       |
                                       |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                                       |      | ^
                                       |      | |
                                       |      | (38) entry to ‘winlink_find_by_index’
                                       |......
                                       |  130 |         if (idx < 0)
                                       |      |            ~
                                       |      |            |
                                       |      |            (39) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                                       |......
                                       |  133 |         wl.idx = idx;
                                       |      |                ~
                                       |      |                |
                                       |      |                (40) ...to here
                                       |
                                <------+
                                |
                              ‘winlink_add’: events 41-44
                                |
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                   ~^
                                |      |                   ||
                                |      |                   |(41) returning to ‘winlink_add’ from ‘winlink_find_by_index’
                                |      |                   (42) following ‘false’ branch...
                                |......
                                |  178 |         wl = xmalloc(sizeof *wl);       /* allocation site */
                                |      |              ~      
                                |      |              |
                                |      |              (43) ...to here
                                |......
                                |  181 |         RB_INSERT(winlinks, wwl, wl);
                                |      |         ~           
                                |      |         |
                                |      |         (44) calling ‘winlinks_RB_INSERT’ from ‘winlink_add’
                                |
                                +--> ‘winlinks_RB_INSERT’: events 45-47
                                       |
                                       |  110 | RB_GENERATE(winlinks, winlink, entry, winlink_cmp);
                                       |      | ^
                                       |      | |
                                       |      | (45) entry to ‘winlinks_RB_INSERT’
                                       |      | (46) following ‘false’ branch (when ‘parent_3’ is NULL)...
                                       |      | (47) ...to here
                                       |
                                <------+
                                |
                              ‘winlink_add’: event 48
                                |
                                |  181 |         RB_INSERT(winlinks, wwl, wl);
                                |      |         ^
                                |      |         |
                                |      |         (48) returning to ‘winlink_add’ from ‘winlinks_RB_INSERT’
                                |
                         <------+
                         |
                       ‘session_attach’: events 49-51
                         |
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |            ~      ^
                         |      |            |      |
                         |      |            |      (49) returning to ‘session_attach’ from ‘winlink_add’
                         |      |            (50) following ‘false’ branch (when ‘wl_8’ is non-NULL)...
                         |  353 |                 printf("index in use: %d\n", idx);
                         |  354 |         return (wl);
                         |      |                ~   
                         |      |                |
                         |      |                (51) ...to here
                         |
                  <------+
                  |
                ‘session_new’: event 52
                  |
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ^
                  |      |                 |
                  |      |                 (52) returning to ‘session_new’ from ‘session_attach’
                  |
           <------+
           |
         ‘session_create’: events 53-56
           |
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                    ~^
           |      |                    ||
           |      |                    |(53) returning to ‘session_create’ from ‘session_new’
           |      |                    (54) following ‘false’ branch...
           |......
           |  425 |                 session_select(s, RB_ROOT(&s->windows)->idx);
           |      |                 ~                 ~
           |      |                 |                 |
           |      |                 |                 (55) ...to here
           |      |                 (56) calling ‘session_select’ from ‘session_create’
           |
           +--> ‘session_select’: events 57-58
                  |
                  |  376 | session_select(struct session *s, int idx)
                  |      | ^
                  |      | |
                  |      | (57) entry to ‘session_select’
                  |......
                  |  380 |         wl = winlink_find_by_index(&s->windows, idx);
                  |      |              ~
                  |      |              |
                  |      |              (58) calling ‘winlink_find_by_index’ from ‘session_select’
                  |
                  +--> ‘winlink_find_by_index’: events 59-61
                         |
                         |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                         |      | ^
                         |      | |
                         |      | (59) entry to ‘winlink_find_by_index’
                         |......
                         |  130 |         if (idx < 0)
                         |      |            ~
                         |      |            |
                         |      |            (60) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                         |......
                         |  133 |         wl.idx = idx;
                         |      |                ~
                         |      |                |
                         |      |                (61) ...to here
                         |
                  <------+
                  |
                ‘session_select’: events 62-63
                  |
                  |  380 |         wl = winlink_find_by_index(&s->windows, idx);
                  |      |              ^
                  |      |              |
                  |      |              (62) returning to ‘session_select’ from ‘winlink_find_by_index’
                  |  381 |         if (wl == NULL)
                  |      |            ~  
                  |      |            |
                  |      |            (63) following ‘true’ branch (when ‘wl_12’ is NULL)...
                  |
                ‘session_select’: event 64
                  |
                  |lto1:
                  | (64): ...to here
                  |
           <------+
           |
         ‘session_create’: event 65
           |
           |  425 |                 session_select(s, RB_ROOT(&s->windows)->idx);
           |      |                 ^
           |      |                 |
           |      |                 (65) returning to ‘session_create’ from ‘session_select’
           |
    <------+
    |
  ‘main’: events 66-69
    |
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ^
    |      |               |
    |      |               (66) returning to ‘main’ from ‘session_create’
    |  501 | 
    |  502 |         if(argc == 0)
    |      |           ~    
    |      |           |
    |      |           (67) following ‘false’ branch (when ‘argc_31(D) != 0’)...
    |......
    |  505 |                 name = strdup(argv[1]);
    |      |                        ~
    |      |                        |
    |      |                        (68) ...to here
    |  506 |                 dst = session_create(argv[1], "cmd", 1, 80, 40, &cause);
    |      |                       ~
    |      |                       |
    |      |                       (69) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 70-75
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (70) entry to ‘session_create’
           |......
           |  416 |         if(name == NULL)
           |      |           ~
           |      |           |
           |      |           (71) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (72) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~
           |      |            |
           |      |            (73) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (74) ...to here
           |      |                     (75) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 76-77
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (76) entry to ‘session_new’
                  |......
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ~
                  |      |             |
                  |      |             (77) calling ‘window_create1’ from ‘session_new’
                  |
                  +--> ‘window_create1’: events 78-82
                         |
                         |  321 | window_create1(u_int sx, u_int sy)
                         |      | ^
                         |      | |
                         |      | (78) entry to ‘window_create1’
                         |......
                         |  326 |         w = xmalloc(sizeof *w);
                         |      |             ~
                         |      |             |
                         |      |             (79) allocated here
                         |  327 |         w->name = NULL;
                         |      |                 ~
                         |      |                 |
                         |      |                 (80) assuming ‘w_43’ is non-NULL
                         |......
                         |  339 |         if (i == ARRAY_LENGTH(&windows))
                         |      |            ~
                         |      |            |
                         |      |            (81) following ‘false’ branch...
                         |  340 |                 ARRAY_ADD(&windows, w);
                         |  341 |         w->references = 0;
                         |      |                       ~
                         |      |                       |
                         |      |                       (82) ...to here
                         |
                  <------+
                  |
                ‘session_new’: events 83-86
                  |
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ^
                  |      |             |
                  |      |             (83) returning to ‘session_new’ from ‘window_create1’
                  |  368 |         if (w == NULL) {
                  |      |            ~ 
                  |      |            |
                  |      |            (84) following ‘false’ branch (when ‘w_8’ is non-NULL)...
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ~
                  |      |                 |
                  |      |                 (85) ...to here
                  |      |                 (86) calling ‘session_attach’ from ‘session_new’
                  |
                  +--> ‘session_attach’: events 87-88
                         |
                         |  348 | session_attach(struct session *s, struct window *w, int idx, char **cause)
                         |      | ^
                         |      | |
                         |      | (87) entry to ‘session_attach’
                         |......
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |                   ~
                         |      |                   |
                         |      |                   (88) calling ‘winlink_add’ from ‘session_attach’
                         |
                         +--> ‘winlink_add’: events 89-92
                                |
                                |  168 | winlink_add(struct winlinks *wwl, struct window *w, int idx)
                                |      | ^
                                |      | |
                                |      | (89) entry to ‘winlink_add’
                                |......
                                |  172 |         if (idx < 0) {
                                |      |            ~
                                |      |            |
                                |      |            (90) following ‘false’ branch (when ‘idx_9(D) >= 0’)...
                                |......
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                    ~
                                |      |                    |
                                |      |                    (91) ...to here
                                |      |                    (92) calling ‘winlink_find_by_index’ from ‘winlink_add’
                                |
                                +--> ‘winlink_find_by_index’: events 93-96
                                       |
                                       |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                                       |      | ^
                                       |      | |
                                       |      | (93) entry to ‘winlink_find_by_index’
                                       |......
                                       |  130 |         if (idx < 0)
                                       |      |            ~
                                       |      |            |
                                       |      |            (94) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                                       |......
                                       |  133 |         wl.idx = idx;
                                       |      |                ~
                                       |      |                |
                                       |      |                (95) ...to here
                                       |  134 |         return (RB_FIND(winlinks, wwl, &wl));
                                       |      |                 ~
                                       |      |                 |
                                       |      |                 (96) calling ‘winlinks_RB_FIND’ from ‘winlink_find_by_index’
                                       |
                                       +--> ‘winlinks_RB_FIND’: events 97-99
                                              |
                                              |  110 | RB_GENERATE(winlinks, winlink, entry, winlink_cmp);
                                              |      | ^
                                              |      | |
                                              |      | (97) entry to ‘winlinks_RB_FIND’
                                              |      | (98) following ‘true’ branch (when ‘tmp_1’ is non-NULL)...
                                              |      | (99) ...to here
                                              |
                                       <------+
                                       |
                                     ‘winlink_find_by_index’: event 100
                                       |
                                       |  134 |         return (RB_FIND(winlinks, wwl, &wl));
                                       |      |                 ^
                                       |      |                 |
                                       |      |                 (100) returning to ‘winlink_find_by_index’ from ‘winlinks_RB_FIND’
                                       |
                                <------+
                                |
                              ‘winlink_add’: events 101-102
                                |
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                   ~^
                                |      |                   ||
                                |      |                   |(101) returning to ‘winlink_add’ from ‘winlink_find_by_index’
                                |      |                   (102) following ‘true’ branch...
                                |
                              ‘winlink_add’: event 103
                                |
                                |lto1:
                                | (103): ...to here
                                |
                         <------+
                         |
                       ‘session_attach’: events 104-106
                         |
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |            ~      ^
                         |      |            |      |
                         |      |            |      (104) returning to ‘session_attach’ from ‘winlink_add’
                         |      |            (105) following ‘true’ branch (when ‘wl_8’ is NULL)...
                         |  353 |                 printf("index in use: %d\n", idx);
                         |      |                 ~  
                         |      |                 |
                         |      |                 (106) ...to here
                         |
                  <------+
                  |
                ‘session_new’: events 107-108
                  |
                  |  354 |         return (wl);
                  |      |                ~ 
                  |      |                |
                  |      |                (108) ‘w_8’ leaks here; was allocated at (79)
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ^
                  |      |                 |
                  |      |                 (107) returning to ‘session_new’ from ‘session_attach’
                  |
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘window_create1’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:327:17: warning: dereference of possibly-NULL ‘w_43’ [CWE-690] [-Wanalyzer-possible-null-dereference]
  327 |         w->name = NULL;
      |                 ^
  ‘main’: events 1-2
    |
    |  489 | int main(int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ~
    |      |               |
    |      |               (2) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 3-12
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (3) entry to ‘session_create’
           |......
           |  408 |         for (i = 0; i < ARRAY_LENGTH(&sessions); i++) {
           |      |                       ~
           |      |                       |
           |      |                       (4) following ‘false’ branch...
           |......
           |  414 |         if (i == ARRAY_LENGTH(&sessions))
           |      |            ~     ~
           |      |            |     |
           |      |            |     (5) ...to here
           |      |            (6) following ‘true’ branch...
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ~
           |      |                 |
           |      |                 (7) ...to here
           |      |                 (8) following ‘false’ branch...
           |      |                 (9) ...to here
           |      |                 (10) following ‘true’ branch...
           |      |                 (11) ...to here
           |      |                 (12) calling ‘xrealloc’ from ‘session_create’
           |
           +--> ‘xrealloc’: events 13-19
                  |
                  |   73 | xrealloc(void *oldptr, size_t nmemb, size_t size)
                  |      | ^
                  |      | |
                  |      | (13) entry to ‘xrealloc’
                  |......
                  |   78 |         if (newsize == 0)
                  |      |            ~
                  |      |            |
                  |      |            (14) following ‘false’ branch (when ‘newsize_4 != 0’)...
                  |   79 |                 fatalx("zero size%s", "");
                  |   80 |         if (SIZE_MAX / nmemb < size)
                  |      |            ~         ~
                  |      |            |         |
                  |      |            |         (15) ...to here
                  |      |            (16) following ‘false’ branch...
                  |   81 |                 fatalx("nmemb * size > SIZE_MAX%s", "");
                  |   82 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
                  |      |            ~          ~
                  |      |            |          |
                  |      |            |          (17) ...to here
                  |      |            (18) following ‘false’ branch (when ‘newptr_8’ is non-NULL)...
                  |......
                  |   85 |         return (newptr);
                  |      |                ~
                  |      |                |
                  |      |                (19) ...to here
                  |
           <------+
           |
         ‘session_create’: events 20-27
           |
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ^
           |      |                 |
           |      |                 (20) returning to ‘session_create’ from ‘xrealloc’
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |  416 |         if(name == NULL)
           |      |           ~      
           |      |           |
           |      |           (23) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (24) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~     
           |      |            |
           |      |            (25) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (26) ...to here
           |      |                     (27) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 28-29
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (28) entry to ‘session_new’
                  |......
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ~
                  |      |             |
                  |      |             (29) calling ‘window_create1’ from ‘session_new’
                  |
                  +--> ‘window_create1’: events 30-32
                         |
                         |  321 | window_create1(u_int sx, u_int sy)
                         |      | ^
                         |      | |
                         |      | (30) entry to ‘window_create1’
                         |......
                         |  326 |         w = xmalloc(sizeof *w);
                         |      |             ~
                         |      |             |
                         |      |             (31) this call could return NULL
                         |  327 |         w->name = NULL;
                         |      |                 ~
                         |      |                 |
                         |      |                 (32) ‘w_43’ could be NULL: unchecked value from (31)
                         |
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c: In function ‘winlink_add’:
./benchmarks/tmux/use_after_free_6/tmux_uaf_6.c:179:17: warning: dereference of possibly-NULL ‘wl_16’ [CWE-690] [-Wanalyzer-possible-null-dereference]
  179 |         wl->idx = idx;
      |                 ^
  ‘main’: events 1-2
    |
    |  489 | int main(int argc, char **argv)
    |      |     ^
    |      |     |
    |      |     (1) entry to ‘main’
    |......
    |  500 |         src = session_create(argv[0], "cmd", 0, 80, 40, &cause);
    |      |               ~
    |      |               |
    |      |               (2) calling ‘session_create’ from ‘main’
    |
    +--> ‘session_create’: events 3-12
           |
           |  392 | session_create(const char *name, const char *cmd, int idx, u_int sx, u_int sy, char **cause)
           |      | ^
           |      | |
           |      | (3) entry to ‘session_create’
           |......
           |  408 |         for (i = 0; i < ARRAY_LENGTH(&sessions); i++) {
           |      |                       ~
           |      |                       |
           |      |                       (4) following ‘false’ branch...
           |......
           |  414 |         if (i == ARRAY_LENGTH(&sessions))
           |      |            ~     ~
           |      |            |     |
           |      |            |     (5) ...to here
           |      |            (6) following ‘true’ branch...
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ~
           |      |                 |
           |      |                 (7) ...to here
           |      |                 (8) following ‘false’ branch...
           |      |                 (9) ...to here
           |      |                 (10) following ‘true’ branch...
           |      |                 (11) ...to here
           |      |                 (12) calling ‘xrealloc’ from ‘session_create’
           |
           +--> ‘xrealloc’: events 13-19
                  |
                  |   73 | xrealloc(void *oldptr, size_t nmemb, size_t size)
                  |      | ^
                  |      | |
                  |      | (13) entry to ‘xrealloc’
                  |......
                  |   78 |         if (newsize == 0)
                  |      |            ~
                  |      |            |
                  |      |            (14) following ‘false’ branch (when ‘newsize_4 != 0’)...
                  |   79 |                 fatalx("zero size%s", "");
                  |   80 |         if (SIZE_MAX / nmemb < size)
                  |      |            ~         ~
                  |      |            |         |
                  |      |            |         (15) ...to here
                  |      |            (16) following ‘false’ branch...
                  |   81 |                 fatalx("nmemb * size > SIZE_MAX%s", "");
                  |   82 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
                  |      |            ~          ~
                  |      |            |          |
                  |      |            |          (17) ...to here
                  |      |            (18) following ‘false’ branch (when ‘newptr_8’ is non-NULL)...
                  |......
                  |   85 |         return (newptr);
                  |      |                ~
                  |      |                |
                  |      |                (19) ...to here
                  |
           <------+
           |
         ‘session_create’: events 20-27
           |
           |  415 |                 ARRAY_ADD(&sessions, s);
           |      |                 ^
           |      |                 |
           |      |                 (20) returning to ‘session_create’ from ‘xrealloc’
           |      |                 (21) following ‘false’ branch...
           |      |                 (22) ...to here
           |  416 |         if(name == NULL)
           |      |           ~      
           |      |           |
           |      |           (23) following ‘false’ branch (when ‘name_77(D)’ is non-NULL)...
           |  417 |                 fatal("no name%s\n", "");
           |  418 |         s->name = xstrdup(name);
           |      |                   ~
           |      |                   |
           |      |                   (24) ...to here
           |  419 | 
           |  420 |         if (cmd != NULL) {
           |      |            ~     
           |      |            |
           |      |            (25) following ‘true’ branch (when ‘cmd_80(D)’ is non-NULL)...
           |  421 |                 if (session_new(s, NULL, cmd, idx, cause) == NULL) {
           |      |                     ~
           |      |                     |
           |      |                     (26) ...to here
           |      |                     (27) calling ‘session_new’ from ‘session_create’
           |
           +--> ‘session_new’: events 28-29
                  |
                  |  359 | session_new(struct session *s,
                  |      | ^
                  |      | |
                  |      | (28) entry to ‘session_new’
                  |......
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ~
                  |      |             |
                  |      |             (29) calling ‘window_create1’ from ‘session_new’
                  |
                  +--> ‘window_create1’: events 30-32
                         |
                         |  321 | window_create1(u_int sx, u_int sy)
                         |      | ^
                         |      | |
                         |      | (30) entry to ‘window_create1’
                         |......
                         |  339 |         if (i == ARRAY_LENGTH(&windows))
                         |      |            ~
                         |      |            |
                         |      |            (31) following ‘false’ branch...
                         |  340 |                 ARRAY_ADD(&windows, w);
                         |  341 |         w->references = 0;
                         |      |                       ~
                         |      |                       |
                         |      |                       (32) ...to here
                         |
                  <------+
                  |
                ‘session_new’: events 33-36
                  |
                  |  367 |         w = window_create1(s->sx, s->sy);
                  |      |             ^
                  |      |             |
                  |      |             (33) returning to ‘session_new’ from ‘window_create1’
                  |  368 |         if (w == NULL) {
                  |      |            ~ 
                  |      |            |
                  |      |            (34) following ‘false’ branch (when ‘w_8’ is non-NULL)...
                  |......
                  |  371 |         return (session_attach(s, w, idx, cause));
                  |      |                 ~
                  |      |                 |
                  |      |                 (35) ...to here
                  |      |                 (36) calling ‘session_attach’ from ‘session_new’
                  |
                  +--> ‘session_attach’: events 37-38
                         |
                         |  348 | session_attach(struct session *s, struct window *w, int idx, char **cause)
                         |      | ^
                         |      | |
                         |      | (37) entry to ‘session_attach’
                         |......
                         |  352 |         if ((wl = winlink_add(&s->windows, w, idx)) == NULL)
                         |      |                   ~
                         |      |                   |
                         |      |                   (38) calling ‘winlink_add’ from ‘session_attach’
                         |
                         +--> ‘winlink_add’: events 39-42
                                |
                                |  168 | winlink_add(struct winlinks *wwl, struct window *w, int idx)
                                |      | ^
                                |      | |
                                |      | (39) entry to ‘winlink_add’
                                |......
                                |  172 |         if (idx < 0) {
                                |      |            ~
                                |      |            |
                                |      |            (40) following ‘false’ branch (when ‘idx_9(D) >= 0’)...
                                |......
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                    ~
                                |      |                    |
                                |      |                    (41) ...to here
                                |      |                    (42) calling ‘winlink_find_by_index’ from ‘winlink_add’
                                |
                                +--> ‘winlink_find_by_index’: events 43-46
                                       |
                                       |  126 | winlink_find_by_index(struct winlinks *wwl, int idx)
                                       |      | ^
                                       |      | |
                                       |      | (43) entry to ‘winlink_find_by_index’
                                       |......
                                       |  130 |         if (idx < 0)
                                       |      |            ~
                                       |      |            |
                                       |      |            (44) following ‘false’ branch (when ‘idx_1(D) >= 0’)...
                                       |......
                                       |  133 |         wl.idx = idx;
                                       |      |                ~
                                       |      |                |
                                       |      |                (45) ...to here
                                       |  134 |         return (RB_FIND(winlinks, wwl, &wl));
                                       |      |                 ~
                                       |      |                 |
                                       |      |                 (46) calling ‘winlinks_RB_FIND’ from ‘winlink_find_by_index’
                                       |
                                       +--> ‘winlinks_RB_FIND’: events 47-48
                                              |
                                              |  110 | RB_GENERATE(winlinks, winlink, entry, winlink_cmp);
                                              |      | ^
                                              |      | |
                                              |      | (47) entry to ‘winlinks_RB_FIND’
                                              |      | (48) following ‘false’ branch (when ‘tmp_1’ is NULL)...
                                              |
                                            ‘winlinks_RB_FIND’: event 49
                                              |
                                              |lto1:
                                              | (49): ...to here
                                              |
                                       <------+
                                       |
                                     ‘winlink_find_by_index’: event 50
                                       |
                                       |  134 |         return (RB_FIND(winlinks, wwl, &wl));
                                       |      |                 ^
                                       |      |                 |
                                       |      |                 (50) returning to ‘winlink_find_by_index’ from ‘winlinks_RB_FIND’
                                       |
                                <------+
                                |
                              ‘winlink_add’: events 51-55
                                |
                                |  175 |         } else if (winlink_find_by_index(wwl, idx) != NULL)
                                |      |                   ~^
                                |      |                   ||
                                |      |                   |(51) returning to ‘winlink_add’ from ‘winlink_find_by_index’
                                |      |                   (52) following ‘false’ branch...
                                |......
                                |  178 |         wl = xmalloc(sizeof *wl);       /* allocation site */
                                |      |              ~      
                                |      |              |
                                |      |              (53) ...to here
                                |      |              (54) this call could return NULL
                                |  179 |         wl->idx = idx;
                                |      |                 ~   
                                |      |                 |
                                |      |                 (55) ‘wl_16’ could be NULL: unchecked value from (54)
                                |

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 74%)
 phase opt and generate             :   1.52 ( 99%)   0.08 (100%)   1.60 ( 99%)   637k ( 22%)
 phase stream in                    :   0.01 (  1%)   0.00 (  0%)   0.01 (  1%)   110k (  4%)
 lto stream decompression           :   0.01 (  1%)   0.00 (  0%)   0.01 (  1%)     0  (  0%)
 analyzer                           :   0.09 (  6%)   0.00 (  0%)   0.08 (  5%)     0  (  0%)
 analyzer: state purge              :   0.01 (  1%)   0.00 (  0%)   0.01 (  1%)     0  (  0%)
 analyzer: processing worklist      :   1.07 ( 70%)   0.06 ( 75%)   1.13 ( 70%)  1080  (  0%)
 analyzer: emitting diagnostics     :   0.24 ( 16%)   0.02 ( 25%)   0.28 ( 17%)   192  (  0%)
 analyzer: shortest paths           :   0.11 (  7%)   0.00 (  0%)   0.10 (  6%)     0  (  0%)
 TOTAL                              :   1.53          0.08          1.61         2907k

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 41%)
 phase opt and generate             :   0.09 (100%)   0.03 (100%)   0.13 (100%)  2961k ( 57%)
 dump files                         :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 callgraph functions expansion      :   0.08 ( 89%)   0.03 (100%)   0.12 ( 92%)  2337k ( 45%)
 ipa lto gimple in                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)   412k (  8%)
 ipa points-to                      :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    32k (  1%)
 cfg cleanup                        :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)  1552  (  0%)
 df live regs                       :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 df live&initialized regs           :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 alias stmt walking                 :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)  4288  (  0%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)  3088  (  0%)
 tree operand scan                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)   137k (  3%)
 dominator optimization             :   0.01 ( 11%)   0.00 (  0%)   0.01 (  8%)   152k (  3%)
 tree conservative DCE              :   0.00 (  0%)   0.01 ( 33%)   0.01 (  8%)  2184  (  0%)
 tree aggressive DCE                :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 gimple CSE sin/cos                 :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 dominance computation              :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 dead store elim1                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)    36k (  1%)
 integrated RA                      :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)   698k ( 13%)
 LRA virtuals elimination           :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)  1056  (  0%)
 thread pro- & epilogue             :   0.01 ( 11%)   0.01 ( 33%)   0.00 (  0%)    51k (  1%)
 rest of compilation                :   0.01 ( 11%)   0.01 ( 33%)   0.02 ( 15%)    78k (  2%)
 TOTAL                              :   0.09          0.03          0.13         5208k
