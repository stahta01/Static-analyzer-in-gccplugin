In file included from ./benchmarks/git/leak_7/git_leak_7.c:10:
./benchmarks/git/leak_7/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_7/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_7/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_7/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_7/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_7/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_7/../git.h: In function ‘move_array’:
./benchmarks/git/leak_7/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_7/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_7/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_7/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_7/git_leak_7.c:9:
./benchmarks/git/leak_7/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_7/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_7/git_leak_7.c:10:
./benchmarks/git/leak_7/../git.h: At top level:
./benchmarks/git/leak_7/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_7/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_7/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_7/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_7/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_7/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
In file included from ./benchmarks/git/leak_7/git_leak_7.c:9:
./benchmarks/git/leak_7/git_leak_7.c: In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:47:31: note: in expansion of macro ‘xstrdup’
   47 |                 entry->name = xstrdup(name);    /* allocation site */
      |                               ^~~~~~~
./benchmarks/git/leak_7/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:50:31: note: in expansion of macro ‘xstrdup’
   50 |                 entry->path = xstrdup(path);    /* allocation site */
      |                               ^~~~~~~
./benchmarks/git/leak_7/git_leak_7.c: In function ‘commit_is_complete’:
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   80 |         memset(&study, 0, sizeof(study));
      |         ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/leak_7/git_leak_7.c:80:9: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   80 |         memset(&study, 0, sizeof(study));
      |         ^~~~~~
./benchmarks/git/leak_7/git_leak_7.c:80:9: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/git/leak_7/git_leak_7.c:90:43: warning: implicit declaration of function ‘parse_object’ [-Wimplicit-function-declaration]
   90 |                 if (!c->object.parsed && !parse_object(&c->object.oid))
      |                                           ^~~~~~~~~~~~
./benchmarks/git/leak_7/git_leak_7.c:116:30: warning: implicit declaration of function ‘tree_is_complete’; did you mean ‘commit_is_complete’? [-Wimplicit-function-declaration]
  116 |                         if (!tree_is_complete(&c->tree->object.oid)) {
      |                              ^~~~~~~~~~~~~~~~
      |                              commit_is_complete

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 50%)
 phase parsing                      :   0.02 ( 67%)   0.01 (100%)   0.03 ( 75%)  1073k ( 41%)
 phase opt and generate             :   0.01 ( 33%)   0.00 (  0%)   0.01 ( 25%)   206k (  8%)
 preprocessing                      :   0.01 ( 33%)   0.00 (  0%)   0.02 ( 50%)   320k ( 12%)
 lexical analysis                   :   0.01 ( 33%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 (100%)   0.01 ( 25%)   567k ( 22%)
 tree gimplify                      :   0.01 ( 33%)   0.00 (  0%)   0.01 ( 25%)    62k (  2%)
 TOTAL                              :   0.03          0.01          0.04         2588k
./benchmarks/git/leak_7/git_leak_7.c: In function ‘add_object_array_with_path’:
./benchmarks/git/leak_7/git_leak_7.c:54:1: warning: leak of ‘strdup (name_27(D))’ [CWE-401] [-Wanalyzer-malloc-leak]
   54 | }
      | ^
  ‘add_object_array’: events 1-2
    |
    |   56 | void add_object_array(struct object *obj, const char *name, struct object_array *array)
    |      |      ^
    |      |      |
    |      |      (1) entry to ‘add_object_array’
    |   57 | {
    |   58 |         add_object_array_with_path(obj, name, array, S_IFINVALID, NULL);
    |      |         ~
    |      |         |
    |      |         (2) calling ‘add_object_array_with_path’ from ‘add_object_array’
    |
    +--> ‘add_object_array_with_path’: events 3-11
           |
           |   24 | void add_object_array_with_path(struct object *obj, const char *name,
           |      |      ^
           |      |      |
           |      |      (3) entry to ‘add_object_array_with_path’
           |......
           |   41 |         if (!name)
           |      |            ~
           |      |            |
           |      |            (4) following ‘false’ branch (when ‘name_27(D)’ is non-NULL)...
           |   42 |                 entry->name = NULL;
           |   43 |         else if (!*name)
           |      |                 ~ ~
           |      |                 | |
           |      |                 | (5) ...to here
           |      |                 (6) following ‘false’ branch...
           |......
           |   47 |                 entry->name = xstrdup(name);    /* allocation site */
           |      |                               ~
           |      |                               |
           |      |                               (7) ...to here
           |      |                               (8) allocated here
           |   48 |         entry->mode = mode;
           |   49 |         if (path)
           |      |            ~
           |      |            |
           |      |            (9) following ‘false’ branch (when ‘path_34(D)’ is NULL)...
           |......
           |   52 |                 entry->path = NULL;
           |      |                             ~
           |      |                             |
           |      |                             (10) ...to here
           |   53 |         array->nr = ++nr;
           |   54 | }
           |      | ~     
           |      | |
           |      | (11) ‘strdup (name_27(D))’ leaks here; was allocated at (8)
           |

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 92%)
 phase opt and generate             :   0.06 (100%)   0.00 (  0%)   0.06 (100%)   141k (  6%)
 analyzer                           :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 analyzer: state purge              :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 analyzer: processing worklist      :   0.05 ( 83%)   0.00 (  0%)   0.05 ( 83%)  1160  (  0%)
 TOTAL                              :   0.06          0.00          0.06         2356k

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 73%)
 phase opt and generate             :   0.03 (100%)   0.00 (  0%)   0.03 (100%)   753k ( 25%)
 callgraph functions expansion      :   0.03 (100%)   0.00 (  0%)   0.03 (100%)   595k ( 20%)
 lower subreg                       :   0.01 ( 33%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 forward prop                       :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)   288  (  0%)
 combiner                           :   0.01 ( 33%)   0.00 (  0%)   0.00 (  0%)    27k (  1%)
 reload CSE regs                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 33%)  4848  (  0%)
 initialize rtl                     :   0.01 ( 33%)   0.00 (  0%)   0.01 ( 33%)    12k (  0%)
 TOTAL                              :   0.03          0.00          0.03         2965k
/usr/bin/ld: /tmp/ccdqR4LF.ltrans0.ltrans.o: in function `add_object_array_with_path':
<artificial>:(.text+0x108): undefined reference to `st_mult'
/usr/bin/ld: /tmp/ccdqR4LF.ltrans0.ltrans.o: in function `commit_is_complete':
<artificial>:(.text+0x22f): undefined reference to `parse_object'
/usr/bin/ld: <artificial>:(.text+0x2bc): undefined reference to `tree_is_complete'
collect2: error: ld returned 1 exit status
